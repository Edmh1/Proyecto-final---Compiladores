
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUS_OPMINUS_OPleftMUL_OPDIV_OPleftLESS_OPLESS_EQUAL_OPGREATER_OPGREATER_EQUAL_OPEQUAL_OPDIFFERENT_OPleftLOGICAL_OP_ANDLOGICAL_OP_ORrightLOGICAL_OP_NOTASSIGNMENT_OP BREAK COMMENT CONDITIONAL1 CONDITIONAL2 DIFFERENT_OP DIV_OP END_LINE EQUAL_OP FALSE FUNCTION_DECLARATION GREATER_EQUAL_OP GREATER_OP LESS_EQUAL_OP LESS_OP LOGICAL_OP_AND LOGICAL_OP_NOT LOGICAL_OP_OR LOOP1 LOOP2 LPAREN MINUS_OP MUL_OP NULL NUMBER_FLOAT NUMBER_INTEGER PLUS_OP RETURN RPAREN SEPARATION STRUCTURE_BODY TEXT_CHAR TEXT_STRING TRUE TYPE_BOOLEAN TYPE_CHAR TYPE_FLOAT TYPE_INTEGER TYPE_STRING VARIABLEprogram : statement_liststatement_list : statement_list statement\n                      | statementstatement : expression END_LINE\n                 | assignment END_LINE\n                 | declaration END_LINE\n                 | conditional END_LINE\n                 | loop END_LINE\n                 | function_declaration END_LINE\n                 | return_statement END_LINE\n                 | break_statement END_LINE\n                 | COMMENTexpression : term\n                  | expression PLUS_OP term\n                  | expression MINUS_OP term\n                  | expression MUL_OP term\n                  | expression DIV_OP term\n                  | expression LESS_OP expression\n                  | expression LESS_EQUAL_OP expression\n                  | expression GREATER_OP expression\n                  | expression GREATER_EQUAL_OP expression\n                  | expression EQUAL_OP expression\n                  | expression DIFFERENT_OP expression\n                  | LOGICAL_OP_NOT expression\n                  | expression LOGICAL_OP_AND expression\n                  | expression LOGICAL_OP_OR expressionterm : NUMBER_INTEGER\n            | NUMBER_FLOAT\n            | TEXT_STRING\n            | TEXT_CHAR\n            | VARIABLE\n            | TRUE\n            | FALSE\n            | NULLassignment : VARIABLE ASSIGNMENT_OP expressiondeclaration : TYPE_BOOLEAN VARIABLE \n                   | TYPE_STRING VARIABLE\n                   | TYPE_CHAR VARIABLE\n                   | TYPE_INTEGER VARIABLE\n                   | TYPE_FLOAT VARIABLE\n                   | TYPE_BOOLEAN assignment\n                   | TYPE_STRING assignment\n                   | TYPE_CHAR assignment\n                   | TYPE_INTEGER assignment\n                   | TYPE_FLOAT assignmentconditional : CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list\n                   | CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_listloop : LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list\n            | LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_listfunction_declaration : FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_listreturn_statement : RETURN expression\n                        | RETURNbreak_statement : BREAKcomment : COMMENT'
    
_lr_action_items = {'COMMENT':([0,2,3,12,34,35,48,49,50,51,52,53,54,94,95,97,98,99,101,104,106,107,108,],[12,12,-3,-12,-2,-4,-5,-6,-7,-8,-9,-10,-11,12,12,12,12,12,12,12,12,12,12,]),'LOGICAL_OP_NOT':([0,2,3,12,14,25,34,35,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,68,69,70,92,94,95,97,98,99,100,101,104,106,107,108,],[14,14,-3,-12,14,14,-2,-4,14,14,14,14,14,14,14,14,-5,-6,-7,-8,-9,-10,-11,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'VARIABLE':([0,2,3,12,14,16,17,18,19,20,24,25,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,68,69,70,92,94,95,97,98,99,100,101,104,106,107,108,],[15,15,-3,-12,56,58,60,62,64,66,71,56,-2,-4,56,56,56,56,56,56,56,56,56,56,56,56,-5,-6,-7,-8,-9,-10,-11,56,56,56,56,56,15,15,15,15,15,56,15,15,15,15,15,]),'TYPE_BOOLEAN':([0,2,3,12,34,35,48,49,50,51,52,53,54,94,95,97,98,99,101,104,106,107,108,],[16,16,-3,-12,-2,-4,-5,-6,-7,-8,-9,-10,-11,16,16,16,16,16,16,16,16,16,16,]),'TYPE_STRING':([0,2,3,12,34,35,48,49,50,51,52,53,54,94,95,97,98,99,101,104,106,107,108,],[17,17,-3,-12,-2,-4,-5,-6,-7,-8,-9,-10,-11,17,17,17,17,17,17,17,17,17,17,]),'TYPE_CHAR':([0,2,3,12,34,35,48,49,50,51,52,53,54,94,95,97,98,99,101,104,106,107,108,],[18,18,-3,-12,-2,-4,-5,-6,-7,-8,-9,-10,-11,18,18,18,18,18,18,18,18,18,18,]),'TYPE_INTEGER':([0,2,3,12,34,35,48,49,50,51,52,53,54,94,95,97,98,99,101,104,106,107,108,],[19,19,-3,-12,-2,-4,-5,-6,-7,-8,-9,-10,-11,19,19,19,19,19,19,19,19,19,19,]),'TYPE_FLOAT':([0,2,3,12,34,35,48,49,50,51,52,53,54,94,95,97,98,99,101,104,106,107,108,],[20,20,-3,-12,-2,-4,-5,-6,-7,-8,-9,-10,-11,20,20,20,20,20,20,20,20,20,20,]),'CONDITIONAL1':([0,2,3,12,34,35,48,49,50,51,52,53,54,94,95,97,98,99,101,104,106,107,108,],[21,21,-3,-12,-2,-4,-5,-6,-7,-8,-9,-10,-11,21,21,21,21,21,21,21,21,21,21,]),'LOOP1':([0,2,3,12,34,35,48,49,50,51,52,53,54,94,95,97,98,99,101,104,106,107,108,],[22,22,-3,-12,-2,-4,-5,-6,-7,-8,-9,-10,-11,22,22,22,22,22,22,22,22,22,22,]),'LOOP2':([0,2,3,12,34,35,48,49,50,51,52,53,54,94,95,97,98,99,101,104,106,107,108,],[23,23,-3,-12,-2,-4,-5,-6,-7,-8,-9,-10,-11,23,23,23,23,23,23,23,23,23,23,]),'FUNCTION_DECLARATION':([0,2,3,12,34,35,48,49,50,51,52,53,54,94,95,97,98,99,101,104,106,107,108,],[24,24,-3,-12,-2,-4,-5,-6,-7,-8,-9,-10,-11,24,24,24,24,24,24,24,24,24,24,]),'RETURN':([0,2,3,12,34,35,48,49,50,51,52,53,54,94,95,97,98,99,101,104,106,107,108,],[25,25,-3,-12,-2,-4,-5,-6,-7,-8,-9,-10,-11,25,25,25,25,25,25,25,25,25,25,]),'BREAK':([0,2,3,12,34,35,48,49,50,51,52,53,54,94,95,97,98,99,101,104,106,107,108,],[26,26,-3,-12,-2,-4,-5,-6,-7,-8,-9,-10,-11,26,26,26,26,26,26,26,26,26,26,]),'NUMBER_INTEGER':([0,2,3,12,14,25,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,68,69,70,92,94,95,97,98,99,100,101,104,106,107,108,],[27,27,-3,-12,27,27,-2,-4,27,27,27,27,27,27,27,27,27,27,27,27,-5,-6,-7,-8,-9,-10,-11,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'NUMBER_FLOAT':([0,2,3,12,14,25,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,68,69,70,92,94,95,97,98,99,100,101,104,106,107,108,],[28,28,-3,-12,28,28,-2,-4,28,28,28,28,28,28,28,28,28,28,28,28,-5,-6,-7,-8,-9,-10,-11,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'TEXT_STRING':([0,2,3,12,14,25,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,68,69,70,92,94,95,97,98,99,100,101,104,106,107,108,],[29,29,-3,-12,29,29,-2,-4,29,29,29,29,29,29,29,29,29,29,29,29,-5,-6,-7,-8,-9,-10,-11,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'TEXT_CHAR':([0,2,3,12,14,25,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,68,69,70,92,94,95,97,98,99,100,101,104,106,107,108,],[30,30,-3,-12,30,30,-2,-4,30,30,30,30,30,30,30,30,30,30,30,30,-5,-6,-7,-8,-9,-10,-11,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'TRUE':([0,2,3,12,14,25,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,68,69,70,92,94,95,97,98,99,100,101,104,106,107,108,],[31,31,-3,-12,31,31,-2,-4,31,31,31,31,31,31,31,31,31,31,31,31,-5,-6,-7,-8,-9,-10,-11,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'FALSE':([0,2,3,12,14,25,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,68,69,70,92,94,95,97,98,99,100,101,104,106,107,108,],[32,32,-3,-12,32,32,-2,-4,32,32,32,32,32,32,32,32,32,32,32,32,-5,-6,-7,-8,-9,-10,-11,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'NULL':([0,2,3,12,14,25,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,68,69,70,92,94,95,97,98,99,100,101,104,106,107,108,],[33,33,-3,-12,33,33,-2,-4,33,33,33,33,33,33,33,33,33,33,33,33,-5,-6,-7,-8,-9,-10,-11,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'$end':([1,2,3,12,34,35,48,49,50,51,52,53,54,],[0,-1,-3,-12,-2,-4,-5,-6,-7,-8,-9,-10,-11,]),'CONDITIONAL2':([3,12,34,35,48,49,50,51,52,53,54,98,],[-3,-12,-2,-4,-5,-6,-7,-8,-9,-10,-11,102,]),'END_LINE':([3,4,5,6,7,8,9,10,11,12,13,15,25,26,27,28,29,30,31,32,33,34,35,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,72,73,74,75,76,77,78,79,80,81,82,83,84,85,98,99,101,106,108,],[-3,35,48,49,50,51,52,53,54,-12,-13,-31,-52,-53,-27,-28,-29,-30,-32,-33,-34,-2,-4,-5,-6,-7,-8,-9,-10,-11,-24,-31,-36,-41,-37,-42,-38,-43,-39,-44,-40,-45,-51,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-35,-46,-48,-50,-47,-49,]),'PLUS_OP':([4,13,15,27,28,29,30,31,32,33,55,56,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,96,103,],[36,-13,-31,-27,-28,-29,-30,-32,-33,-34,-24,-31,36,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,36,36,36,36,36,36,]),'MINUS_OP':([4,13,15,27,28,29,30,31,32,33,55,56,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,96,103,],[37,-13,-31,-27,-28,-29,-30,-32,-33,-34,-24,-31,37,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,37,37,37,37,37,37,]),'MUL_OP':([4,13,15,27,28,29,30,31,32,33,55,56,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,96,103,],[38,-13,-31,-27,-28,-29,-30,-32,-33,-34,-24,-31,38,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,38,38,38,38,38,38,]),'DIV_OP':([4,13,15,27,28,29,30,31,32,33,55,56,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,96,103,],[39,-13,-31,-27,-28,-29,-30,-32,-33,-34,-24,-31,39,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,39,39,39,39,39,39,]),'LESS_OP':([4,13,15,27,28,29,30,31,32,33,55,56,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,96,103,],[40,-13,-31,-27,-28,-29,-30,-32,-33,-34,-24,-31,40,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,40,40,40,40,40,40,]),'LESS_EQUAL_OP':([4,13,15,27,28,29,30,31,32,33,55,56,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,96,103,],[41,-13,-31,-27,-28,-29,-30,-32,-33,-34,-24,-31,41,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,41,41,41,41,41,41,]),'GREATER_OP':([4,13,15,27,28,29,30,31,32,33,55,56,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,96,103,],[42,-13,-31,-27,-28,-29,-30,-32,-33,-34,-24,-31,42,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,42,42,42,42,42,42,]),'GREATER_EQUAL_OP':([4,13,15,27,28,29,30,31,32,33,55,56,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,96,103,],[43,-13,-31,-27,-28,-29,-30,-32,-33,-34,-24,-31,43,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,43,43,43,43,43,43,]),'EQUAL_OP':([4,13,15,27,28,29,30,31,32,33,55,56,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,96,103,],[44,-13,-31,-27,-28,-29,-30,-32,-33,-34,-24,-31,44,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,44,44,44,44,44,44,]),'DIFFERENT_OP':([4,13,15,27,28,29,30,31,32,33,55,56,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,96,103,],[45,-13,-31,-27,-28,-29,-30,-32,-33,-34,-24,-31,45,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,45,45,45,45,45,45,]),'LOGICAL_OP_AND':([4,13,15,27,28,29,30,31,32,33,55,56,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,96,103,],[46,-13,-31,-27,-28,-29,-30,-32,-33,-34,-24,-31,46,-14,-15,-16,-17,46,46,46,46,46,46,-25,-26,46,46,46,46,46,46,]),'LOGICAL_OP_OR':([4,13,15,27,28,29,30,31,32,33,55,56,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,96,103,],[47,-13,-31,-27,-28,-29,-30,-32,-33,-34,-24,-31,47,-14,-15,-16,-17,47,47,47,47,47,47,-25,-26,47,47,47,47,47,47,]),'RPAREN':([13,27,28,29,30,31,32,33,55,56,73,74,75,76,77,78,79,80,81,82,83,84,86,87,89,103,],[-13,-27,-28,-29,-30,-32,-33,-34,-24,-31,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,90,91,93,105,]),'SEPARATION':([13,27,28,29,30,31,32,33,55,56,73,74,75,76,77,78,79,80,81,82,83,84,88,96,],[-13,-27,-28,-29,-30,-32,-33,-34,-24,-31,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,92,100,]),'ASSIGNMENT_OP':([15,58,60,62,64,66,],[57,57,57,57,57,57,]),'LPAREN':([21,22,23,71,],[68,69,70,89,]),'STRUCTURE_BODY':([90,91,93,102,105,],[94,95,97,104,107,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,94,95,97,104,107,],[2,98,99,101,106,108,]),'statement':([0,2,94,95,97,98,99,101,104,106,107,108,],[3,34,3,3,3,34,34,34,3,34,3,34,]),'expression':([0,2,14,25,40,41,42,43,44,45,46,47,57,68,69,70,92,94,95,97,98,99,100,101,104,106,107,108,],[4,4,55,72,77,78,79,80,81,82,83,84,85,86,87,88,96,4,4,4,4,4,103,4,4,4,4,4,]),'assignment':([0,2,16,17,18,19,20,94,95,97,98,99,101,104,106,107,108,],[5,5,59,61,63,65,67,5,5,5,5,5,5,5,5,5,5,]),'declaration':([0,2,94,95,97,98,99,101,104,106,107,108,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'conditional':([0,2,94,95,97,98,99,101,104,106,107,108,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'loop':([0,2,94,95,97,98,99,101,104,106,107,108,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'function_declaration':([0,2,94,95,97,98,99,101,104,106,107,108,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'return_statement':([0,2,94,95,97,98,99,101,104,106,107,108,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'break_statement':([0,2,94,95,97,98,99,101,104,106,107,108,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'term':([0,2,14,25,36,37,38,39,40,41,42,43,44,45,46,47,57,68,69,70,92,94,95,97,98,99,100,101,104,106,107,108,],[13,13,13,13,73,74,75,76,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',87),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',91),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',92),
  ('statement -> expression END_LINE','statement',2,'p_statement','parser.py',99),
  ('statement -> assignment END_LINE','statement',2,'p_statement','parser.py',100),
  ('statement -> declaration END_LINE','statement',2,'p_statement','parser.py',101),
  ('statement -> conditional END_LINE','statement',2,'p_statement','parser.py',102),
  ('statement -> loop END_LINE','statement',2,'p_statement','parser.py',103),
  ('statement -> function_declaration END_LINE','statement',2,'p_statement','parser.py',104),
  ('statement -> return_statement END_LINE','statement',2,'p_statement','parser.py',105),
  ('statement -> break_statement END_LINE','statement',2,'p_statement','parser.py',106),
  ('statement -> COMMENT','statement',1,'p_statement','parser.py',107),
  ('expression -> term','expression',1,'p_expression','parser.py',111),
  ('expression -> expression PLUS_OP term','expression',3,'p_expression','parser.py',112),
  ('expression -> expression MINUS_OP term','expression',3,'p_expression','parser.py',113),
  ('expression -> expression MUL_OP term','expression',3,'p_expression','parser.py',114),
  ('expression -> expression DIV_OP term','expression',3,'p_expression','parser.py',115),
  ('expression -> expression LESS_OP expression','expression',3,'p_expression','parser.py',116),
  ('expression -> expression LESS_EQUAL_OP expression','expression',3,'p_expression','parser.py',117),
  ('expression -> expression GREATER_OP expression','expression',3,'p_expression','parser.py',118),
  ('expression -> expression GREATER_EQUAL_OP expression','expression',3,'p_expression','parser.py',119),
  ('expression -> expression EQUAL_OP expression','expression',3,'p_expression','parser.py',120),
  ('expression -> expression DIFFERENT_OP expression','expression',3,'p_expression','parser.py',121),
  ('expression -> LOGICAL_OP_NOT expression','expression',2,'p_expression','parser.py',122),
  ('expression -> expression LOGICAL_OP_AND expression','expression',3,'p_expression','parser.py',123),
  ('expression -> expression LOGICAL_OP_OR expression','expression',3,'p_expression','parser.py',124),
  ('term -> NUMBER_INTEGER','term',1,'p_term','parser.py',133),
  ('term -> NUMBER_FLOAT','term',1,'p_term','parser.py',134),
  ('term -> TEXT_STRING','term',1,'p_term','parser.py',135),
  ('term -> TEXT_CHAR','term',1,'p_term','parser.py',136),
  ('term -> VARIABLE','term',1,'p_term','parser.py',137),
  ('term -> TRUE','term',1,'p_term','parser.py',138),
  ('term -> FALSE','term',1,'p_term','parser.py',139),
  ('term -> NULL','term',1,'p_term','parser.py',140),
  ('assignment -> VARIABLE ASSIGNMENT_OP expression','assignment',3,'p_assignment','parser.py',150),
  ('declaration -> TYPE_BOOLEAN VARIABLE','declaration',2,'p_declaration','parser.py',154),
  ('declaration -> TYPE_STRING VARIABLE','declaration',2,'p_declaration','parser.py',155),
  ('declaration -> TYPE_CHAR VARIABLE','declaration',2,'p_declaration','parser.py',156),
  ('declaration -> TYPE_INTEGER VARIABLE','declaration',2,'p_declaration','parser.py',157),
  ('declaration -> TYPE_FLOAT VARIABLE','declaration',2,'p_declaration','parser.py',158),
  ('declaration -> TYPE_BOOLEAN assignment','declaration',2,'p_declaration','parser.py',159),
  ('declaration -> TYPE_STRING assignment','declaration',2,'p_declaration','parser.py',160),
  ('declaration -> TYPE_CHAR assignment','declaration',2,'p_declaration','parser.py',161),
  ('declaration -> TYPE_INTEGER assignment','declaration',2,'p_declaration','parser.py',162),
  ('declaration -> TYPE_FLOAT assignment','declaration',2,'p_declaration','parser.py',163),
  ('conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list','conditional',6,'p_conditional','parser.py',171),
  ('conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list','conditional',9,'p_conditional','parser.py',172),
  ('loop -> LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list','loop',6,'p_loop','parser.py',179),
  ('loop -> LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list','loop',10,'p_loop','parser.py',180),
  ('function_declaration -> FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list','function_declaration',6,'p_function_declaration','parser.py',187),
  ('return_statement -> RETURN expression','return_statement',2,'p_return_statement','parser.py',191),
  ('return_statement -> RETURN','return_statement',1,'p_return_statement','parser.py',192),
  ('break_statement -> BREAK','break_statement',1,'p_break_statement','parser.py',199),
  ('comment -> COMMENT','comment',1,'p_comment','parser.py',203),
]
