Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    FUNCTION_DECLARATION

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement_list statement
Rule 3     statement_list -> statement
Rule 4     statement -> expression END_LINE
Rule 5     statement -> assignment END_LINE
Rule 6     statement -> declaration END_LINE
Rule 7     statement -> conditional END_LINE
Rule 8     statement -> loop END_LINE
Rule 9     statement -> return_statement END_LINE
Rule 10    statement -> break_statement END_LINE
Rule 11    statement -> comment
Rule 12    expression -> binary_expression
Rule 13    expression -> unitary_expression
Rule 14    expression -> primary_expression
Rule 15    binary_expression -> expression PLUS_OP expression
Rule 16    binary_expression -> expression MINUS_OP expression
Rule 17    binary_expression -> expression MUL_OP expression
Rule 18    binary_expression -> expression DIV_OP expression
Rule 19    binary_expression -> expression LESS_OP expression
Rule 20    binary_expression -> expression GREATER_OP expression
Rule 21    binary_expression -> expression LESS_EQUAL_OP expression
Rule 22    binary_expression -> expression GREATER_EQUAL_OP expression
Rule 23    binary_expression -> expression EQUAL_OP expression
Rule 24    binary_expression -> expression DIFFERENT_OP expression
Rule 25    binary_expression -> expression LOGICAL_OP_AND expression
Rule 26    binary_expression -> expression LOGICAL_OP_OR expression
Rule 27    unitary_expression -> MINUS_OP expression
Rule 28    unitary_expression -> LOGICAL_OP_NOT expression
Rule 29    primary_expression -> LPAREN expression RPAREN
Rule 30    primary_expression -> term
Rule 31    term -> NUMBER_INTEGER
Rule 32    term -> NUMBER_FLOAT
Rule 33    term -> VARIABLE
Rule 34    term -> TRUE
Rule 35    term -> FALSE
Rule 36    term -> NULL
Rule 37    term -> TEXT_STRING
Rule 38    term -> TEXT_CHAR
Rule 39    assignment -> VARIABLE ASSIGNMENT_OP expression
Rule 40    declaration -> TYPE_BOOLEAN VARIABLE
Rule 41    declaration -> TYPE_STRING VARIABLE
Rule 42    declaration -> TYPE_CHAR VARIABLE
Rule 43    declaration -> TYPE_INTEGER VARIABLE
Rule 44    declaration -> TYPE_FLOAT VARIABLE
Rule 45    declaration -> TYPE_BOOLEAN assignment
Rule 46    declaration -> TYPE_STRING assignment
Rule 47    declaration -> TYPE_CHAR assignment
Rule 48    declaration -> TYPE_INTEGER assignment
Rule 49    declaration -> TYPE_FLOAT assignment
Rule 50    conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
Rule 51    conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
Rule 52    loop -> LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
Rule 53    loop -> LOOP2 LPAREN assignment SEPARATION expression SEPARATION assignment RPAREN STRUCTURE_BODY statement_list
Rule 54    return_statement -> RETURN expression
Rule 55    return_statement -> RETURN
Rule 56    break_statement -> BREAK
Rule 57    comment -> COMMENT

Terminals, with rules where they appear

ASSIGNMENT_OP        : 39
BREAK                : 56
COMMENT              : 57
CONDITIONAL1         : 50 51
CONDITIONAL2         : 51
DIFFERENT_OP         : 24
DIV_OP               : 18
END_LINE             : 4 5 6 7 8 9 10
EQUAL_OP             : 23
FALSE                : 35
FUNCTION_DECLARATION : 
GREATER_EQUAL_OP     : 22
GREATER_OP           : 20
LESS_EQUAL_OP        : 21
LESS_OP              : 19
LOGICAL_OP_AND       : 25
LOGICAL_OP_NOT       : 28
LOGICAL_OP_OR        : 26
LOOP1                : 52
LOOP2                : 53
LPAREN               : 29 50 51 52 53
MINUS_OP             : 16 27
MUL_OP               : 17
NULL                 : 36
NUMBER_FLOAT         : 32
NUMBER_INTEGER       : 31
PLUS_OP              : 15
RETURN               : 54 55
RPAREN               : 29 50 51 52 53
SEPARATION           : 53 53
STRUCTURE_BODY       : 50 51 51 52 53
TEXT_CHAR            : 38
TEXT_STRING          : 37
TRUE                 : 34
TYPE_BOOLEAN         : 40 45
TYPE_CHAR            : 42 47
TYPE_FLOAT           : 44 49
TYPE_INTEGER         : 43 48
TYPE_STRING          : 41 46
VARIABLE             : 33 39 40 41 42 43 44
error                : 

Nonterminals, with rules where they appear

assignment           : 5 45 46 47 48 49 53 53
binary_expression    : 12
break_statement      : 10
comment              : 11
conditional          : 7
declaration          : 6
expression           : 4 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 28 29 39 50 51 52 53 54
loop                 : 8
primary_expression   : 14
program              : 0
return_statement     : 9
statement            : 2 3
statement_list       : 1 2 50 51 51 52 53
term                 : 30
unitary_expression   : 13

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . return_statement END_LINE
    (10) statement -> . break_statement END_LINE
    (11) statement -> . comment
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (39) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (40) declaration -> . TYPE_BOOLEAN VARIABLE
    (41) declaration -> . TYPE_STRING VARIABLE
    (42) declaration -> . TYPE_CHAR VARIABLE
    (43) declaration -> . TYPE_INTEGER VARIABLE
    (44) declaration -> . TYPE_FLOAT VARIABLE
    (45) declaration -> . TYPE_BOOLEAN assignment
    (46) declaration -> . TYPE_STRING assignment
    (47) declaration -> . TYPE_CHAR assignment
    (48) declaration -> . TYPE_INTEGER assignment
    (49) declaration -> . TYPE_FLOAT assignment
    (50) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (51) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (52) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (53) loop -> . LOOP2 LPAREN assignment SEPARATION expression SEPARATION assignment RPAREN STRUCTURE_BODY statement_list
    (54) return_statement -> . RETURN expression
    (55) return_statement -> . RETURN
    (56) break_statement -> . BREAK
    (57) comment -> . COMMENT
    (15) binary_expression -> . expression PLUS_OP expression
    (16) binary_expression -> . expression MINUS_OP expression
    (17) binary_expression -> . expression MUL_OP expression
    (18) binary_expression -> . expression DIV_OP expression
    (19) binary_expression -> . expression LESS_OP expression
    (20) binary_expression -> . expression GREATER_OP expression
    (21) binary_expression -> . expression LESS_EQUAL_OP expression
    (22) binary_expression -> . expression GREATER_EQUAL_OP expression
    (23) binary_expression -> . expression EQUAL_OP expression
    (24) binary_expression -> . expression DIFFERENT_OP expression
    (25) binary_expression -> . expression LOGICAL_OP_AND expression
    (26) binary_expression -> . expression LOGICAL_OP_OR expression
    (27) unitary_expression -> . MINUS_OP expression
    (28) unitary_expression -> . LOGICAL_OP_NOT expression
    (29) primary_expression -> . LPAREN expression RPAREN
    (30) primary_expression -> . term
    (31) term -> . NUMBER_INTEGER
    (32) term -> . NUMBER_FLOAT
    (33) term -> . VARIABLE
    (34) term -> . TRUE
    (35) term -> . FALSE
    (36) term -> . NULL
    (37) term -> . TEXT_STRING
    (38) term -> . TEXT_CHAR

    VARIABLE        shift and go to state 15
    TYPE_BOOLEAN    shift and go to state 16
    TYPE_STRING     shift and go to state 17
    TYPE_CHAR       shift and go to state 18
    TYPE_INTEGER    shift and go to state 19
    TYPE_FLOAT      shift and go to state 20
    CONDITIONAL1    shift and go to state 21
    LOOP1           shift and go to state 23
    LOOP2           shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    COMMENT         shift and go to state 27
    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    expression                     shift and go to state 4
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    return_statement               shift and go to state 9
    break_statement                shift and go to state 10
    comment                        shift and go to state 11
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . return_statement END_LINE
    (10) statement -> . break_statement END_LINE
    (11) statement -> . comment
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (39) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (40) declaration -> . TYPE_BOOLEAN VARIABLE
    (41) declaration -> . TYPE_STRING VARIABLE
    (42) declaration -> . TYPE_CHAR VARIABLE
    (43) declaration -> . TYPE_INTEGER VARIABLE
    (44) declaration -> . TYPE_FLOAT VARIABLE
    (45) declaration -> . TYPE_BOOLEAN assignment
    (46) declaration -> . TYPE_STRING assignment
    (47) declaration -> . TYPE_CHAR assignment
    (48) declaration -> . TYPE_INTEGER assignment
    (49) declaration -> . TYPE_FLOAT assignment
    (50) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (51) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (52) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (53) loop -> . LOOP2 LPAREN assignment SEPARATION expression SEPARATION assignment RPAREN STRUCTURE_BODY statement_list
    (54) return_statement -> . RETURN expression
    (55) return_statement -> . RETURN
    (56) break_statement -> . BREAK
    (57) comment -> . COMMENT
    (15) binary_expression -> . expression PLUS_OP expression
    (16) binary_expression -> . expression MINUS_OP expression
    (17) binary_expression -> . expression MUL_OP expression
    (18) binary_expression -> . expression DIV_OP expression
    (19) binary_expression -> . expression LESS_OP expression
    (20) binary_expression -> . expression GREATER_OP expression
    (21) binary_expression -> . expression LESS_EQUAL_OP expression
    (22) binary_expression -> . expression GREATER_EQUAL_OP expression
    (23) binary_expression -> . expression EQUAL_OP expression
    (24) binary_expression -> . expression DIFFERENT_OP expression
    (25) binary_expression -> . expression LOGICAL_OP_AND expression
    (26) binary_expression -> . expression LOGICAL_OP_OR expression
    (27) unitary_expression -> . MINUS_OP expression
    (28) unitary_expression -> . LOGICAL_OP_NOT expression
    (29) primary_expression -> . LPAREN expression RPAREN
    (30) primary_expression -> . term
    (31) term -> . NUMBER_INTEGER
    (32) term -> . NUMBER_FLOAT
    (33) term -> . VARIABLE
    (34) term -> . TRUE
    (35) term -> . FALSE
    (36) term -> . NULL
    (37) term -> . TEXT_STRING
    (38) term -> . TEXT_CHAR

    $end            reduce using rule 1 (program -> statement_list .)
    VARIABLE        shift and go to state 15
    TYPE_BOOLEAN    shift and go to state 16
    TYPE_STRING     shift and go to state 17
    TYPE_CHAR       shift and go to state 18
    TYPE_INTEGER    shift and go to state 19
    TYPE_FLOAT      shift and go to state 20
    CONDITIONAL1    shift and go to state 21
    LOOP1           shift and go to state 23
    LOOP2           shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    COMMENT         shift and go to state 27
    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    statement                      shift and go to state 38
    expression                     shift and go to state 4
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    return_statement               shift and go to state 9
    break_statement                shift and go to state 10
    comment                        shift and go to state 11
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 3

    (3) statement_list -> statement .

    VARIABLE        reduce using rule 3 (statement_list -> statement .)
    TYPE_BOOLEAN    reduce using rule 3 (statement_list -> statement .)
    TYPE_STRING     reduce using rule 3 (statement_list -> statement .)
    TYPE_CHAR       reduce using rule 3 (statement_list -> statement .)
    TYPE_INTEGER    reduce using rule 3 (statement_list -> statement .)
    TYPE_FLOAT      reduce using rule 3 (statement_list -> statement .)
    CONDITIONAL1    reduce using rule 3 (statement_list -> statement .)
    LOOP1           reduce using rule 3 (statement_list -> statement .)
    LOOP2           reduce using rule 3 (statement_list -> statement .)
    RETURN          reduce using rule 3 (statement_list -> statement .)
    BREAK           reduce using rule 3 (statement_list -> statement .)
    COMMENT         reduce using rule 3 (statement_list -> statement .)
    MINUS_OP        reduce using rule 3 (statement_list -> statement .)
    LOGICAL_OP_NOT  reduce using rule 3 (statement_list -> statement .)
    LPAREN          reduce using rule 3 (statement_list -> statement .)
    NUMBER_INTEGER  reduce using rule 3 (statement_list -> statement .)
    NUMBER_FLOAT    reduce using rule 3 (statement_list -> statement .)
    TRUE            reduce using rule 3 (statement_list -> statement .)
    FALSE           reduce using rule 3 (statement_list -> statement .)
    NULL            reduce using rule 3 (statement_list -> statement .)
    TEXT_STRING     reduce using rule 3 (statement_list -> statement .)
    TEXT_CHAR       reduce using rule 3 (statement_list -> statement .)
    $end            reduce using rule 3 (statement_list -> statement .)
    CONDITIONAL2    reduce using rule 3 (statement_list -> statement .)
    END_LINE        reduce using rule 3 (statement_list -> statement .)


state 4

    (4) statement -> expression . END_LINE
    (15) binary_expression -> expression . PLUS_OP expression
    (16) binary_expression -> expression . MINUS_OP expression
    (17) binary_expression -> expression . MUL_OP expression
    (18) binary_expression -> expression . DIV_OP expression
    (19) binary_expression -> expression . LESS_OP expression
    (20) binary_expression -> expression . GREATER_OP expression
    (21) binary_expression -> expression . LESS_EQUAL_OP expression
    (22) binary_expression -> expression . GREATER_EQUAL_OP expression
    (23) binary_expression -> expression . EQUAL_OP expression
    (24) binary_expression -> expression . DIFFERENT_OP expression
    (25) binary_expression -> expression . LOGICAL_OP_AND expression
    (26) binary_expression -> expression . LOGICAL_OP_OR expression

    END_LINE        shift and go to state 39
    PLUS_OP         shift and go to state 40
    MINUS_OP        shift and go to state 41
    MUL_OP          shift and go to state 42
    DIV_OP          shift and go to state 43
    LESS_OP         shift and go to state 44
    GREATER_OP      shift and go to state 45
    LESS_EQUAL_OP   shift and go to state 46
    GREATER_EQUAL_OP shift and go to state 47
    EQUAL_OP        shift and go to state 48
    DIFFERENT_OP    shift and go to state 49
    LOGICAL_OP_AND  shift and go to state 50
    LOGICAL_OP_OR   shift and go to state 51


state 5

    (5) statement -> assignment . END_LINE

    END_LINE        shift and go to state 52


state 6

    (6) statement -> declaration . END_LINE

    END_LINE        shift and go to state 53


state 7

    (7) statement -> conditional . END_LINE

    END_LINE        shift and go to state 54


state 8

    (8) statement -> loop . END_LINE

    END_LINE        shift and go to state 55


state 9

    (9) statement -> return_statement . END_LINE

    END_LINE        shift and go to state 56


state 10

    (10) statement -> break_statement . END_LINE

    END_LINE        shift and go to state 57


state 11

    (11) statement -> comment .

    VARIABLE        reduce using rule 11 (statement -> comment .)
    TYPE_BOOLEAN    reduce using rule 11 (statement -> comment .)
    TYPE_STRING     reduce using rule 11 (statement -> comment .)
    TYPE_CHAR       reduce using rule 11 (statement -> comment .)
    TYPE_INTEGER    reduce using rule 11 (statement -> comment .)
    TYPE_FLOAT      reduce using rule 11 (statement -> comment .)
    CONDITIONAL1    reduce using rule 11 (statement -> comment .)
    LOOP1           reduce using rule 11 (statement -> comment .)
    LOOP2           reduce using rule 11 (statement -> comment .)
    RETURN          reduce using rule 11 (statement -> comment .)
    BREAK           reduce using rule 11 (statement -> comment .)
    COMMENT         reduce using rule 11 (statement -> comment .)
    MINUS_OP        reduce using rule 11 (statement -> comment .)
    LOGICAL_OP_NOT  reduce using rule 11 (statement -> comment .)
    LPAREN          reduce using rule 11 (statement -> comment .)
    NUMBER_INTEGER  reduce using rule 11 (statement -> comment .)
    NUMBER_FLOAT    reduce using rule 11 (statement -> comment .)
    TRUE            reduce using rule 11 (statement -> comment .)
    FALSE           reduce using rule 11 (statement -> comment .)
    NULL            reduce using rule 11 (statement -> comment .)
    TEXT_STRING     reduce using rule 11 (statement -> comment .)
    TEXT_CHAR       reduce using rule 11 (statement -> comment .)
    $end            reduce using rule 11 (statement -> comment .)
    CONDITIONAL2    reduce using rule 11 (statement -> comment .)
    END_LINE        reduce using rule 11 (statement -> comment .)


state 12

    (12) expression -> binary_expression .

    END_LINE        reduce using rule 12 (expression -> binary_expression .)
    PLUS_OP         reduce using rule 12 (expression -> binary_expression .)
    MINUS_OP        reduce using rule 12 (expression -> binary_expression .)
    MUL_OP          reduce using rule 12 (expression -> binary_expression .)
    DIV_OP          reduce using rule 12 (expression -> binary_expression .)
    LESS_OP         reduce using rule 12 (expression -> binary_expression .)
    GREATER_OP      reduce using rule 12 (expression -> binary_expression .)
    LESS_EQUAL_OP   reduce using rule 12 (expression -> binary_expression .)
    GREATER_EQUAL_OP reduce using rule 12 (expression -> binary_expression .)
    EQUAL_OP        reduce using rule 12 (expression -> binary_expression .)
    DIFFERENT_OP    reduce using rule 12 (expression -> binary_expression .)
    LOGICAL_OP_AND  reduce using rule 12 (expression -> binary_expression .)
    LOGICAL_OP_OR   reduce using rule 12 (expression -> binary_expression .)
    RPAREN          reduce using rule 12 (expression -> binary_expression .)
    SEPARATION      reduce using rule 12 (expression -> binary_expression .)


state 13

    (13) expression -> unitary_expression .

    END_LINE        reduce using rule 13 (expression -> unitary_expression .)
    PLUS_OP         reduce using rule 13 (expression -> unitary_expression .)
    MINUS_OP        reduce using rule 13 (expression -> unitary_expression .)
    MUL_OP          reduce using rule 13 (expression -> unitary_expression .)
    DIV_OP          reduce using rule 13 (expression -> unitary_expression .)
    LESS_OP         reduce using rule 13 (expression -> unitary_expression .)
    GREATER_OP      reduce using rule 13 (expression -> unitary_expression .)
    LESS_EQUAL_OP   reduce using rule 13 (expression -> unitary_expression .)
    GREATER_EQUAL_OP reduce using rule 13 (expression -> unitary_expression .)
    EQUAL_OP        reduce using rule 13 (expression -> unitary_expression .)
    DIFFERENT_OP    reduce using rule 13 (expression -> unitary_expression .)
    LOGICAL_OP_AND  reduce using rule 13 (expression -> unitary_expression .)
    LOGICAL_OP_OR   reduce using rule 13 (expression -> unitary_expression .)
    RPAREN          reduce using rule 13 (expression -> unitary_expression .)
    SEPARATION      reduce using rule 13 (expression -> unitary_expression .)


state 14

    (14) expression -> primary_expression .

    END_LINE        reduce using rule 14 (expression -> primary_expression .)
    PLUS_OP         reduce using rule 14 (expression -> primary_expression .)
    MINUS_OP        reduce using rule 14 (expression -> primary_expression .)
    MUL_OP          reduce using rule 14 (expression -> primary_expression .)
    DIV_OP          reduce using rule 14 (expression -> primary_expression .)
    LESS_OP         reduce using rule 14 (expression -> primary_expression .)
    GREATER_OP      reduce using rule 14 (expression -> primary_expression .)
    LESS_EQUAL_OP   reduce using rule 14 (expression -> primary_expression .)
    GREATER_EQUAL_OP reduce using rule 14 (expression -> primary_expression .)
    EQUAL_OP        reduce using rule 14 (expression -> primary_expression .)
    DIFFERENT_OP    reduce using rule 14 (expression -> primary_expression .)
    LOGICAL_OP_AND  reduce using rule 14 (expression -> primary_expression .)
    LOGICAL_OP_OR   reduce using rule 14 (expression -> primary_expression .)
    RPAREN          reduce using rule 14 (expression -> primary_expression .)
    SEPARATION      reduce using rule 14 (expression -> primary_expression .)


state 15

    (39) assignment -> VARIABLE . ASSIGNMENT_OP expression
    (33) term -> VARIABLE .

    ASSIGNMENT_OP   shift and go to state 58
    END_LINE        reduce using rule 33 (term -> VARIABLE .)
    PLUS_OP         reduce using rule 33 (term -> VARIABLE .)
    MINUS_OP        reduce using rule 33 (term -> VARIABLE .)
    MUL_OP          reduce using rule 33 (term -> VARIABLE .)
    DIV_OP          reduce using rule 33 (term -> VARIABLE .)
    LESS_OP         reduce using rule 33 (term -> VARIABLE .)
    GREATER_OP      reduce using rule 33 (term -> VARIABLE .)
    LESS_EQUAL_OP   reduce using rule 33 (term -> VARIABLE .)
    GREATER_EQUAL_OP reduce using rule 33 (term -> VARIABLE .)
    EQUAL_OP        reduce using rule 33 (term -> VARIABLE .)
    DIFFERENT_OP    reduce using rule 33 (term -> VARIABLE .)
    LOGICAL_OP_AND  reduce using rule 33 (term -> VARIABLE .)
    LOGICAL_OP_OR   reduce using rule 33 (term -> VARIABLE .)


state 16

    (40) declaration -> TYPE_BOOLEAN . VARIABLE
    (45) declaration -> TYPE_BOOLEAN . assignment
    (39) assignment -> . VARIABLE ASSIGNMENT_OP expression

    VARIABLE        shift and go to state 59

    assignment                     shift and go to state 60

state 17

    (41) declaration -> TYPE_STRING . VARIABLE
    (46) declaration -> TYPE_STRING . assignment
    (39) assignment -> . VARIABLE ASSIGNMENT_OP expression

    VARIABLE        shift and go to state 61

    assignment                     shift and go to state 62

state 18

    (42) declaration -> TYPE_CHAR . VARIABLE
    (47) declaration -> TYPE_CHAR . assignment
    (39) assignment -> . VARIABLE ASSIGNMENT_OP expression

    VARIABLE        shift and go to state 63

    assignment                     shift and go to state 64

state 19

    (43) declaration -> TYPE_INTEGER . VARIABLE
    (48) declaration -> TYPE_INTEGER . assignment
    (39) assignment -> . VARIABLE ASSIGNMENT_OP expression

    VARIABLE        shift and go to state 65

    assignment                     shift and go to state 66

state 20

    (44) declaration -> TYPE_FLOAT . VARIABLE
    (49) declaration -> TYPE_FLOAT . assignment
    (39) assignment -> . VARIABLE ASSIGNMENT_OP expression

    VARIABLE        shift and go to state 67

    assignment                     shift and go to state 68

state 21

    (50) conditional -> CONDITIONAL1 . LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (51) conditional -> CONDITIONAL1 . LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list

    LPAREN          shift and go to state 69


state 22

    (29) primary_expression -> LPAREN . expression RPAREN
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (15) binary_expression -> . expression PLUS_OP expression
    (16) binary_expression -> . expression MINUS_OP expression
    (17) binary_expression -> . expression MUL_OP expression
    (18) binary_expression -> . expression DIV_OP expression
    (19) binary_expression -> . expression LESS_OP expression
    (20) binary_expression -> . expression GREATER_OP expression
    (21) binary_expression -> . expression LESS_EQUAL_OP expression
    (22) binary_expression -> . expression GREATER_EQUAL_OP expression
    (23) binary_expression -> . expression EQUAL_OP expression
    (24) binary_expression -> . expression DIFFERENT_OP expression
    (25) binary_expression -> . expression LOGICAL_OP_AND expression
    (26) binary_expression -> . expression LOGICAL_OP_OR expression
    (27) unitary_expression -> . MINUS_OP expression
    (28) unitary_expression -> . LOGICAL_OP_NOT expression
    (29) primary_expression -> . LPAREN expression RPAREN
    (30) primary_expression -> . term
    (31) term -> . NUMBER_INTEGER
    (32) term -> . NUMBER_FLOAT
    (33) term -> . VARIABLE
    (34) term -> . TRUE
    (35) term -> . FALSE
    (36) term -> . NULL
    (37) term -> . TEXT_STRING
    (38) term -> . TEXT_CHAR

    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    VARIABLE        shift and go to state 71
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    expression                     shift and go to state 70
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 23

    (52) loop -> LOOP1 . LPAREN expression RPAREN STRUCTURE_BODY statement_list

    LPAREN          shift and go to state 72


state 24

    (53) loop -> LOOP2 . LPAREN assignment SEPARATION expression SEPARATION assignment RPAREN STRUCTURE_BODY statement_list

    LPAREN          shift and go to state 73


state 25

    (54) return_statement -> RETURN . expression
    (55) return_statement -> RETURN .
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (15) binary_expression -> . expression PLUS_OP expression
    (16) binary_expression -> . expression MINUS_OP expression
    (17) binary_expression -> . expression MUL_OP expression
    (18) binary_expression -> . expression DIV_OP expression
    (19) binary_expression -> . expression LESS_OP expression
    (20) binary_expression -> . expression GREATER_OP expression
    (21) binary_expression -> . expression LESS_EQUAL_OP expression
    (22) binary_expression -> . expression GREATER_EQUAL_OP expression
    (23) binary_expression -> . expression EQUAL_OP expression
    (24) binary_expression -> . expression DIFFERENT_OP expression
    (25) binary_expression -> . expression LOGICAL_OP_AND expression
    (26) binary_expression -> . expression LOGICAL_OP_OR expression
    (27) unitary_expression -> . MINUS_OP expression
    (28) unitary_expression -> . LOGICAL_OP_NOT expression
    (29) primary_expression -> . LPAREN expression RPAREN
    (30) primary_expression -> . term
    (31) term -> . NUMBER_INTEGER
    (32) term -> . NUMBER_FLOAT
    (33) term -> . VARIABLE
    (34) term -> . TRUE
    (35) term -> . FALSE
    (36) term -> . NULL
    (37) term -> . TEXT_STRING
    (38) term -> . TEXT_CHAR

    END_LINE        reduce using rule 55 (return_statement -> RETURN .)
    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    VARIABLE        shift and go to state 71
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    expression                     shift and go to state 74
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 26

    (56) break_statement -> BREAK .

    END_LINE        reduce using rule 56 (break_statement -> BREAK .)


state 27

    (57) comment -> COMMENT .

    VARIABLE        reduce using rule 57 (comment -> COMMENT .)
    TYPE_BOOLEAN    reduce using rule 57 (comment -> COMMENT .)
    TYPE_STRING     reduce using rule 57 (comment -> COMMENT .)
    TYPE_CHAR       reduce using rule 57 (comment -> COMMENT .)
    TYPE_INTEGER    reduce using rule 57 (comment -> COMMENT .)
    TYPE_FLOAT      reduce using rule 57 (comment -> COMMENT .)
    CONDITIONAL1    reduce using rule 57 (comment -> COMMENT .)
    LOOP1           reduce using rule 57 (comment -> COMMENT .)
    LOOP2           reduce using rule 57 (comment -> COMMENT .)
    RETURN          reduce using rule 57 (comment -> COMMENT .)
    BREAK           reduce using rule 57 (comment -> COMMENT .)
    COMMENT         reduce using rule 57 (comment -> COMMENT .)
    MINUS_OP        reduce using rule 57 (comment -> COMMENT .)
    LOGICAL_OP_NOT  reduce using rule 57 (comment -> COMMENT .)
    LPAREN          reduce using rule 57 (comment -> COMMENT .)
    NUMBER_INTEGER  reduce using rule 57 (comment -> COMMENT .)
    NUMBER_FLOAT    reduce using rule 57 (comment -> COMMENT .)
    TRUE            reduce using rule 57 (comment -> COMMENT .)
    FALSE           reduce using rule 57 (comment -> COMMENT .)
    NULL            reduce using rule 57 (comment -> COMMENT .)
    TEXT_STRING     reduce using rule 57 (comment -> COMMENT .)
    TEXT_CHAR       reduce using rule 57 (comment -> COMMENT .)
    $end            reduce using rule 57 (comment -> COMMENT .)
    CONDITIONAL2    reduce using rule 57 (comment -> COMMENT .)
    END_LINE        reduce using rule 57 (comment -> COMMENT .)


state 28

    (27) unitary_expression -> MINUS_OP . expression
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (15) binary_expression -> . expression PLUS_OP expression
    (16) binary_expression -> . expression MINUS_OP expression
    (17) binary_expression -> . expression MUL_OP expression
    (18) binary_expression -> . expression DIV_OP expression
    (19) binary_expression -> . expression LESS_OP expression
    (20) binary_expression -> . expression GREATER_OP expression
    (21) binary_expression -> . expression LESS_EQUAL_OP expression
    (22) binary_expression -> . expression GREATER_EQUAL_OP expression
    (23) binary_expression -> . expression EQUAL_OP expression
    (24) binary_expression -> . expression DIFFERENT_OP expression
    (25) binary_expression -> . expression LOGICAL_OP_AND expression
    (26) binary_expression -> . expression LOGICAL_OP_OR expression
    (27) unitary_expression -> . MINUS_OP expression
    (28) unitary_expression -> . LOGICAL_OP_NOT expression
    (29) primary_expression -> . LPAREN expression RPAREN
    (30) primary_expression -> . term
    (31) term -> . NUMBER_INTEGER
    (32) term -> . NUMBER_FLOAT
    (33) term -> . VARIABLE
    (34) term -> . TRUE
    (35) term -> . FALSE
    (36) term -> . NULL
    (37) term -> . TEXT_STRING
    (38) term -> . TEXT_CHAR

    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    VARIABLE        shift and go to state 71
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    expression                     shift and go to state 75
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 29

    (28) unitary_expression -> LOGICAL_OP_NOT . expression
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (15) binary_expression -> . expression PLUS_OP expression
    (16) binary_expression -> . expression MINUS_OP expression
    (17) binary_expression -> . expression MUL_OP expression
    (18) binary_expression -> . expression DIV_OP expression
    (19) binary_expression -> . expression LESS_OP expression
    (20) binary_expression -> . expression GREATER_OP expression
    (21) binary_expression -> . expression LESS_EQUAL_OP expression
    (22) binary_expression -> . expression GREATER_EQUAL_OP expression
    (23) binary_expression -> . expression EQUAL_OP expression
    (24) binary_expression -> . expression DIFFERENT_OP expression
    (25) binary_expression -> . expression LOGICAL_OP_AND expression
    (26) binary_expression -> . expression LOGICAL_OP_OR expression
    (27) unitary_expression -> . MINUS_OP expression
    (28) unitary_expression -> . LOGICAL_OP_NOT expression
    (29) primary_expression -> . LPAREN expression RPAREN
    (30) primary_expression -> . term
    (31) term -> . NUMBER_INTEGER
    (32) term -> . NUMBER_FLOAT
    (33) term -> . VARIABLE
    (34) term -> . TRUE
    (35) term -> . FALSE
    (36) term -> . NULL
    (37) term -> . TEXT_STRING
    (38) term -> . TEXT_CHAR

    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    VARIABLE        shift and go to state 71
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    expression                     shift and go to state 76
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 30

    (30) primary_expression -> term .

    END_LINE        reduce using rule 30 (primary_expression -> term .)
    PLUS_OP         reduce using rule 30 (primary_expression -> term .)
    MINUS_OP        reduce using rule 30 (primary_expression -> term .)
    MUL_OP          reduce using rule 30 (primary_expression -> term .)
    DIV_OP          reduce using rule 30 (primary_expression -> term .)
    LESS_OP         reduce using rule 30 (primary_expression -> term .)
    GREATER_OP      reduce using rule 30 (primary_expression -> term .)
    LESS_EQUAL_OP   reduce using rule 30 (primary_expression -> term .)
    GREATER_EQUAL_OP reduce using rule 30 (primary_expression -> term .)
    EQUAL_OP        reduce using rule 30 (primary_expression -> term .)
    DIFFERENT_OP    reduce using rule 30 (primary_expression -> term .)
    LOGICAL_OP_AND  reduce using rule 30 (primary_expression -> term .)
    LOGICAL_OP_OR   reduce using rule 30 (primary_expression -> term .)
    RPAREN          reduce using rule 30 (primary_expression -> term .)
    SEPARATION      reduce using rule 30 (primary_expression -> term .)


state 31

    (31) term -> NUMBER_INTEGER .

    END_LINE        reduce using rule 31 (term -> NUMBER_INTEGER .)
    PLUS_OP         reduce using rule 31 (term -> NUMBER_INTEGER .)
    MINUS_OP        reduce using rule 31 (term -> NUMBER_INTEGER .)
    MUL_OP          reduce using rule 31 (term -> NUMBER_INTEGER .)
    DIV_OP          reduce using rule 31 (term -> NUMBER_INTEGER .)
    LESS_OP         reduce using rule 31 (term -> NUMBER_INTEGER .)
    GREATER_OP      reduce using rule 31 (term -> NUMBER_INTEGER .)
    LESS_EQUAL_OP   reduce using rule 31 (term -> NUMBER_INTEGER .)
    GREATER_EQUAL_OP reduce using rule 31 (term -> NUMBER_INTEGER .)
    EQUAL_OP        reduce using rule 31 (term -> NUMBER_INTEGER .)
    DIFFERENT_OP    reduce using rule 31 (term -> NUMBER_INTEGER .)
    LOGICAL_OP_AND  reduce using rule 31 (term -> NUMBER_INTEGER .)
    LOGICAL_OP_OR   reduce using rule 31 (term -> NUMBER_INTEGER .)
    RPAREN          reduce using rule 31 (term -> NUMBER_INTEGER .)
    SEPARATION      reduce using rule 31 (term -> NUMBER_INTEGER .)


state 32

    (32) term -> NUMBER_FLOAT .

    END_LINE        reduce using rule 32 (term -> NUMBER_FLOAT .)
    PLUS_OP         reduce using rule 32 (term -> NUMBER_FLOAT .)
    MINUS_OP        reduce using rule 32 (term -> NUMBER_FLOAT .)
    MUL_OP          reduce using rule 32 (term -> NUMBER_FLOAT .)
    DIV_OP          reduce using rule 32 (term -> NUMBER_FLOAT .)
    LESS_OP         reduce using rule 32 (term -> NUMBER_FLOAT .)
    GREATER_OP      reduce using rule 32 (term -> NUMBER_FLOAT .)
    LESS_EQUAL_OP   reduce using rule 32 (term -> NUMBER_FLOAT .)
    GREATER_EQUAL_OP reduce using rule 32 (term -> NUMBER_FLOAT .)
    EQUAL_OP        reduce using rule 32 (term -> NUMBER_FLOAT .)
    DIFFERENT_OP    reduce using rule 32 (term -> NUMBER_FLOAT .)
    LOGICAL_OP_AND  reduce using rule 32 (term -> NUMBER_FLOAT .)
    LOGICAL_OP_OR   reduce using rule 32 (term -> NUMBER_FLOAT .)
    RPAREN          reduce using rule 32 (term -> NUMBER_FLOAT .)
    SEPARATION      reduce using rule 32 (term -> NUMBER_FLOAT .)


state 33

    (34) term -> TRUE .

    END_LINE        reduce using rule 34 (term -> TRUE .)
    PLUS_OP         reduce using rule 34 (term -> TRUE .)
    MINUS_OP        reduce using rule 34 (term -> TRUE .)
    MUL_OP          reduce using rule 34 (term -> TRUE .)
    DIV_OP          reduce using rule 34 (term -> TRUE .)
    LESS_OP         reduce using rule 34 (term -> TRUE .)
    GREATER_OP      reduce using rule 34 (term -> TRUE .)
    LESS_EQUAL_OP   reduce using rule 34 (term -> TRUE .)
    GREATER_EQUAL_OP reduce using rule 34 (term -> TRUE .)
    EQUAL_OP        reduce using rule 34 (term -> TRUE .)
    DIFFERENT_OP    reduce using rule 34 (term -> TRUE .)
    LOGICAL_OP_AND  reduce using rule 34 (term -> TRUE .)
    LOGICAL_OP_OR   reduce using rule 34 (term -> TRUE .)
    RPAREN          reduce using rule 34 (term -> TRUE .)
    SEPARATION      reduce using rule 34 (term -> TRUE .)


state 34

    (35) term -> FALSE .

    END_LINE        reduce using rule 35 (term -> FALSE .)
    PLUS_OP         reduce using rule 35 (term -> FALSE .)
    MINUS_OP        reduce using rule 35 (term -> FALSE .)
    MUL_OP          reduce using rule 35 (term -> FALSE .)
    DIV_OP          reduce using rule 35 (term -> FALSE .)
    LESS_OP         reduce using rule 35 (term -> FALSE .)
    GREATER_OP      reduce using rule 35 (term -> FALSE .)
    LESS_EQUAL_OP   reduce using rule 35 (term -> FALSE .)
    GREATER_EQUAL_OP reduce using rule 35 (term -> FALSE .)
    EQUAL_OP        reduce using rule 35 (term -> FALSE .)
    DIFFERENT_OP    reduce using rule 35 (term -> FALSE .)
    LOGICAL_OP_AND  reduce using rule 35 (term -> FALSE .)
    LOGICAL_OP_OR   reduce using rule 35 (term -> FALSE .)
    RPAREN          reduce using rule 35 (term -> FALSE .)
    SEPARATION      reduce using rule 35 (term -> FALSE .)


state 35

    (36) term -> NULL .

    END_LINE        reduce using rule 36 (term -> NULL .)
    PLUS_OP         reduce using rule 36 (term -> NULL .)
    MINUS_OP        reduce using rule 36 (term -> NULL .)
    MUL_OP          reduce using rule 36 (term -> NULL .)
    DIV_OP          reduce using rule 36 (term -> NULL .)
    LESS_OP         reduce using rule 36 (term -> NULL .)
    GREATER_OP      reduce using rule 36 (term -> NULL .)
    LESS_EQUAL_OP   reduce using rule 36 (term -> NULL .)
    GREATER_EQUAL_OP reduce using rule 36 (term -> NULL .)
    EQUAL_OP        reduce using rule 36 (term -> NULL .)
    DIFFERENT_OP    reduce using rule 36 (term -> NULL .)
    LOGICAL_OP_AND  reduce using rule 36 (term -> NULL .)
    LOGICAL_OP_OR   reduce using rule 36 (term -> NULL .)
    RPAREN          reduce using rule 36 (term -> NULL .)
    SEPARATION      reduce using rule 36 (term -> NULL .)


state 36

    (37) term -> TEXT_STRING .

    END_LINE        reduce using rule 37 (term -> TEXT_STRING .)
    PLUS_OP         reduce using rule 37 (term -> TEXT_STRING .)
    MINUS_OP        reduce using rule 37 (term -> TEXT_STRING .)
    MUL_OP          reduce using rule 37 (term -> TEXT_STRING .)
    DIV_OP          reduce using rule 37 (term -> TEXT_STRING .)
    LESS_OP         reduce using rule 37 (term -> TEXT_STRING .)
    GREATER_OP      reduce using rule 37 (term -> TEXT_STRING .)
    LESS_EQUAL_OP   reduce using rule 37 (term -> TEXT_STRING .)
    GREATER_EQUAL_OP reduce using rule 37 (term -> TEXT_STRING .)
    EQUAL_OP        reduce using rule 37 (term -> TEXT_STRING .)
    DIFFERENT_OP    reduce using rule 37 (term -> TEXT_STRING .)
    LOGICAL_OP_AND  reduce using rule 37 (term -> TEXT_STRING .)
    LOGICAL_OP_OR   reduce using rule 37 (term -> TEXT_STRING .)
    RPAREN          reduce using rule 37 (term -> TEXT_STRING .)
    SEPARATION      reduce using rule 37 (term -> TEXT_STRING .)


state 37

    (38) term -> TEXT_CHAR .

    END_LINE        reduce using rule 38 (term -> TEXT_CHAR .)
    PLUS_OP         reduce using rule 38 (term -> TEXT_CHAR .)
    MINUS_OP        reduce using rule 38 (term -> TEXT_CHAR .)
    MUL_OP          reduce using rule 38 (term -> TEXT_CHAR .)
    DIV_OP          reduce using rule 38 (term -> TEXT_CHAR .)
    LESS_OP         reduce using rule 38 (term -> TEXT_CHAR .)
    GREATER_OP      reduce using rule 38 (term -> TEXT_CHAR .)
    LESS_EQUAL_OP   reduce using rule 38 (term -> TEXT_CHAR .)
    GREATER_EQUAL_OP reduce using rule 38 (term -> TEXT_CHAR .)
    EQUAL_OP        reduce using rule 38 (term -> TEXT_CHAR .)
    DIFFERENT_OP    reduce using rule 38 (term -> TEXT_CHAR .)
    LOGICAL_OP_AND  reduce using rule 38 (term -> TEXT_CHAR .)
    LOGICAL_OP_OR   reduce using rule 38 (term -> TEXT_CHAR .)
    RPAREN          reduce using rule 38 (term -> TEXT_CHAR .)
    SEPARATION      reduce using rule 38 (term -> TEXT_CHAR .)


state 38

    (2) statement_list -> statement_list statement .

    VARIABLE        reduce using rule 2 (statement_list -> statement_list statement .)
    TYPE_BOOLEAN    reduce using rule 2 (statement_list -> statement_list statement .)
    TYPE_STRING     reduce using rule 2 (statement_list -> statement_list statement .)
    TYPE_CHAR       reduce using rule 2 (statement_list -> statement_list statement .)
    TYPE_INTEGER    reduce using rule 2 (statement_list -> statement_list statement .)
    TYPE_FLOAT      reduce using rule 2 (statement_list -> statement_list statement .)
    CONDITIONAL1    reduce using rule 2 (statement_list -> statement_list statement .)
    LOOP1           reduce using rule 2 (statement_list -> statement_list statement .)
    LOOP2           reduce using rule 2 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 2 (statement_list -> statement_list statement .)
    BREAK           reduce using rule 2 (statement_list -> statement_list statement .)
    COMMENT         reduce using rule 2 (statement_list -> statement_list statement .)
    MINUS_OP        reduce using rule 2 (statement_list -> statement_list statement .)
    LOGICAL_OP_NOT  reduce using rule 2 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 2 (statement_list -> statement_list statement .)
    NUMBER_INTEGER  reduce using rule 2 (statement_list -> statement_list statement .)
    NUMBER_FLOAT    reduce using rule 2 (statement_list -> statement_list statement .)
    TRUE            reduce using rule 2 (statement_list -> statement_list statement .)
    FALSE           reduce using rule 2 (statement_list -> statement_list statement .)
    NULL            reduce using rule 2 (statement_list -> statement_list statement .)
    TEXT_STRING     reduce using rule 2 (statement_list -> statement_list statement .)
    TEXT_CHAR       reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)
    CONDITIONAL2    reduce using rule 2 (statement_list -> statement_list statement .)
    END_LINE        reduce using rule 2 (statement_list -> statement_list statement .)


state 39

    (4) statement -> expression END_LINE .

    VARIABLE        reduce using rule 4 (statement -> expression END_LINE .)
    TYPE_BOOLEAN    reduce using rule 4 (statement -> expression END_LINE .)
    TYPE_STRING     reduce using rule 4 (statement -> expression END_LINE .)
    TYPE_CHAR       reduce using rule 4 (statement -> expression END_LINE .)
    TYPE_INTEGER    reduce using rule 4 (statement -> expression END_LINE .)
    TYPE_FLOAT      reduce using rule 4 (statement -> expression END_LINE .)
    CONDITIONAL1    reduce using rule 4 (statement -> expression END_LINE .)
    LOOP1           reduce using rule 4 (statement -> expression END_LINE .)
    LOOP2           reduce using rule 4 (statement -> expression END_LINE .)
    RETURN          reduce using rule 4 (statement -> expression END_LINE .)
    BREAK           reduce using rule 4 (statement -> expression END_LINE .)
    COMMENT         reduce using rule 4 (statement -> expression END_LINE .)
    MINUS_OP        reduce using rule 4 (statement -> expression END_LINE .)
    LOGICAL_OP_NOT  reduce using rule 4 (statement -> expression END_LINE .)
    LPAREN          reduce using rule 4 (statement -> expression END_LINE .)
    NUMBER_INTEGER  reduce using rule 4 (statement -> expression END_LINE .)
    NUMBER_FLOAT    reduce using rule 4 (statement -> expression END_LINE .)
    TRUE            reduce using rule 4 (statement -> expression END_LINE .)
    FALSE           reduce using rule 4 (statement -> expression END_LINE .)
    NULL            reduce using rule 4 (statement -> expression END_LINE .)
    TEXT_STRING     reduce using rule 4 (statement -> expression END_LINE .)
    TEXT_CHAR       reduce using rule 4 (statement -> expression END_LINE .)
    $end            reduce using rule 4 (statement -> expression END_LINE .)
    CONDITIONAL2    reduce using rule 4 (statement -> expression END_LINE .)
    END_LINE        reduce using rule 4 (statement -> expression END_LINE .)


state 40

    (15) binary_expression -> expression PLUS_OP . expression
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (15) binary_expression -> . expression PLUS_OP expression
    (16) binary_expression -> . expression MINUS_OP expression
    (17) binary_expression -> . expression MUL_OP expression
    (18) binary_expression -> . expression DIV_OP expression
    (19) binary_expression -> . expression LESS_OP expression
    (20) binary_expression -> . expression GREATER_OP expression
    (21) binary_expression -> . expression LESS_EQUAL_OP expression
    (22) binary_expression -> . expression GREATER_EQUAL_OP expression
    (23) binary_expression -> . expression EQUAL_OP expression
    (24) binary_expression -> . expression DIFFERENT_OP expression
    (25) binary_expression -> . expression LOGICAL_OP_AND expression
    (26) binary_expression -> . expression LOGICAL_OP_OR expression
    (27) unitary_expression -> . MINUS_OP expression
    (28) unitary_expression -> . LOGICAL_OP_NOT expression
    (29) primary_expression -> . LPAREN expression RPAREN
    (30) primary_expression -> . term
    (31) term -> . NUMBER_INTEGER
    (32) term -> . NUMBER_FLOAT
    (33) term -> . VARIABLE
    (34) term -> . TRUE
    (35) term -> . FALSE
    (36) term -> . NULL
    (37) term -> . TEXT_STRING
    (38) term -> . TEXT_CHAR

    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    VARIABLE        shift and go to state 71
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    expression                     shift and go to state 77
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 41

    (16) binary_expression -> expression MINUS_OP . expression
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (15) binary_expression -> . expression PLUS_OP expression
    (16) binary_expression -> . expression MINUS_OP expression
    (17) binary_expression -> . expression MUL_OP expression
    (18) binary_expression -> . expression DIV_OP expression
    (19) binary_expression -> . expression LESS_OP expression
    (20) binary_expression -> . expression GREATER_OP expression
    (21) binary_expression -> . expression LESS_EQUAL_OP expression
    (22) binary_expression -> . expression GREATER_EQUAL_OP expression
    (23) binary_expression -> . expression EQUAL_OP expression
    (24) binary_expression -> . expression DIFFERENT_OP expression
    (25) binary_expression -> . expression LOGICAL_OP_AND expression
    (26) binary_expression -> . expression LOGICAL_OP_OR expression
    (27) unitary_expression -> . MINUS_OP expression
    (28) unitary_expression -> . LOGICAL_OP_NOT expression
    (29) primary_expression -> . LPAREN expression RPAREN
    (30) primary_expression -> . term
    (31) term -> . NUMBER_INTEGER
    (32) term -> . NUMBER_FLOAT
    (33) term -> . VARIABLE
    (34) term -> . TRUE
    (35) term -> . FALSE
    (36) term -> . NULL
    (37) term -> . TEXT_STRING
    (38) term -> . TEXT_CHAR

    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    VARIABLE        shift and go to state 71
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    expression                     shift and go to state 78
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 42

    (17) binary_expression -> expression MUL_OP . expression
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (15) binary_expression -> . expression PLUS_OP expression
    (16) binary_expression -> . expression MINUS_OP expression
    (17) binary_expression -> . expression MUL_OP expression
    (18) binary_expression -> . expression DIV_OP expression
    (19) binary_expression -> . expression LESS_OP expression
    (20) binary_expression -> . expression GREATER_OP expression
    (21) binary_expression -> . expression LESS_EQUAL_OP expression
    (22) binary_expression -> . expression GREATER_EQUAL_OP expression
    (23) binary_expression -> . expression EQUAL_OP expression
    (24) binary_expression -> . expression DIFFERENT_OP expression
    (25) binary_expression -> . expression LOGICAL_OP_AND expression
    (26) binary_expression -> . expression LOGICAL_OP_OR expression
    (27) unitary_expression -> . MINUS_OP expression
    (28) unitary_expression -> . LOGICAL_OP_NOT expression
    (29) primary_expression -> . LPAREN expression RPAREN
    (30) primary_expression -> . term
    (31) term -> . NUMBER_INTEGER
    (32) term -> . NUMBER_FLOAT
    (33) term -> . VARIABLE
    (34) term -> . TRUE
    (35) term -> . FALSE
    (36) term -> . NULL
    (37) term -> . TEXT_STRING
    (38) term -> . TEXT_CHAR

    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    VARIABLE        shift and go to state 71
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    expression                     shift and go to state 79
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 43

    (18) binary_expression -> expression DIV_OP . expression
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (15) binary_expression -> . expression PLUS_OP expression
    (16) binary_expression -> . expression MINUS_OP expression
    (17) binary_expression -> . expression MUL_OP expression
    (18) binary_expression -> . expression DIV_OP expression
    (19) binary_expression -> . expression LESS_OP expression
    (20) binary_expression -> . expression GREATER_OP expression
    (21) binary_expression -> . expression LESS_EQUAL_OP expression
    (22) binary_expression -> . expression GREATER_EQUAL_OP expression
    (23) binary_expression -> . expression EQUAL_OP expression
    (24) binary_expression -> . expression DIFFERENT_OP expression
    (25) binary_expression -> . expression LOGICAL_OP_AND expression
    (26) binary_expression -> . expression LOGICAL_OP_OR expression
    (27) unitary_expression -> . MINUS_OP expression
    (28) unitary_expression -> . LOGICAL_OP_NOT expression
    (29) primary_expression -> . LPAREN expression RPAREN
    (30) primary_expression -> . term
    (31) term -> . NUMBER_INTEGER
    (32) term -> . NUMBER_FLOAT
    (33) term -> . VARIABLE
    (34) term -> . TRUE
    (35) term -> . FALSE
    (36) term -> . NULL
    (37) term -> . TEXT_STRING
    (38) term -> . TEXT_CHAR

    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    VARIABLE        shift and go to state 71
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    expression                     shift and go to state 80
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 44

    (19) binary_expression -> expression LESS_OP . expression
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (15) binary_expression -> . expression PLUS_OP expression
    (16) binary_expression -> . expression MINUS_OP expression
    (17) binary_expression -> . expression MUL_OP expression
    (18) binary_expression -> . expression DIV_OP expression
    (19) binary_expression -> . expression LESS_OP expression
    (20) binary_expression -> . expression GREATER_OP expression
    (21) binary_expression -> . expression LESS_EQUAL_OP expression
    (22) binary_expression -> . expression GREATER_EQUAL_OP expression
    (23) binary_expression -> . expression EQUAL_OP expression
    (24) binary_expression -> . expression DIFFERENT_OP expression
    (25) binary_expression -> . expression LOGICAL_OP_AND expression
    (26) binary_expression -> . expression LOGICAL_OP_OR expression
    (27) unitary_expression -> . MINUS_OP expression
    (28) unitary_expression -> . LOGICAL_OP_NOT expression
    (29) primary_expression -> . LPAREN expression RPAREN
    (30) primary_expression -> . term
    (31) term -> . NUMBER_INTEGER
    (32) term -> . NUMBER_FLOAT
    (33) term -> . VARIABLE
    (34) term -> . TRUE
    (35) term -> . FALSE
    (36) term -> . NULL
    (37) term -> . TEXT_STRING
    (38) term -> . TEXT_CHAR

    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    VARIABLE        shift and go to state 71
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    expression                     shift and go to state 81
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 45

    (20) binary_expression -> expression GREATER_OP . expression
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (15) binary_expression -> . expression PLUS_OP expression
    (16) binary_expression -> . expression MINUS_OP expression
    (17) binary_expression -> . expression MUL_OP expression
    (18) binary_expression -> . expression DIV_OP expression
    (19) binary_expression -> . expression LESS_OP expression
    (20) binary_expression -> . expression GREATER_OP expression
    (21) binary_expression -> . expression LESS_EQUAL_OP expression
    (22) binary_expression -> . expression GREATER_EQUAL_OP expression
    (23) binary_expression -> . expression EQUAL_OP expression
    (24) binary_expression -> . expression DIFFERENT_OP expression
    (25) binary_expression -> . expression LOGICAL_OP_AND expression
    (26) binary_expression -> . expression LOGICAL_OP_OR expression
    (27) unitary_expression -> . MINUS_OP expression
    (28) unitary_expression -> . LOGICAL_OP_NOT expression
    (29) primary_expression -> . LPAREN expression RPAREN
    (30) primary_expression -> . term
    (31) term -> . NUMBER_INTEGER
    (32) term -> . NUMBER_FLOAT
    (33) term -> . VARIABLE
    (34) term -> . TRUE
    (35) term -> . FALSE
    (36) term -> . NULL
    (37) term -> . TEXT_STRING
    (38) term -> . TEXT_CHAR

    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    VARIABLE        shift and go to state 71
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    expression                     shift and go to state 82
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 46

    (21) binary_expression -> expression LESS_EQUAL_OP . expression
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (15) binary_expression -> . expression PLUS_OP expression
    (16) binary_expression -> . expression MINUS_OP expression
    (17) binary_expression -> . expression MUL_OP expression
    (18) binary_expression -> . expression DIV_OP expression
    (19) binary_expression -> . expression LESS_OP expression
    (20) binary_expression -> . expression GREATER_OP expression
    (21) binary_expression -> . expression LESS_EQUAL_OP expression
    (22) binary_expression -> . expression GREATER_EQUAL_OP expression
    (23) binary_expression -> . expression EQUAL_OP expression
    (24) binary_expression -> . expression DIFFERENT_OP expression
    (25) binary_expression -> . expression LOGICAL_OP_AND expression
    (26) binary_expression -> . expression LOGICAL_OP_OR expression
    (27) unitary_expression -> . MINUS_OP expression
    (28) unitary_expression -> . LOGICAL_OP_NOT expression
    (29) primary_expression -> . LPAREN expression RPAREN
    (30) primary_expression -> . term
    (31) term -> . NUMBER_INTEGER
    (32) term -> . NUMBER_FLOAT
    (33) term -> . VARIABLE
    (34) term -> . TRUE
    (35) term -> . FALSE
    (36) term -> . NULL
    (37) term -> . TEXT_STRING
    (38) term -> . TEXT_CHAR

    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    VARIABLE        shift and go to state 71
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    expression                     shift and go to state 83
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 47

    (22) binary_expression -> expression GREATER_EQUAL_OP . expression
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (15) binary_expression -> . expression PLUS_OP expression
    (16) binary_expression -> . expression MINUS_OP expression
    (17) binary_expression -> . expression MUL_OP expression
    (18) binary_expression -> . expression DIV_OP expression
    (19) binary_expression -> . expression LESS_OP expression
    (20) binary_expression -> . expression GREATER_OP expression
    (21) binary_expression -> . expression LESS_EQUAL_OP expression
    (22) binary_expression -> . expression GREATER_EQUAL_OP expression
    (23) binary_expression -> . expression EQUAL_OP expression
    (24) binary_expression -> . expression DIFFERENT_OP expression
    (25) binary_expression -> . expression LOGICAL_OP_AND expression
    (26) binary_expression -> . expression LOGICAL_OP_OR expression
    (27) unitary_expression -> . MINUS_OP expression
    (28) unitary_expression -> . LOGICAL_OP_NOT expression
    (29) primary_expression -> . LPAREN expression RPAREN
    (30) primary_expression -> . term
    (31) term -> . NUMBER_INTEGER
    (32) term -> . NUMBER_FLOAT
    (33) term -> . VARIABLE
    (34) term -> . TRUE
    (35) term -> . FALSE
    (36) term -> . NULL
    (37) term -> . TEXT_STRING
    (38) term -> . TEXT_CHAR

    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    VARIABLE        shift and go to state 71
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    expression                     shift and go to state 84
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 48

    (23) binary_expression -> expression EQUAL_OP . expression
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (15) binary_expression -> . expression PLUS_OP expression
    (16) binary_expression -> . expression MINUS_OP expression
    (17) binary_expression -> . expression MUL_OP expression
    (18) binary_expression -> . expression DIV_OP expression
    (19) binary_expression -> . expression LESS_OP expression
    (20) binary_expression -> . expression GREATER_OP expression
    (21) binary_expression -> . expression LESS_EQUAL_OP expression
    (22) binary_expression -> . expression GREATER_EQUAL_OP expression
    (23) binary_expression -> . expression EQUAL_OP expression
    (24) binary_expression -> . expression DIFFERENT_OP expression
    (25) binary_expression -> . expression LOGICAL_OP_AND expression
    (26) binary_expression -> . expression LOGICAL_OP_OR expression
    (27) unitary_expression -> . MINUS_OP expression
    (28) unitary_expression -> . LOGICAL_OP_NOT expression
    (29) primary_expression -> . LPAREN expression RPAREN
    (30) primary_expression -> . term
    (31) term -> . NUMBER_INTEGER
    (32) term -> . NUMBER_FLOAT
    (33) term -> . VARIABLE
    (34) term -> . TRUE
    (35) term -> . FALSE
    (36) term -> . NULL
    (37) term -> . TEXT_STRING
    (38) term -> . TEXT_CHAR

    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    VARIABLE        shift and go to state 71
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    expression                     shift and go to state 85
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 49

    (24) binary_expression -> expression DIFFERENT_OP . expression
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (15) binary_expression -> . expression PLUS_OP expression
    (16) binary_expression -> . expression MINUS_OP expression
    (17) binary_expression -> . expression MUL_OP expression
    (18) binary_expression -> . expression DIV_OP expression
    (19) binary_expression -> . expression LESS_OP expression
    (20) binary_expression -> . expression GREATER_OP expression
    (21) binary_expression -> . expression LESS_EQUAL_OP expression
    (22) binary_expression -> . expression GREATER_EQUAL_OP expression
    (23) binary_expression -> . expression EQUAL_OP expression
    (24) binary_expression -> . expression DIFFERENT_OP expression
    (25) binary_expression -> . expression LOGICAL_OP_AND expression
    (26) binary_expression -> . expression LOGICAL_OP_OR expression
    (27) unitary_expression -> . MINUS_OP expression
    (28) unitary_expression -> . LOGICAL_OP_NOT expression
    (29) primary_expression -> . LPAREN expression RPAREN
    (30) primary_expression -> . term
    (31) term -> . NUMBER_INTEGER
    (32) term -> . NUMBER_FLOAT
    (33) term -> . VARIABLE
    (34) term -> . TRUE
    (35) term -> . FALSE
    (36) term -> . NULL
    (37) term -> . TEXT_STRING
    (38) term -> . TEXT_CHAR

    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    VARIABLE        shift and go to state 71
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    expression                     shift and go to state 86
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 50

    (25) binary_expression -> expression LOGICAL_OP_AND . expression
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (15) binary_expression -> . expression PLUS_OP expression
    (16) binary_expression -> . expression MINUS_OP expression
    (17) binary_expression -> . expression MUL_OP expression
    (18) binary_expression -> . expression DIV_OP expression
    (19) binary_expression -> . expression LESS_OP expression
    (20) binary_expression -> . expression GREATER_OP expression
    (21) binary_expression -> . expression LESS_EQUAL_OP expression
    (22) binary_expression -> . expression GREATER_EQUAL_OP expression
    (23) binary_expression -> . expression EQUAL_OP expression
    (24) binary_expression -> . expression DIFFERENT_OP expression
    (25) binary_expression -> . expression LOGICAL_OP_AND expression
    (26) binary_expression -> . expression LOGICAL_OP_OR expression
    (27) unitary_expression -> . MINUS_OP expression
    (28) unitary_expression -> . LOGICAL_OP_NOT expression
    (29) primary_expression -> . LPAREN expression RPAREN
    (30) primary_expression -> . term
    (31) term -> . NUMBER_INTEGER
    (32) term -> . NUMBER_FLOAT
    (33) term -> . VARIABLE
    (34) term -> . TRUE
    (35) term -> . FALSE
    (36) term -> . NULL
    (37) term -> . TEXT_STRING
    (38) term -> . TEXT_CHAR

    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    VARIABLE        shift and go to state 71
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    expression                     shift and go to state 87
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 51

    (26) binary_expression -> expression LOGICAL_OP_OR . expression
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (15) binary_expression -> . expression PLUS_OP expression
    (16) binary_expression -> . expression MINUS_OP expression
    (17) binary_expression -> . expression MUL_OP expression
    (18) binary_expression -> . expression DIV_OP expression
    (19) binary_expression -> . expression LESS_OP expression
    (20) binary_expression -> . expression GREATER_OP expression
    (21) binary_expression -> . expression LESS_EQUAL_OP expression
    (22) binary_expression -> . expression GREATER_EQUAL_OP expression
    (23) binary_expression -> . expression EQUAL_OP expression
    (24) binary_expression -> . expression DIFFERENT_OP expression
    (25) binary_expression -> . expression LOGICAL_OP_AND expression
    (26) binary_expression -> . expression LOGICAL_OP_OR expression
    (27) unitary_expression -> . MINUS_OP expression
    (28) unitary_expression -> . LOGICAL_OP_NOT expression
    (29) primary_expression -> . LPAREN expression RPAREN
    (30) primary_expression -> . term
    (31) term -> . NUMBER_INTEGER
    (32) term -> . NUMBER_FLOAT
    (33) term -> . VARIABLE
    (34) term -> . TRUE
    (35) term -> . FALSE
    (36) term -> . NULL
    (37) term -> . TEXT_STRING
    (38) term -> . TEXT_CHAR

    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    VARIABLE        shift and go to state 71
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    expression                     shift and go to state 88
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 52

    (5) statement -> assignment END_LINE .

    VARIABLE        reduce using rule 5 (statement -> assignment END_LINE .)
    TYPE_BOOLEAN    reduce using rule 5 (statement -> assignment END_LINE .)
    TYPE_STRING     reduce using rule 5 (statement -> assignment END_LINE .)
    TYPE_CHAR       reduce using rule 5 (statement -> assignment END_LINE .)
    TYPE_INTEGER    reduce using rule 5 (statement -> assignment END_LINE .)
    TYPE_FLOAT      reduce using rule 5 (statement -> assignment END_LINE .)
    CONDITIONAL1    reduce using rule 5 (statement -> assignment END_LINE .)
    LOOP1           reduce using rule 5 (statement -> assignment END_LINE .)
    LOOP2           reduce using rule 5 (statement -> assignment END_LINE .)
    RETURN          reduce using rule 5 (statement -> assignment END_LINE .)
    BREAK           reduce using rule 5 (statement -> assignment END_LINE .)
    COMMENT         reduce using rule 5 (statement -> assignment END_LINE .)
    MINUS_OP        reduce using rule 5 (statement -> assignment END_LINE .)
    LOGICAL_OP_NOT  reduce using rule 5 (statement -> assignment END_LINE .)
    LPAREN          reduce using rule 5 (statement -> assignment END_LINE .)
    NUMBER_INTEGER  reduce using rule 5 (statement -> assignment END_LINE .)
    NUMBER_FLOAT    reduce using rule 5 (statement -> assignment END_LINE .)
    TRUE            reduce using rule 5 (statement -> assignment END_LINE .)
    FALSE           reduce using rule 5 (statement -> assignment END_LINE .)
    NULL            reduce using rule 5 (statement -> assignment END_LINE .)
    TEXT_STRING     reduce using rule 5 (statement -> assignment END_LINE .)
    TEXT_CHAR       reduce using rule 5 (statement -> assignment END_LINE .)
    $end            reduce using rule 5 (statement -> assignment END_LINE .)
    CONDITIONAL2    reduce using rule 5 (statement -> assignment END_LINE .)
    END_LINE        reduce using rule 5 (statement -> assignment END_LINE .)


state 53

    (6) statement -> declaration END_LINE .

    VARIABLE        reduce using rule 6 (statement -> declaration END_LINE .)
    TYPE_BOOLEAN    reduce using rule 6 (statement -> declaration END_LINE .)
    TYPE_STRING     reduce using rule 6 (statement -> declaration END_LINE .)
    TYPE_CHAR       reduce using rule 6 (statement -> declaration END_LINE .)
    TYPE_INTEGER    reduce using rule 6 (statement -> declaration END_LINE .)
    TYPE_FLOAT      reduce using rule 6 (statement -> declaration END_LINE .)
    CONDITIONAL1    reduce using rule 6 (statement -> declaration END_LINE .)
    LOOP1           reduce using rule 6 (statement -> declaration END_LINE .)
    LOOP2           reduce using rule 6 (statement -> declaration END_LINE .)
    RETURN          reduce using rule 6 (statement -> declaration END_LINE .)
    BREAK           reduce using rule 6 (statement -> declaration END_LINE .)
    COMMENT         reduce using rule 6 (statement -> declaration END_LINE .)
    MINUS_OP        reduce using rule 6 (statement -> declaration END_LINE .)
    LOGICAL_OP_NOT  reduce using rule 6 (statement -> declaration END_LINE .)
    LPAREN          reduce using rule 6 (statement -> declaration END_LINE .)
    NUMBER_INTEGER  reduce using rule 6 (statement -> declaration END_LINE .)
    NUMBER_FLOAT    reduce using rule 6 (statement -> declaration END_LINE .)
    TRUE            reduce using rule 6 (statement -> declaration END_LINE .)
    FALSE           reduce using rule 6 (statement -> declaration END_LINE .)
    NULL            reduce using rule 6 (statement -> declaration END_LINE .)
    TEXT_STRING     reduce using rule 6 (statement -> declaration END_LINE .)
    TEXT_CHAR       reduce using rule 6 (statement -> declaration END_LINE .)
    $end            reduce using rule 6 (statement -> declaration END_LINE .)
    CONDITIONAL2    reduce using rule 6 (statement -> declaration END_LINE .)
    END_LINE        reduce using rule 6 (statement -> declaration END_LINE .)


state 54

    (7) statement -> conditional END_LINE .

    VARIABLE        reduce using rule 7 (statement -> conditional END_LINE .)
    TYPE_BOOLEAN    reduce using rule 7 (statement -> conditional END_LINE .)
    TYPE_STRING     reduce using rule 7 (statement -> conditional END_LINE .)
    TYPE_CHAR       reduce using rule 7 (statement -> conditional END_LINE .)
    TYPE_INTEGER    reduce using rule 7 (statement -> conditional END_LINE .)
    TYPE_FLOAT      reduce using rule 7 (statement -> conditional END_LINE .)
    CONDITIONAL1    reduce using rule 7 (statement -> conditional END_LINE .)
    LOOP1           reduce using rule 7 (statement -> conditional END_LINE .)
    LOOP2           reduce using rule 7 (statement -> conditional END_LINE .)
    RETURN          reduce using rule 7 (statement -> conditional END_LINE .)
    BREAK           reduce using rule 7 (statement -> conditional END_LINE .)
    COMMENT         reduce using rule 7 (statement -> conditional END_LINE .)
    MINUS_OP        reduce using rule 7 (statement -> conditional END_LINE .)
    LOGICAL_OP_NOT  reduce using rule 7 (statement -> conditional END_LINE .)
    LPAREN          reduce using rule 7 (statement -> conditional END_LINE .)
    NUMBER_INTEGER  reduce using rule 7 (statement -> conditional END_LINE .)
    NUMBER_FLOAT    reduce using rule 7 (statement -> conditional END_LINE .)
    TRUE            reduce using rule 7 (statement -> conditional END_LINE .)
    FALSE           reduce using rule 7 (statement -> conditional END_LINE .)
    NULL            reduce using rule 7 (statement -> conditional END_LINE .)
    TEXT_STRING     reduce using rule 7 (statement -> conditional END_LINE .)
    TEXT_CHAR       reduce using rule 7 (statement -> conditional END_LINE .)
    $end            reduce using rule 7 (statement -> conditional END_LINE .)
    CONDITIONAL2    reduce using rule 7 (statement -> conditional END_LINE .)
    END_LINE        reduce using rule 7 (statement -> conditional END_LINE .)


state 55

    (8) statement -> loop END_LINE .

    VARIABLE        reduce using rule 8 (statement -> loop END_LINE .)
    TYPE_BOOLEAN    reduce using rule 8 (statement -> loop END_LINE .)
    TYPE_STRING     reduce using rule 8 (statement -> loop END_LINE .)
    TYPE_CHAR       reduce using rule 8 (statement -> loop END_LINE .)
    TYPE_INTEGER    reduce using rule 8 (statement -> loop END_LINE .)
    TYPE_FLOAT      reduce using rule 8 (statement -> loop END_LINE .)
    CONDITIONAL1    reduce using rule 8 (statement -> loop END_LINE .)
    LOOP1           reduce using rule 8 (statement -> loop END_LINE .)
    LOOP2           reduce using rule 8 (statement -> loop END_LINE .)
    RETURN          reduce using rule 8 (statement -> loop END_LINE .)
    BREAK           reduce using rule 8 (statement -> loop END_LINE .)
    COMMENT         reduce using rule 8 (statement -> loop END_LINE .)
    MINUS_OP        reduce using rule 8 (statement -> loop END_LINE .)
    LOGICAL_OP_NOT  reduce using rule 8 (statement -> loop END_LINE .)
    LPAREN          reduce using rule 8 (statement -> loop END_LINE .)
    NUMBER_INTEGER  reduce using rule 8 (statement -> loop END_LINE .)
    NUMBER_FLOAT    reduce using rule 8 (statement -> loop END_LINE .)
    TRUE            reduce using rule 8 (statement -> loop END_LINE .)
    FALSE           reduce using rule 8 (statement -> loop END_LINE .)
    NULL            reduce using rule 8 (statement -> loop END_LINE .)
    TEXT_STRING     reduce using rule 8 (statement -> loop END_LINE .)
    TEXT_CHAR       reduce using rule 8 (statement -> loop END_LINE .)
    $end            reduce using rule 8 (statement -> loop END_LINE .)
    CONDITIONAL2    reduce using rule 8 (statement -> loop END_LINE .)
    END_LINE        reduce using rule 8 (statement -> loop END_LINE .)


state 56

    (9) statement -> return_statement END_LINE .

    VARIABLE        reduce using rule 9 (statement -> return_statement END_LINE .)
    TYPE_BOOLEAN    reduce using rule 9 (statement -> return_statement END_LINE .)
    TYPE_STRING     reduce using rule 9 (statement -> return_statement END_LINE .)
    TYPE_CHAR       reduce using rule 9 (statement -> return_statement END_LINE .)
    TYPE_INTEGER    reduce using rule 9 (statement -> return_statement END_LINE .)
    TYPE_FLOAT      reduce using rule 9 (statement -> return_statement END_LINE .)
    CONDITIONAL1    reduce using rule 9 (statement -> return_statement END_LINE .)
    LOOP1           reduce using rule 9 (statement -> return_statement END_LINE .)
    LOOP2           reduce using rule 9 (statement -> return_statement END_LINE .)
    RETURN          reduce using rule 9 (statement -> return_statement END_LINE .)
    BREAK           reduce using rule 9 (statement -> return_statement END_LINE .)
    COMMENT         reduce using rule 9 (statement -> return_statement END_LINE .)
    MINUS_OP        reduce using rule 9 (statement -> return_statement END_LINE .)
    LOGICAL_OP_NOT  reduce using rule 9 (statement -> return_statement END_LINE .)
    LPAREN          reduce using rule 9 (statement -> return_statement END_LINE .)
    NUMBER_INTEGER  reduce using rule 9 (statement -> return_statement END_LINE .)
    NUMBER_FLOAT    reduce using rule 9 (statement -> return_statement END_LINE .)
    TRUE            reduce using rule 9 (statement -> return_statement END_LINE .)
    FALSE           reduce using rule 9 (statement -> return_statement END_LINE .)
    NULL            reduce using rule 9 (statement -> return_statement END_LINE .)
    TEXT_STRING     reduce using rule 9 (statement -> return_statement END_LINE .)
    TEXT_CHAR       reduce using rule 9 (statement -> return_statement END_LINE .)
    $end            reduce using rule 9 (statement -> return_statement END_LINE .)
    CONDITIONAL2    reduce using rule 9 (statement -> return_statement END_LINE .)
    END_LINE        reduce using rule 9 (statement -> return_statement END_LINE .)


state 57

    (10) statement -> break_statement END_LINE .

    VARIABLE        reduce using rule 10 (statement -> break_statement END_LINE .)
    TYPE_BOOLEAN    reduce using rule 10 (statement -> break_statement END_LINE .)
    TYPE_STRING     reduce using rule 10 (statement -> break_statement END_LINE .)
    TYPE_CHAR       reduce using rule 10 (statement -> break_statement END_LINE .)
    TYPE_INTEGER    reduce using rule 10 (statement -> break_statement END_LINE .)
    TYPE_FLOAT      reduce using rule 10 (statement -> break_statement END_LINE .)
    CONDITIONAL1    reduce using rule 10 (statement -> break_statement END_LINE .)
    LOOP1           reduce using rule 10 (statement -> break_statement END_LINE .)
    LOOP2           reduce using rule 10 (statement -> break_statement END_LINE .)
    RETURN          reduce using rule 10 (statement -> break_statement END_LINE .)
    BREAK           reduce using rule 10 (statement -> break_statement END_LINE .)
    COMMENT         reduce using rule 10 (statement -> break_statement END_LINE .)
    MINUS_OP        reduce using rule 10 (statement -> break_statement END_LINE .)
    LOGICAL_OP_NOT  reduce using rule 10 (statement -> break_statement END_LINE .)
    LPAREN          reduce using rule 10 (statement -> break_statement END_LINE .)
    NUMBER_INTEGER  reduce using rule 10 (statement -> break_statement END_LINE .)
    NUMBER_FLOAT    reduce using rule 10 (statement -> break_statement END_LINE .)
    TRUE            reduce using rule 10 (statement -> break_statement END_LINE .)
    FALSE           reduce using rule 10 (statement -> break_statement END_LINE .)
    NULL            reduce using rule 10 (statement -> break_statement END_LINE .)
    TEXT_STRING     reduce using rule 10 (statement -> break_statement END_LINE .)
    TEXT_CHAR       reduce using rule 10 (statement -> break_statement END_LINE .)
    $end            reduce using rule 10 (statement -> break_statement END_LINE .)
    CONDITIONAL2    reduce using rule 10 (statement -> break_statement END_LINE .)
    END_LINE        reduce using rule 10 (statement -> break_statement END_LINE .)


state 58

    (39) assignment -> VARIABLE ASSIGNMENT_OP . expression
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (15) binary_expression -> . expression PLUS_OP expression
    (16) binary_expression -> . expression MINUS_OP expression
    (17) binary_expression -> . expression MUL_OP expression
    (18) binary_expression -> . expression DIV_OP expression
    (19) binary_expression -> . expression LESS_OP expression
    (20) binary_expression -> . expression GREATER_OP expression
    (21) binary_expression -> . expression LESS_EQUAL_OP expression
    (22) binary_expression -> . expression GREATER_EQUAL_OP expression
    (23) binary_expression -> . expression EQUAL_OP expression
    (24) binary_expression -> . expression DIFFERENT_OP expression
    (25) binary_expression -> . expression LOGICAL_OP_AND expression
    (26) binary_expression -> . expression LOGICAL_OP_OR expression
    (27) unitary_expression -> . MINUS_OP expression
    (28) unitary_expression -> . LOGICAL_OP_NOT expression
    (29) primary_expression -> . LPAREN expression RPAREN
    (30) primary_expression -> . term
    (31) term -> . NUMBER_INTEGER
    (32) term -> . NUMBER_FLOAT
    (33) term -> . VARIABLE
    (34) term -> . TRUE
    (35) term -> . FALSE
    (36) term -> . NULL
    (37) term -> . TEXT_STRING
    (38) term -> . TEXT_CHAR

    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    VARIABLE        shift and go to state 71
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    expression                     shift and go to state 89
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 59

    (40) declaration -> TYPE_BOOLEAN VARIABLE .
    (39) assignment -> VARIABLE . ASSIGNMENT_OP expression

    END_LINE        reduce using rule 40 (declaration -> TYPE_BOOLEAN VARIABLE .)
    ASSIGNMENT_OP   shift and go to state 58


state 60

    (45) declaration -> TYPE_BOOLEAN assignment .

    END_LINE        reduce using rule 45 (declaration -> TYPE_BOOLEAN assignment .)


state 61

    (41) declaration -> TYPE_STRING VARIABLE .
    (39) assignment -> VARIABLE . ASSIGNMENT_OP expression

    END_LINE        reduce using rule 41 (declaration -> TYPE_STRING VARIABLE .)
    ASSIGNMENT_OP   shift and go to state 58


state 62

    (46) declaration -> TYPE_STRING assignment .

    END_LINE        reduce using rule 46 (declaration -> TYPE_STRING assignment .)


state 63

    (42) declaration -> TYPE_CHAR VARIABLE .
    (39) assignment -> VARIABLE . ASSIGNMENT_OP expression

    END_LINE        reduce using rule 42 (declaration -> TYPE_CHAR VARIABLE .)
    ASSIGNMENT_OP   shift and go to state 58


state 64

    (47) declaration -> TYPE_CHAR assignment .

    END_LINE        reduce using rule 47 (declaration -> TYPE_CHAR assignment .)


state 65

    (43) declaration -> TYPE_INTEGER VARIABLE .
    (39) assignment -> VARIABLE . ASSIGNMENT_OP expression

    END_LINE        reduce using rule 43 (declaration -> TYPE_INTEGER VARIABLE .)
    ASSIGNMENT_OP   shift and go to state 58


state 66

    (48) declaration -> TYPE_INTEGER assignment .

    END_LINE        reduce using rule 48 (declaration -> TYPE_INTEGER assignment .)


state 67

    (44) declaration -> TYPE_FLOAT VARIABLE .
    (39) assignment -> VARIABLE . ASSIGNMENT_OP expression

    END_LINE        reduce using rule 44 (declaration -> TYPE_FLOAT VARIABLE .)
    ASSIGNMENT_OP   shift and go to state 58


state 68

    (49) declaration -> TYPE_FLOAT assignment .

    END_LINE        reduce using rule 49 (declaration -> TYPE_FLOAT assignment .)


state 69

    (50) conditional -> CONDITIONAL1 LPAREN . expression RPAREN STRUCTURE_BODY statement_list
    (51) conditional -> CONDITIONAL1 LPAREN . expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (15) binary_expression -> . expression PLUS_OP expression
    (16) binary_expression -> . expression MINUS_OP expression
    (17) binary_expression -> . expression MUL_OP expression
    (18) binary_expression -> . expression DIV_OP expression
    (19) binary_expression -> . expression LESS_OP expression
    (20) binary_expression -> . expression GREATER_OP expression
    (21) binary_expression -> . expression LESS_EQUAL_OP expression
    (22) binary_expression -> . expression GREATER_EQUAL_OP expression
    (23) binary_expression -> . expression EQUAL_OP expression
    (24) binary_expression -> . expression DIFFERENT_OP expression
    (25) binary_expression -> . expression LOGICAL_OP_AND expression
    (26) binary_expression -> . expression LOGICAL_OP_OR expression
    (27) unitary_expression -> . MINUS_OP expression
    (28) unitary_expression -> . LOGICAL_OP_NOT expression
    (29) primary_expression -> . LPAREN expression RPAREN
    (30) primary_expression -> . term
    (31) term -> . NUMBER_INTEGER
    (32) term -> . NUMBER_FLOAT
    (33) term -> . VARIABLE
    (34) term -> . TRUE
    (35) term -> . FALSE
    (36) term -> . NULL
    (37) term -> . TEXT_STRING
    (38) term -> . TEXT_CHAR

    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    VARIABLE        shift and go to state 71
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    expression                     shift and go to state 90
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 70

    (29) primary_expression -> LPAREN expression . RPAREN
    (15) binary_expression -> expression . PLUS_OP expression
    (16) binary_expression -> expression . MINUS_OP expression
    (17) binary_expression -> expression . MUL_OP expression
    (18) binary_expression -> expression . DIV_OP expression
    (19) binary_expression -> expression . LESS_OP expression
    (20) binary_expression -> expression . GREATER_OP expression
    (21) binary_expression -> expression . LESS_EQUAL_OP expression
    (22) binary_expression -> expression . GREATER_EQUAL_OP expression
    (23) binary_expression -> expression . EQUAL_OP expression
    (24) binary_expression -> expression . DIFFERENT_OP expression
    (25) binary_expression -> expression . LOGICAL_OP_AND expression
    (26) binary_expression -> expression . LOGICAL_OP_OR expression

    RPAREN          shift and go to state 91
    PLUS_OP         shift and go to state 40
    MINUS_OP        shift and go to state 41
    MUL_OP          shift and go to state 42
    DIV_OP          shift and go to state 43
    LESS_OP         shift and go to state 44
    GREATER_OP      shift and go to state 45
    LESS_EQUAL_OP   shift and go to state 46
    GREATER_EQUAL_OP shift and go to state 47
    EQUAL_OP        shift and go to state 48
    DIFFERENT_OP    shift and go to state 49
    LOGICAL_OP_AND  shift and go to state 50
    LOGICAL_OP_OR   shift and go to state 51


state 71

    (33) term -> VARIABLE .

    RPAREN          reduce using rule 33 (term -> VARIABLE .)
    PLUS_OP         reduce using rule 33 (term -> VARIABLE .)
    MINUS_OP        reduce using rule 33 (term -> VARIABLE .)
    MUL_OP          reduce using rule 33 (term -> VARIABLE .)
    DIV_OP          reduce using rule 33 (term -> VARIABLE .)
    LESS_OP         reduce using rule 33 (term -> VARIABLE .)
    GREATER_OP      reduce using rule 33 (term -> VARIABLE .)
    LESS_EQUAL_OP   reduce using rule 33 (term -> VARIABLE .)
    GREATER_EQUAL_OP reduce using rule 33 (term -> VARIABLE .)
    EQUAL_OP        reduce using rule 33 (term -> VARIABLE .)
    DIFFERENT_OP    reduce using rule 33 (term -> VARIABLE .)
    LOGICAL_OP_AND  reduce using rule 33 (term -> VARIABLE .)
    LOGICAL_OP_OR   reduce using rule 33 (term -> VARIABLE .)
    END_LINE        reduce using rule 33 (term -> VARIABLE .)
    SEPARATION      reduce using rule 33 (term -> VARIABLE .)


state 72

    (52) loop -> LOOP1 LPAREN . expression RPAREN STRUCTURE_BODY statement_list
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (15) binary_expression -> . expression PLUS_OP expression
    (16) binary_expression -> . expression MINUS_OP expression
    (17) binary_expression -> . expression MUL_OP expression
    (18) binary_expression -> . expression DIV_OP expression
    (19) binary_expression -> . expression LESS_OP expression
    (20) binary_expression -> . expression GREATER_OP expression
    (21) binary_expression -> . expression LESS_EQUAL_OP expression
    (22) binary_expression -> . expression GREATER_EQUAL_OP expression
    (23) binary_expression -> . expression EQUAL_OP expression
    (24) binary_expression -> . expression DIFFERENT_OP expression
    (25) binary_expression -> . expression LOGICAL_OP_AND expression
    (26) binary_expression -> . expression LOGICAL_OP_OR expression
    (27) unitary_expression -> . MINUS_OP expression
    (28) unitary_expression -> . LOGICAL_OP_NOT expression
    (29) primary_expression -> . LPAREN expression RPAREN
    (30) primary_expression -> . term
    (31) term -> . NUMBER_INTEGER
    (32) term -> . NUMBER_FLOAT
    (33) term -> . VARIABLE
    (34) term -> . TRUE
    (35) term -> . FALSE
    (36) term -> . NULL
    (37) term -> . TEXT_STRING
    (38) term -> . TEXT_CHAR

    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    VARIABLE        shift and go to state 71
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    expression                     shift and go to state 92
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 73

    (53) loop -> LOOP2 LPAREN . assignment SEPARATION expression SEPARATION assignment RPAREN STRUCTURE_BODY statement_list
    (39) assignment -> . VARIABLE ASSIGNMENT_OP expression

    VARIABLE        shift and go to state 94

    assignment                     shift and go to state 93

state 74

    (54) return_statement -> RETURN expression .
    (15) binary_expression -> expression . PLUS_OP expression
    (16) binary_expression -> expression . MINUS_OP expression
    (17) binary_expression -> expression . MUL_OP expression
    (18) binary_expression -> expression . DIV_OP expression
    (19) binary_expression -> expression . LESS_OP expression
    (20) binary_expression -> expression . GREATER_OP expression
    (21) binary_expression -> expression . LESS_EQUAL_OP expression
    (22) binary_expression -> expression . GREATER_EQUAL_OP expression
    (23) binary_expression -> expression . EQUAL_OP expression
    (24) binary_expression -> expression . DIFFERENT_OP expression
    (25) binary_expression -> expression . LOGICAL_OP_AND expression
    (26) binary_expression -> expression . LOGICAL_OP_OR expression

    END_LINE        reduce using rule 54 (return_statement -> RETURN expression .)
    PLUS_OP         shift and go to state 40
    MINUS_OP        shift and go to state 41
    MUL_OP          shift and go to state 42
    DIV_OP          shift and go to state 43
    LESS_OP         shift and go to state 44
    GREATER_OP      shift and go to state 45
    LESS_EQUAL_OP   shift and go to state 46
    GREATER_EQUAL_OP shift and go to state 47
    EQUAL_OP        shift and go to state 48
    DIFFERENT_OP    shift and go to state 49
    LOGICAL_OP_AND  shift and go to state 50
    LOGICAL_OP_OR   shift and go to state 51


state 75

    (27) unitary_expression -> MINUS_OP expression .
    (15) binary_expression -> expression . PLUS_OP expression
    (16) binary_expression -> expression . MINUS_OP expression
    (17) binary_expression -> expression . MUL_OP expression
    (18) binary_expression -> expression . DIV_OP expression
    (19) binary_expression -> expression . LESS_OP expression
    (20) binary_expression -> expression . GREATER_OP expression
    (21) binary_expression -> expression . LESS_EQUAL_OP expression
    (22) binary_expression -> expression . GREATER_EQUAL_OP expression
    (23) binary_expression -> expression . EQUAL_OP expression
    (24) binary_expression -> expression . DIFFERENT_OP expression
    (25) binary_expression -> expression . LOGICAL_OP_AND expression
    (26) binary_expression -> expression . LOGICAL_OP_OR expression

    END_LINE        reduce using rule 27 (unitary_expression -> MINUS_OP expression .)
    PLUS_OP         reduce using rule 27 (unitary_expression -> MINUS_OP expression .)
    MINUS_OP        reduce using rule 27 (unitary_expression -> MINUS_OP expression .)
    LESS_OP         reduce using rule 27 (unitary_expression -> MINUS_OP expression .)
    GREATER_OP      reduce using rule 27 (unitary_expression -> MINUS_OP expression .)
    LESS_EQUAL_OP   reduce using rule 27 (unitary_expression -> MINUS_OP expression .)
    GREATER_EQUAL_OP reduce using rule 27 (unitary_expression -> MINUS_OP expression .)
    EQUAL_OP        reduce using rule 27 (unitary_expression -> MINUS_OP expression .)
    DIFFERENT_OP    reduce using rule 27 (unitary_expression -> MINUS_OP expression .)
    LOGICAL_OP_AND  reduce using rule 27 (unitary_expression -> MINUS_OP expression .)
    LOGICAL_OP_OR   reduce using rule 27 (unitary_expression -> MINUS_OP expression .)
    RPAREN          reduce using rule 27 (unitary_expression -> MINUS_OP expression .)
    SEPARATION      reduce using rule 27 (unitary_expression -> MINUS_OP expression .)
    MUL_OP          shift and go to state 42
    DIV_OP          shift and go to state 43

  ! MUL_OP          [ reduce using rule 27 (unitary_expression -> MINUS_OP expression .) ]
  ! DIV_OP          [ reduce using rule 27 (unitary_expression -> MINUS_OP expression .) ]
  ! PLUS_OP         [ shift and go to state 40 ]
  ! MINUS_OP        [ shift and go to state 41 ]
  ! LESS_OP         [ shift and go to state 44 ]
  ! GREATER_OP      [ shift and go to state 45 ]
  ! LESS_EQUAL_OP   [ shift and go to state 46 ]
  ! GREATER_EQUAL_OP [ shift and go to state 47 ]
  ! EQUAL_OP        [ shift and go to state 48 ]
  ! DIFFERENT_OP    [ shift and go to state 49 ]
  ! LOGICAL_OP_AND  [ shift and go to state 50 ]
  ! LOGICAL_OP_OR   [ shift and go to state 51 ]


state 76

    (28) unitary_expression -> LOGICAL_OP_NOT expression .
    (15) binary_expression -> expression . PLUS_OP expression
    (16) binary_expression -> expression . MINUS_OP expression
    (17) binary_expression -> expression . MUL_OP expression
    (18) binary_expression -> expression . DIV_OP expression
    (19) binary_expression -> expression . LESS_OP expression
    (20) binary_expression -> expression . GREATER_OP expression
    (21) binary_expression -> expression . LESS_EQUAL_OP expression
    (22) binary_expression -> expression . GREATER_EQUAL_OP expression
    (23) binary_expression -> expression . EQUAL_OP expression
    (24) binary_expression -> expression . DIFFERENT_OP expression
    (25) binary_expression -> expression . LOGICAL_OP_AND expression
    (26) binary_expression -> expression . LOGICAL_OP_OR expression

    END_LINE        reduce using rule 28 (unitary_expression -> LOGICAL_OP_NOT expression .)
    LOGICAL_OP_AND  reduce using rule 28 (unitary_expression -> LOGICAL_OP_NOT expression .)
    LOGICAL_OP_OR   reduce using rule 28 (unitary_expression -> LOGICAL_OP_NOT expression .)
    RPAREN          reduce using rule 28 (unitary_expression -> LOGICAL_OP_NOT expression .)
    SEPARATION      reduce using rule 28 (unitary_expression -> LOGICAL_OP_NOT expression .)
    PLUS_OP         shift and go to state 40
    MINUS_OP        shift and go to state 41
    MUL_OP          shift and go to state 42
    DIV_OP          shift and go to state 43
    LESS_OP         shift and go to state 44
    GREATER_OP      shift and go to state 45
    LESS_EQUAL_OP   shift and go to state 46
    GREATER_EQUAL_OP shift and go to state 47
    EQUAL_OP        shift and go to state 48
    DIFFERENT_OP    shift and go to state 49

  ! PLUS_OP         [ reduce using rule 28 (unitary_expression -> LOGICAL_OP_NOT expression .) ]
  ! MINUS_OP        [ reduce using rule 28 (unitary_expression -> LOGICAL_OP_NOT expression .) ]
  ! MUL_OP          [ reduce using rule 28 (unitary_expression -> LOGICAL_OP_NOT expression .) ]
  ! DIV_OP          [ reduce using rule 28 (unitary_expression -> LOGICAL_OP_NOT expression .) ]
  ! LESS_OP         [ reduce using rule 28 (unitary_expression -> LOGICAL_OP_NOT expression .) ]
  ! GREATER_OP      [ reduce using rule 28 (unitary_expression -> LOGICAL_OP_NOT expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 28 (unitary_expression -> LOGICAL_OP_NOT expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 28 (unitary_expression -> LOGICAL_OP_NOT expression .) ]
  ! EQUAL_OP        [ reduce using rule 28 (unitary_expression -> LOGICAL_OP_NOT expression .) ]
  ! DIFFERENT_OP    [ reduce using rule 28 (unitary_expression -> LOGICAL_OP_NOT expression .) ]
  ! LOGICAL_OP_AND  [ shift and go to state 50 ]
  ! LOGICAL_OP_OR   [ shift and go to state 51 ]


state 77

    (15) binary_expression -> expression PLUS_OP expression .
    (15) binary_expression -> expression . PLUS_OP expression
    (16) binary_expression -> expression . MINUS_OP expression
    (17) binary_expression -> expression . MUL_OP expression
    (18) binary_expression -> expression . DIV_OP expression
    (19) binary_expression -> expression . LESS_OP expression
    (20) binary_expression -> expression . GREATER_OP expression
    (21) binary_expression -> expression . LESS_EQUAL_OP expression
    (22) binary_expression -> expression . GREATER_EQUAL_OP expression
    (23) binary_expression -> expression . EQUAL_OP expression
    (24) binary_expression -> expression . DIFFERENT_OP expression
    (25) binary_expression -> expression . LOGICAL_OP_AND expression
    (26) binary_expression -> expression . LOGICAL_OP_OR expression

    END_LINE        reduce using rule 15 (binary_expression -> expression PLUS_OP expression .)
    PLUS_OP         reduce using rule 15 (binary_expression -> expression PLUS_OP expression .)
    MINUS_OP        reduce using rule 15 (binary_expression -> expression PLUS_OP expression .)
    LESS_OP         reduce using rule 15 (binary_expression -> expression PLUS_OP expression .)
    GREATER_OP      reduce using rule 15 (binary_expression -> expression PLUS_OP expression .)
    LESS_EQUAL_OP   reduce using rule 15 (binary_expression -> expression PLUS_OP expression .)
    GREATER_EQUAL_OP reduce using rule 15 (binary_expression -> expression PLUS_OP expression .)
    EQUAL_OP        reduce using rule 15 (binary_expression -> expression PLUS_OP expression .)
    DIFFERENT_OP    reduce using rule 15 (binary_expression -> expression PLUS_OP expression .)
    LOGICAL_OP_AND  reduce using rule 15 (binary_expression -> expression PLUS_OP expression .)
    LOGICAL_OP_OR   reduce using rule 15 (binary_expression -> expression PLUS_OP expression .)
    RPAREN          reduce using rule 15 (binary_expression -> expression PLUS_OP expression .)
    SEPARATION      reduce using rule 15 (binary_expression -> expression PLUS_OP expression .)
    MUL_OP          shift and go to state 42
    DIV_OP          shift and go to state 43

  ! MUL_OP          [ reduce using rule 15 (binary_expression -> expression PLUS_OP expression .) ]
  ! DIV_OP          [ reduce using rule 15 (binary_expression -> expression PLUS_OP expression .) ]
  ! PLUS_OP         [ shift and go to state 40 ]
  ! MINUS_OP        [ shift and go to state 41 ]
  ! LESS_OP         [ shift and go to state 44 ]
  ! GREATER_OP      [ shift and go to state 45 ]
  ! LESS_EQUAL_OP   [ shift and go to state 46 ]
  ! GREATER_EQUAL_OP [ shift and go to state 47 ]
  ! EQUAL_OP        [ shift and go to state 48 ]
  ! DIFFERENT_OP    [ shift and go to state 49 ]
  ! LOGICAL_OP_AND  [ shift and go to state 50 ]
  ! LOGICAL_OP_OR   [ shift and go to state 51 ]


state 78

    (16) binary_expression -> expression MINUS_OP expression .
    (15) binary_expression -> expression . PLUS_OP expression
    (16) binary_expression -> expression . MINUS_OP expression
    (17) binary_expression -> expression . MUL_OP expression
    (18) binary_expression -> expression . DIV_OP expression
    (19) binary_expression -> expression . LESS_OP expression
    (20) binary_expression -> expression . GREATER_OP expression
    (21) binary_expression -> expression . LESS_EQUAL_OP expression
    (22) binary_expression -> expression . GREATER_EQUAL_OP expression
    (23) binary_expression -> expression . EQUAL_OP expression
    (24) binary_expression -> expression . DIFFERENT_OP expression
    (25) binary_expression -> expression . LOGICAL_OP_AND expression
    (26) binary_expression -> expression . LOGICAL_OP_OR expression

    END_LINE        reduce using rule 16 (binary_expression -> expression MINUS_OP expression .)
    PLUS_OP         reduce using rule 16 (binary_expression -> expression MINUS_OP expression .)
    MINUS_OP        reduce using rule 16 (binary_expression -> expression MINUS_OP expression .)
    LESS_OP         reduce using rule 16 (binary_expression -> expression MINUS_OP expression .)
    GREATER_OP      reduce using rule 16 (binary_expression -> expression MINUS_OP expression .)
    LESS_EQUAL_OP   reduce using rule 16 (binary_expression -> expression MINUS_OP expression .)
    GREATER_EQUAL_OP reduce using rule 16 (binary_expression -> expression MINUS_OP expression .)
    EQUAL_OP        reduce using rule 16 (binary_expression -> expression MINUS_OP expression .)
    DIFFERENT_OP    reduce using rule 16 (binary_expression -> expression MINUS_OP expression .)
    LOGICAL_OP_AND  reduce using rule 16 (binary_expression -> expression MINUS_OP expression .)
    LOGICAL_OP_OR   reduce using rule 16 (binary_expression -> expression MINUS_OP expression .)
    RPAREN          reduce using rule 16 (binary_expression -> expression MINUS_OP expression .)
    SEPARATION      reduce using rule 16 (binary_expression -> expression MINUS_OP expression .)
    MUL_OP          shift and go to state 42
    DIV_OP          shift and go to state 43

  ! MUL_OP          [ reduce using rule 16 (binary_expression -> expression MINUS_OP expression .) ]
  ! DIV_OP          [ reduce using rule 16 (binary_expression -> expression MINUS_OP expression .) ]
  ! PLUS_OP         [ shift and go to state 40 ]
  ! MINUS_OP        [ shift and go to state 41 ]
  ! LESS_OP         [ shift and go to state 44 ]
  ! GREATER_OP      [ shift and go to state 45 ]
  ! LESS_EQUAL_OP   [ shift and go to state 46 ]
  ! GREATER_EQUAL_OP [ shift and go to state 47 ]
  ! EQUAL_OP        [ shift and go to state 48 ]
  ! DIFFERENT_OP    [ shift and go to state 49 ]
  ! LOGICAL_OP_AND  [ shift and go to state 50 ]
  ! LOGICAL_OP_OR   [ shift and go to state 51 ]


state 79

    (17) binary_expression -> expression MUL_OP expression .
    (15) binary_expression -> expression . PLUS_OP expression
    (16) binary_expression -> expression . MINUS_OP expression
    (17) binary_expression -> expression . MUL_OP expression
    (18) binary_expression -> expression . DIV_OP expression
    (19) binary_expression -> expression . LESS_OP expression
    (20) binary_expression -> expression . GREATER_OP expression
    (21) binary_expression -> expression . LESS_EQUAL_OP expression
    (22) binary_expression -> expression . GREATER_EQUAL_OP expression
    (23) binary_expression -> expression . EQUAL_OP expression
    (24) binary_expression -> expression . DIFFERENT_OP expression
    (25) binary_expression -> expression . LOGICAL_OP_AND expression
    (26) binary_expression -> expression . LOGICAL_OP_OR expression

    END_LINE        reduce using rule 17 (binary_expression -> expression MUL_OP expression .)
    PLUS_OP         reduce using rule 17 (binary_expression -> expression MUL_OP expression .)
    MINUS_OP        reduce using rule 17 (binary_expression -> expression MUL_OP expression .)
    MUL_OP          reduce using rule 17 (binary_expression -> expression MUL_OP expression .)
    DIV_OP          reduce using rule 17 (binary_expression -> expression MUL_OP expression .)
    LESS_OP         reduce using rule 17 (binary_expression -> expression MUL_OP expression .)
    GREATER_OP      reduce using rule 17 (binary_expression -> expression MUL_OP expression .)
    LESS_EQUAL_OP   reduce using rule 17 (binary_expression -> expression MUL_OP expression .)
    GREATER_EQUAL_OP reduce using rule 17 (binary_expression -> expression MUL_OP expression .)
    EQUAL_OP        reduce using rule 17 (binary_expression -> expression MUL_OP expression .)
    DIFFERENT_OP    reduce using rule 17 (binary_expression -> expression MUL_OP expression .)
    LOGICAL_OP_AND  reduce using rule 17 (binary_expression -> expression MUL_OP expression .)
    LOGICAL_OP_OR   reduce using rule 17 (binary_expression -> expression MUL_OP expression .)
    RPAREN          reduce using rule 17 (binary_expression -> expression MUL_OP expression .)
    SEPARATION      reduce using rule 17 (binary_expression -> expression MUL_OP expression .)

  ! PLUS_OP         [ shift and go to state 40 ]
  ! MINUS_OP        [ shift and go to state 41 ]
  ! MUL_OP          [ shift and go to state 42 ]
  ! DIV_OP          [ shift and go to state 43 ]
  ! LESS_OP         [ shift and go to state 44 ]
  ! GREATER_OP      [ shift and go to state 45 ]
  ! LESS_EQUAL_OP   [ shift and go to state 46 ]
  ! GREATER_EQUAL_OP [ shift and go to state 47 ]
  ! EQUAL_OP        [ shift and go to state 48 ]
  ! DIFFERENT_OP    [ shift and go to state 49 ]
  ! LOGICAL_OP_AND  [ shift and go to state 50 ]
  ! LOGICAL_OP_OR   [ shift and go to state 51 ]


state 80

    (18) binary_expression -> expression DIV_OP expression .
    (15) binary_expression -> expression . PLUS_OP expression
    (16) binary_expression -> expression . MINUS_OP expression
    (17) binary_expression -> expression . MUL_OP expression
    (18) binary_expression -> expression . DIV_OP expression
    (19) binary_expression -> expression . LESS_OP expression
    (20) binary_expression -> expression . GREATER_OP expression
    (21) binary_expression -> expression . LESS_EQUAL_OP expression
    (22) binary_expression -> expression . GREATER_EQUAL_OP expression
    (23) binary_expression -> expression . EQUAL_OP expression
    (24) binary_expression -> expression . DIFFERENT_OP expression
    (25) binary_expression -> expression . LOGICAL_OP_AND expression
    (26) binary_expression -> expression . LOGICAL_OP_OR expression

    END_LINE        reduce using rule 18 (binary_expression -> expression DIV_OP expression .)
    PLUS_OP         reduce using rule 18 (binary_expression -> expression DIV_OP expression .)
    MINUS_OP        reduce using rule 18 (binary_expression -> expression DIV_OP expression .)
    MUL_OP          reduce using rule 18 (binary_expression -> expression DIV_OP expression .)
    DIV_OP          reduce using rule 18 (binary_expression -> expression DIV_OP expression .)
    LESS_OP         reduce using rule 18 (binary_expression -> expression DIV_OP expression .)
    GREATER_OP      reduce using rule 18 (binary_expression -> expression DIV_OP expression .)
    LESS_EQUAL_OP   reduce using rule 18 (binary_expression -> expression DIV_OP expression .)
    GREATER_EQUAL_OP reduce using rule 18 (binary_expression -> expression DIV_OP expression .)
    EQUAL_OP        reduce using rule 18 (binary_expression -> expression DIV_OP expression .)
    DIFFERENT_OP    reduce using rule 18 (binary_expression -> expression DIV_OP expression .)
    LOGICAL_OP_AND  reduce using rule 18 (binary_expression -> expression DIV_OP expression .)
    LOGICAL_OP_OR   reduce using rule 18 (binary_expression -> expression DIV_OP expression .)
    RPAREN          reduce using rule 18 (binary_expression -> expression DIV_OP expression .)
    SEPARATION      reduce using rule 18 (binary_expression -> expression DIV_OP expression .)

  ! PLUS_OP         [ shift and go to state 40 ]
  ! MINUS_OP        [ shift and go to state 41 ]
  ! MUL_OP          [ shift and go to state 42 ]
  ! DIV_OP          [ shift and go to state 43 ]
  ! LESS_OP         [ shift and go to state 44 ]
  ! GREATER_OP      [ shift and go to state 45 ]
  ! LESS_EQUAL_OP   [ shift and go to state 46 ]
  ! GREATER_EQUAL_OP [ shift and go to state 47 ]
  ! EQUAL_OP        [ shift and go to state 48 ]
  ! DIFFERENT_OP    [ shift and go to state 49 ]
  ! LOGICAL_OP_AND  [ shift and go to state 50 ]
  ! LOGICAL_OP_OR   [ shift and go to state 51 ]


state 81

    (19) binary_expression -> expression LESS_OP expression .
    (15) binary_expression -> expression . PLUS_OP expression
    (16) binary_expression -> expression . MINUS_OP expression
    (17) binary_expression -> expression . MUL_OP expression
    (18) binary_expression -> expression . DIV_OP expression
    (19) binary_expression -> expression . LESS_OP expression
    (20) binary_expression -> expression . GREATER_OP expression
    (21) binary_expression -> expression . LESS_EQUAL_OP expression
    (22) binary_expression -> expression . GREATER_EQUAL_OP expression
    (23) binary_expression -> expression . EQUAL_OP expression
    (24) binary_expression -> expression . DIFFERENT_OP expression
    (25) binary_expression -> expression . LOGICAL_OP_AND expression
    (26) binary_expression -> expression . LOGICAL_OP_OR expression

    END_LINE        reduce using rule 19 (binary_expression -> expression LESS_OP expression .)
    LESS_OP         reduce using rule 19 (binary_expression -> expression LESS_OP expression .)
    GREATER_OP      reduce using rule 19 (binary_expression -> expression LESS_OP expression .)
    LESS_EQUAL_OP   reduce using rule 19 (binary_expression -> expression LESS_OP expression .)
    GREATER_EQUAL_OP reduce using rule 19 (binary_expression -> expression LESS_OP expression .)
    EQUAL_OP        reduce using rule 19 (binary_expression -> expression LESS_OP expression .)
    DIFFERENT_OP    reduce using rule 19 (binary_expression -> expression LESS_OP expression .)
    LOGICAL_OP_AND  reduce using rule 19 (binary_expression -> expression LESS_OP expression .)
    LOGICAL_OP_OR   reduce using rule 19 (binary_expression -> expression LESS_OP expression .)
    RPAREN          reduce using rule 19 (binary_expression -> expression LESS_OP expression .)
    SEPARATION      reduce using rule 19 (binary_expression -> expression LESS_OP expression .)
    PLUS_OP         shift and go to state 40
    MINUS_OP        shift and go to state 41
    MUL_OP          shift and go to state 42
    DIV_OP          shift and go to state 43

  ! PLUS_OP         [ reduce using rule 19 (binary_expression -> expression LESS_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 19 (binary_expression -> expression LESS_OP expression .) ]
  ! MUL_OP          [ reduce using rule 19 (binary_expression -> expression LESS_OP expression .) ]
  ! DIV_OP          [ reduce using rule 19 (binary_expression -> expression LESS_OP expression .) ]
  ! LESS_OP         [ shift and go to state 44 ]
  ! GREATER_OP      [ shift and go to state 45 ]
  ! LESS_EQUAL_OP   [ shift and go to state 46 ]
  ! GREATER_EQUAL_OP [ shift and go to state 47 ]
  ! EQUAL_OP        [ shift and go to state 48 ]
  ! DIFFERENT_OP    [ shift and go to state 49 ]
  ! LOGICAL_OP_AND  [ shift and go to state 50 ]
  ! LOGICAL_OP_OR   [ shift and go to state 51 ]


state 82

    (20) binary_expression -> expression GREATER_OP expression .
    (15) binary_expression -> expression . PLUS_OP expression
    (16) binary_expression -> expression . MINUS_OP expression
    (17) binary_expression -> expression . MUL_OP expression
    (18) binary_expression -> expression . DIV_OP expression
    (19) binary_expression -> expression . LESS_OP expression
    (20) binary_expression -> expression . GREATER_OP expression
    (21) binary_expression -> expression . LESS_EQUAL_OP expression
    (22) binary_expression -> expression . GREATER_EQUAL_OP expression
    (23) binary_expression -> expression . EQUAL_OP expression
    (24) binary_expression -> expression . DIFFERENT_OP expression
    (25) binary_expression -> expression . LOGICAL_OP_AND expression
    (26) binary_expression -> expression . LOGICAL_OP_OR expression

    END_LINE        reduce using rule 20 (binary_expression -> expression GREATER_OP expression .)
    LESS_OP         reduce using rule 20 (binary_expression -> expression GREATER_OP expression .)
    GREATER_OP      reduce using rule 20 (binary_expression -> expression GREATER_OP expression .)
    LESS_EQUAL_OP   reduce using rule 20 (binary_expression -> expression GREATER_OP expression .)
    GREATER_EQUAL_OP reduce using rule 20 (binary_expression -> expression GREATER_OP expression .)
    EQUAL_OP        reduce using rule 20 (binary_expression -> expression GREATER_OP expression .)
    DIFFERENT_OP    reduce using rule 20 (binary_expression -> expression GREATER_OP expression .)
    LOGICAL_OP_AND  reduce using rule 20 (binary_expression -> expression GREATER_OP expression .)
    LOGICAL_OP_OR   reduce using rule 20 (binary_expression -> expression GREATER_OP expression .)
    RPAREN          reduce using rule 20 (binary_expression -> expression GREATER_OP expression .)
    SEPARATION      reduce using rule 20 (binary_expression -> expression GREATER_OP expression .)
    PLUS_OP         shift and go to state 40
    MINUS_OP        shift and go to state 41
    MUL_OP          shift and go to state 42
    DIV_OP          shift and go to state 43

  ! PLUS_OP         [ reduce using rule 20 (binary_expression -> expression GREATER_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 20 (binary_expression -> expression GREATER_OP expression .) ]
  ! MUL_OP          [ reduce using rule 20 (binary_expression -> expression GREATER_OP expression .) ]
  ! DIV_OP          [ reduce using rule 20 (binary_expression -> expression GREATER_OP expression .) ]
  ! LESS_OP         [ shift and go to state 44 ]
  ! GREATER_OP      [ shift and go to state 45 ]
  ! LESS_EQUAL_OP   [ shift and go to state 46 ]
  ! GREATER_EQUAL_OP [ shift and go to state 47 ]
  ! EQUAL_OP        [ shift and go to state 48 ]
  ! DIFFERENT_OP    [ shift and go to state 49 ]
  ! LOGICAL_OP_AND  [ shift and go to state 50 ]
  ! LOGICAL_OP_OR   [ shift and go to state 51 ]


state 83

    (21) binary_expression -> expression LESS_EQUAL_OP expression .
    (15) binary_expression -> expression . PLUS_OP expression
    (16) binary_expression -> expression . MINUS_OP expression
    (17) binary_expression -> expression . MUL_OP expression
    (18) binary_expression -> expression . DIV_OP expression
    (19) binary_expression -> expression . LESS_OP expression
    (20) binary_expression -> expression . GREATER_OP expression
    (21) binary_expression -> expression . LESS_EQUAL_OP expression
    (22) binary_expression -> expression . GREATER_EQUAL_OP expression
    (23) binary_expression -> expression . EQUAL_OP expression
    (24) binary_expression -> expression . DIFFERENT_OP expression
    (25) binary_expression -> expression . LOGICAL_OP_AND expression
    (26) binary_expression -> expression . LOGICAL_OP_OR expression

    END_LINE        reduce using rule 21 (binary_expression -> expression LESS_EQUAL_OP expression .)
    LESS_OP         reduce using rule 21 (binary_expression -> expression LESS_EQUAL_OP expression .)
    GREATER_OP      reduce using rule 21 (binary_expression -> expression LESS_EQUAL_OP expression .)
    LESS_EQUAL_OP   reduce using rule 21 (binary_expression -> expression LESS_EQUAL_OP expression .)
    GREATER_EQUAL_OP reduce using rule 21 (binary_expression -> expression LESS_EQUAL_OP expression .)
    EQUAL_OP        reduce using rule 21 (binary_expression -> expression LESS_EQUAL_OP expression .)
    DIFFERENT_OP    reduce using rule 21 (binary_expression -> expression LESS_EQUAL_OP expression .)
    LOGICAL_OP_AND  reduce using rule 21 (binary_expression -> expression LESS_EQUAL_OP expression .)
    LOGICAL_OP_OR   reduce using rule 21 (binary_expression -> expression LESS_EQUAL_OP expression .)
    RPAREN          reduce using rule 21 (binary_expression -> expression LESS_EQUAL_OP expression .)
    SEPARATION      reduce using rule 21 (binary_expression -> expression LESS_EQUAL_OP expression .)
    PLUS_OP         shift and go to state 40
    MINUS_OP        shift and go to state 41
    MUL_OP          shift and go to state 42
    DIV_OP          shift and go to state 43

  ! PLUS_OP         [ reduce using rule 21 (binary_expression -> expression LESS_EQUAL_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 21 (binary_expression -> expression LESS_EQUAL_OP expression .) ]
  ! MUL_OP          [ reduce using rule 21 (binary_expression -> expression LESS_EQUAL_OP expression .) ]
  ! DIV_OP          [ reduce using rule 21 (binary_expression -> expression LESS_EQUAL_OP expression .) ]
  ! LESS_OP         [ shift and go to state 44 ]
  ! GREATER_OP      [ shift and go to state 45 ]
  ! LESS_EQUAL_OP   [ shift and go to state 46 ]
  ! GREATER_EQUAL_OP [ shift and go to state 47 ]
  ! EQUAL_OP        [ shift and go to state 48 ]
  ! DIFFERENT_OP    [ shift and go to state 49 ]
  ! LOGICAL_OP_AND  [ shift and go to state 50 ]
  ! LOGICAL_OP_OR   [ shift and go to state 51 ]


state 84

    (22) binary_expression -> expression GREATER_EQUAL_OP expression .
    (15) binary_expression -> expression . PLUS_OP expression
    (16) binary_expression -> expression . MINUS_OP expression
    (17) binary_expression -> expression . MUL_OP expression
    (18) binary_expression -> expression . DIV_OP expression
    (19) binary_expression -> expression . LESS_OP expression
    (20) binary_expression -> expression . GREATER_OP expression
    (21) binary_expression -> expression . LESS_EQUAL_OP expression
    (22) binary_expression -> expression . GREATER_EQUAL_OP expression
    (23) binary_expression -> expression . EQUAL_OP expression
    (24) binary_expression -> expression . DIFFERENT_OP expression
    (25) binary_expression -> expression . LOGICAL_OP_AND expression
    (26) binary_expression -> expression . LOGICAL_OP_OR expression

    END_LINE        reduce using rule 22 (binary_expression -> expression GREATER_EQUAL_OP expression .)
    LESS_OP         reduce using rule 22 (binary_expression -> expression GREATER_EQUAL_OP expression .)
    GREATER_OP      reduce using rule 22 (binary_expression -> expression GREATER_EQUAL_OP expression .)
    LESS_EQUAL_OP   reduce using rule 22 (binary_expression -> expression GREATER_EQUAL_OP expression .)
    GREATER_EQUAL_OP reduce using rule 22 (binary_expression -> expression GREATER_EQUAL_OP expression .)
    EQUAL_OP        reduce using rule 22 (binary_expression -> expression GREATER_EQUAL_OP expression .)
    DIFFERENT_OP    reduce using rule 22 (binary_expression -> expression GREATER_EQUAL_OP expression .)
    LOGICAL_OP_AND  reduce using rule 22 (binary_expression -> expression GREATER_EQUAL_OP expression .)
    LOGICAL_OP_OR   reduce using rule 22 (binary_expression -> expression GREATER_EQUAL_OP expression .)
    RPAREN          reduce using rule 22 (binary_expression -> expression GREATER_EQUAL_OP expression .)
    SEPARATION      reduce using rule 22 (binary_expression -> expression GREATER_EQUAL_OP expression .)
    PLUS_OP         shift and go to state 40
    MINUS_OP        shift and go to state 41
    MUL_OP          shift and go to state 42
    DIV_OP          shift and go to state 43

  ! PLUS_OP         [ reduce using rule 22 (binary_expression -> expression GREATER_EQUAL_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 22 (binary_expression -> expression GREATER_EQUAL_OP expression .) ]
  ! MUL_OP          [ reduce using rule 22 (binary_expression -> expression GREATER_EQUAL_OP expression .) ]
  ! DIV_OP          [ reduce using rule 22 (binary_expression -> expression GREATER_EQUAL_OP expression .) ]
  ! LESS_OP         [ shift and go to state 44 ]
  ! GREATER_OP      [ shift and go to state 45 ]
  ! LESS_EQUAL_OP   [ shift and go to state 46 ]
  ! GREATER_EQUAL_OP [ shift and go to state 47 ]
  ! EQUAL_OP        [ shift and go to state 48 ]
  ! DIFFERENT_OP    [ shift and go to state 49 ]
  ! LOGICAL_OP_AND  [ shift and go to state 50 ]
  ! LOGICAL_OP_OR   [ shift and go to state 51 ]


state 85

    (23) binary_expression -> expression EQUAL_OP expression .
    (15) binary_expression -> expression . PLUS_OP expression
    (16) binary_expression -> expression . MINUS_OP expression
    (17) binary_expression -> expression . MUL_OP expression
    (18) binary_expression -> expression . DIV_OP expression
    (19) binary_expression -> expression . LESS_OP expression
    (20) binary_expression -> expression . GREATER_OP expression
    (21) binary_expression -> expression . LESS_EQUAL_OP expression
    (22) binary_expression -> expression . GREATER_EQUAL_OP expression
    (23) binary_expression -> expression . EQUAL_OP expression
    (24) binary_expression -> expression . DIFFERENT_OP expression
    (25) binary_expression -> expression . LOGICAL_OP_AND expression
    (26) binary_expression -> expression . LOGICAL_OP_OR expression

    END_LINE        reduce using rule 23 (binary_expression -> expression EQUAL_OP expression .)
    LESS_OP         reduce using rule 23 (binary_expression -> expression EQUAL_OP expression .)
    GREATER_OP      reduce using rule 23 (binary_expression -> expression EQUAL_OP expression .)
    LESS_EQUAL_OP   reduce using rule 23 (binary_expression -> expression EQUAL_OP expression .)
    GREATER_EQUAL_OP reduce using rule 23 (binary_expression -> expression EQUAL_OP expression .)
    EQUAL_OP        reduce using rule 23 (binary_expression -> expression EQUAL_OP expression .)
    DIFFERENT_OP    reduce using rule 23 (binary_expression -> expression EQUAL_OP expression .)
    LOGICAL_OP_AND  reduce using rule 23 (binary_expression -> expression EQUAL_OP expression .)
    LOGICAL_OP_OR   reduce using rule 23 (binary_expression -> expression EQUAL_OP expression .)
    RPAREN          reduce using rule 23 (binary_expression -> expression EQUAL_OP expression .)
    SEPARATION      reduce using rule 23 (binary_expression -> expression EQUAL_OP expression .)
    PLUS_OP         shift and go to state 40
    MINUS_OP        shift and go to state 41
    MUL_OP          shift and go to state 42
    DIV_OP          shift and go to state 43

  ! PLUS_OP         [ reduce using rule 23 (binary_expression -> expression EQUAL_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 23 (binary_expression -> expression EQUAL_OP expression .) ]
  ! MUL_OP          [ reduce using rule 23 (binary_expression -> expression EQUAL_OP expression .) ]
  ! DIV_OP          [ reduce using rule 23 (binary_expression -> expression EQUAL_OP expression .) ]
  ! LESS_OP         [ shift and go to state 44 ]
  ! GREATER_OP      [ shift and go to state 45 ]
  ! LESS_EQUAL_OP   [ shift and go to state 46 ]
  ! GREATER_EQUAL_OP [ shift and go to state 47 ]
  ! EQUAL_OP        [ shift and go to state 48 ]
  ! DIFFERENT_OP    [ shift and go to state 49 ]
  ! LOGICAL_OP_AND  [ shift and go to state 50 ]
  ! LOGICAL_OP_OR   [ shift and go to state 51 ]


state 86

    (24) binary_expression -> expression DIFFERENT_OP expression .
    (15) binary_expression -> expression . PLUS_OP expression
    (16) binary_expression -> expression . MINUS_OP expression
    (17) binary_expression -> expression . MUL_OP expression
    (18) binary_expression -> expression . DIV_OP expression
    (19) binary_expression -> expression . LESS_OP expression
    (20) binary_expression -> expression . GREATER_OP expression
    (21) binary_expression -> expression . LESS_EQUAL_OP expression
    (22) binary_expression -> expression . GREATER_EQUAL_OP expression
    (23) binary_expression -> expression . EQUAL_OP expression
    (24) binary_expression -> expression . DIFFERENT_OP expression
    (25) binary_expression -> expression . LOGICAL_OP_AND expression
    (26) binary_expression -> expression . LOGICAL_OP_OR expression

    END_LINE        reduce using rule 24 (binary_expression -> expression DIFFERENT_OP expression .)
    LESS_OP         reduce using rule 24 (binary_expression -> expression DIFFERENT_OP expression .)
    GREATER_OP      reduce using rule 24 (binary_expression -> expression DIFFERENT_OP expression .)
    LESS_EQUAL_OP   reduce using rule 24 (binary_expression -> expression DIFFERENT_OP expression .)
    GREATER_EQUAL_OP reduce using rule 24 (binary_expression -> expression DIFFERENT_OP expression .)
    EQUAL_OP        reduce using rule 24 (binary_expression -> expression DIFFERENT_OP expression .)
    DIFFERENT_OP    reduce using rule 24 (binary_expression -> expression DIFFERENT_OP expression .)
    LOGICAL_OP_AND  reduce using rule 24 (binary_expression -> expression DIFFERENT_OP expression .)
    LOGICAL_OP_OR   reduce using rule 24 (binary_expression -> expression DIFFERENT_OP expression .)
    RPAREN          reduce using rule 24 (binary_expression -> expression DIFFERENT_OP expression .)
    SEPARATION      reduce using rule 24 (binary_expression -> expression DIFFERENT_OP expression .)
    PLUS_OP         shift and go to state 40
    MINUS_OP        shift and go to state 41
    MUL_OP          shift and go to state 42
    DIV_OP          shift and go to state 43

  ! PLUS_OP         [ reduce using rule 24 (binary_expression -> expression DIFFERENT_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 24 (binary_expression -> expression DIFFERENT_OP expression .) ]
  ! MUL_OP          [ reduce using rule 24 (binary_expression -> expression DIFFERENT_OP expression .) ]
  ! DIV_OP          [ reduce using rule 24 (binary_expression -> expression DIFFERENT_OP expression .) ]
  ! LESS_OP         [ shift and go to state 44 ]
  ! GREATER_OP      [ shift and go to state 45 ]
  ! LESS_EQUAL_OP   [ shift and go to state 46 ]
  ! GREATER_EQUAL_OP [ shift and go to state 47 ]
  ! EQUAL_OP        [ shift and go to state 48 ]
  ! DIFFERENT_OP    [ shift and go to state 49 ]
  ! LOGICAL_OP_AND  [ shift and go to state 50 ]
  ! LOGICAL_OP_OR   [ shift and go to state 51 ]


state 87

    (25) binary_expression -> expression LOGICAL_OP_AND expression .
    (15) binary_expression -> expression . PLUS_OP expression
    (16) binary_expression -> expression . MINUS_OP expression
    (17) binary_expression -> expression . MUL_OP expression
    (18) binary_expression -> expression . DIV_OP expression
    (19) binary_expression -> expression . LESS_OP expression
    (20) binary_expression -> expression . GREATER_OP expression
    (21) binary_expression -> expression . LESS_EQUAL_OP expression
    (22) binary_expression -> expression . GREATER_EQUAL_OP expression
    (23) binary_expression -> expression . EQUAL_OP expression
    (24) binary_expression -> expression . DIFFERENT_OP expression
    (25) binary_expression -> expression . LOGICAL_OP_AND expression
    (26) binary_expression -> expression . LOGICAL_OP_OR expression

    END_LINE        reduce using rule 25 (binary_expression -> expression LOGICAL_OP_AND expression .)
    LOGICAL_OP_AND  reduce using rule 25 (binary_expression -> expression LOGICAL_OP_AND expression .)
    LOGICAL_OP_OR   reduce using rule 25 (binary_expression -> expression LOGICAL_OP_AND expression .)
    RPAREN          reduce using rule 25 (binary_expression -> expression LOGICAL_OP_AND expression .)
    SEPARATION      reduce using rule 25 (binary_expression -> expression LOGICAL_OP_AND expression .)
    PLUS_OP         shift and go to state 40
    MINUS_OP        shift and go to state 41
    MUL_OP          shift and go to state 42
    DIV_OP          shift and go to state 43
    LESS_OP         shift and go to state 44
    GREATER_OP      shift and go to state 45
    LESS_EQUAL_OP   shift and go to state 46
    GREATER_EQUAL_OP shift and go to state 47
    EQUAL_OP        shift and go to state 48
    DIFFERENT_OP    shift and go to state 49

  ! PLUS_OP         [ reduce using rule 25 (binary_expression -> expression LOGICAL_OP_AND expression .) ]
  ! MINUS_OP        [ reduce using rule 25 (binary_expression -> expression LOGICAL_OP_AND expression .) ]
  ! MUL_OP          [ reduce using rule 25 (binary_expression -> expression LOGICAL_OP_AND expression .) ]
  ! DIV_OP          [ reduce using rule 25 (binary_expression -> expression LOGICAL_OP_AND expression .) ]
  ! LESS_OP         [ reduce using rule 25 (binary_expression -> expression LOGICAL_OP_AND expression .) ]
  ! GREATER_OP      [ reduce using rule 25 (binary_expression -> expression LOGICAL_OP_AND expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 25 (binary_expression -> expression LOGICAL_OP_AND expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 25 (binary_expression -> expression LOGICAL_OP_AND expression .) ]
  ! EQUAL_OP        [ reduce using rule 25 (binary_expression -> expression LOGICAL_OP_AND expression .) ]
  ! DIFFERENT_OP    [ reduce using rule 25 (binary_expression -> expression LOGICAL_OP_AND expression .) ]
  ! LOGICAL_OP_AND  [ shift and go to state 50 ]
  ! LOGICAL_OP_OR   [ shift and go to state 51 ]


state 88

    (26) binary_expression -> expression LOGICAL_OP_OR expression .
    (15) binary_expression -> expression . PLUS_OP expression
    (16) binary_expression -> expression . MINUS_OP expression
    (17) binary_expression -> expression . MUL_OP expression
    (18) binary_expression -> expression . DIV_OP expression
    (19) binary_expression -> expression . LESS_OP expression
    (20) binary_expression -> expression . GREATER_OP expression
    (21) binary_expression -> expression . LESS_EQUAL_OP expression
    (22) binary_expression -> expression . GREATER_EQUAL_OP expression
    (23) binary_expression -> expression . EQUAL_OP expression
    (24) binary_expression -> expression . DIFFERENT_OP expression
    (25) binary_expression -> expression . LOGICAL_OP_AND expression
    (26) binary_expression -> expression . LOGICAL_OP_OR expression

    END_LINE        reduce using rule 26 (binary_expression -> expression LOGICAL_OP_OR expression .)
    LOGICAL_OP_OR   reduce using rule 26 (binary_expression -> expression LOGICAL_OP_OR expression .)
    RPAREN          reduce using rule 26 (binary_expression -> expression LOGICAL_OP_OR expression .)
    SEPARATION      reduce using rule 26 (binary_expression -> expression LOGICAL_OP_OR expression .)
    PLUS_OP         shift and go to state 40
    MINUS_OP        shift and go to state 41
    MUL_OP          shift and go to state 42
    DIV_OP          shift and go to state 43
    LESS_OP         shift and go to state 44
    GREATER_OP      shift and go to state 45
    LESS_EQUAL_OP   shift and go to state 46
    GREATER_EQUAL_OP shift and go to state 47
    EQUAL_OP        shift and go to state 48
    DIFFERENT_OP    shift and go to state 49
    LOGICAL_OP_AND  shift and go to state 50

  ! PLUS_OP         [ reduce using rule 26 (binary_expression -> expression LOGICAL_OP_OR expression .) ]
  ! MINUS_OP        [ reduce using rule 26 (binary_expression -> expression LOGICAL_OP_OR expression .) ]
  ! MUL_OP          [ reduce using rule 26 (binary_expression -> expression LOGICAL_OP_OR expression .) ]
  ! DIV_OP          [ reduce using rule 26 (binary_expression -> expression LOGICAL_OP_OR expression .) ]
  ! LESS_OP         [ reduce using rule 26 (binary_expression -> expression LOGICAL_OP_OR expression .) ]
  ! GREATER_OP      [ reduce using rule 26 (binary_expression -> expression LOGICAL_OP_OR expression .) ]
  ! LESS_EQUAL_OP   [ reduce using rule 26 (binary_expression -> expression LOGICAL_OP_OR expression .) ]
  ! GREATER_EQUAL_OP [ reduce using rule 26 (binary_expression -> expression LOGICAL_OP_OR expression .) ]
  ! EQUAL_OP        [ reduce using rule 26 (binary_expression -> expression LOGICAL_OP_OR expression .) ]
  ! DIFFERENT_OP    [ reduce using rule 26 (binary_expression -> expression LOGICAL_OP_OR expression .) ]
  ! LOGICAL_OP_AND  [ reduce using rule 26 (binary_expression -> expression LOGICAL_OP_OR expression .) ]
  ! LOGICAL_OP_OR   [ shift and go to state 51 ]


state 89

    (39) assignment -> VARIABLE ASSIGNMENT_OP expression .
    (15) binary_expression -> expression . PLUS_OP expression
    (16) binary_expression -> expression . MINUS_OP expression
    (17) binary_expression -> expression . MUL_OP expression
    (18) binary_expression -> expression . DIV_OP expression
    (19) binary_expression -> expression . LESS_OP expression
    (20) binary_expression -> expression . GREATER_OP expression
    (21) binary_expression -> expression . LESS_EQUAL_OP expression
    (22) binary_expression -> expression . GREATER_EQUAL_OP expression
    (23) binary_expression -> expression . EQUAL_OP expression
    (24) binary_expression -> expression . DIFFERENT_OP expression
    (25) binary_expression -> expression . LOGICAL_OP_AND expression
    (26) binary_expression -> expression . LOGICAL_OP_OR expression

    END_LINE        reduce using rule 39 (assignment -> VARIABLE ASSIGNMENT_OP expression .)
    SEPARATION      reduce using rule 39 (assignment -> VARIABLE ASSIGNMENT_OP expression .)
    RPAREN          reduce using rule 39 (assignment -> VARIABLE ASSIGNMENT_OP expression .)
    PLUS_OP         shift and go to state 40
    MINUS_OP        shift and go to state 41
    MUL_OP          shift and go to state 42
    DIV_OP          shift and go to state 43
    LESS_OP         shift and go to state 44
    GREATER_OP      shift and go to state 45
    LESS_EQUAL_OP   shift and go to state 46
    GREATER_EQUAL_OP shift and go to state 47
    EQUAL_OP        shift and go to state 48
    DIFFERENT_OP    shift and go to state 49
    LOGICAL_OP_AND  shift and go to state 50
    LOGICAL_OP_OR   shift and go to state 51


state 90

    (50) conditional -> CONDITIONAL1 LPAREN expression . RPAREN STRUCTURE_BODY statement_list
    (51) conditional -> CONDITIONAL1 LPAREN expression . RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (15) binary_expression -> expression . PLUS_OP expression
    (16) binary_expression -> expression . MINUS_OP expression
    (17) binary_expression -> expression . MUL_OP expression
    (18) binary_expression -> expression . DIV_OP expression
    (19) binary_expression -> expression . LESS_OP expression
    (20) binary_expression -> expression . GREATER_OP expression
    (21) binary_expression -> expression . LESS_EQUAL_OP expression
    (22) binary_expression -> expression . GREATER_EQUAL_OP expression
    (23) binary_expression -> expression . EQUAL_OP expression
    (24) binary_expression -> expression . DIFFERENT_OP expression
    (25) binary_expression -> expression . LOGICAL_OP_AND expression
    (26) binary_expression -> expression . LOGICAL_OP_OR expression

    RPAREN          shift and go to state 95
    PLUS_OP         shift and go to state 40
    MINUS_OP        shift and go to state 41
    MUL_OP          shift and go to state 42
    DIV_OP          shift and go to state 43
    LESS_OP         shift and go to state 44
    GREATER_OP      shift and go to state 45
    LESS_EQUAL_OP   shift and go to state 46
    GREATER_EQUAL_OP shift and go to state 47
    EQUAL_OP        shift and go to state 48
    DIFFERENT_OP    shift and go to state 49
    LOGICAL_OP_AND  shift and go to state 50
    LOGICAL_OP_OR   shift and go to state 51


state 91

    (29) primary_expression -> LPAREN expression RPAREN .

    END_LINE        reduce using rule 29 (primary_expression -> LPAREN expression RPAREN .)
    PLUS_OP         reduce using rule 29 (primary_expression -> LPAREN expression RPAREN .)
    MINUS_OP        reduce using rule 29 (primary_expression -> LPAREN expression RPAREN .)
    MUL_OP          reduce using rule 29 (primary_expression -> LPAREN expression RPAREN .)
    DIV_OP          reduce using rule 29 (primary_expression -> LPAREN expression RPAREN .)
    LESS_OP         reduce using rule 29 (primary_expression -> LPAREN expression RPAREN .)
    GREATER_OP      reduce using rule 29 (primary_expression -> LPAREN expression RPAREN .)
    LESS_EQUAL_OP   reduce using rule 29 (primary_expression -> LPAREN expression RPAREN .)
    GREATER_EQUAL_OP reduce using rule 29 (primary_expression -> LPAREN expression RPAREN .)
    EQUAL_OP        reduce using rule 29 (primary_expression -> LPAREN expression RPAREN .)
    DIFFERENT_OP    reduce using rule 29 (primary_expression -> LPAREN expression RPAREN .)
    LOGICAL_OP_AND  reduce using rule 29 (primary_expression -> LPAREN expression RPAREN .)
    LOGICAL_OP_OR   reduce using rule 29 (primary_expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 29 (primary_expression -> LPAREN expression RPAREN .)
    SEPARATION      reduce using rule 29 (primary_expression -> LPAREN expression RPAREN .)


state 92

    (52) loop -> LOOP1 LPAREN expression . RPAREN STRUCTURE_BODY statement_list
    (15) binary_expression -> expression . PLUS_OP expression
    (16) binary_expression -> expression . MINUS_OP expression
    (17) binary_expression -> expression . MUL_OP expression
    (18) binary_expression -> expression . DIV_OP expression
    (19) binary_expression -> expression . LESS_OP expression
    (20) binary_expression -> expression . GREATER_OP expression
    (21) binary_expression -> expression . LESS_EQUAL_OP expression
    (22) binary_expression -> expression . GREATER_EQUAL_OP expression
    (23) binary_expression -> expression . EQUAL_OP expression
    (24) binary_expression -> expression . DIFFERENT_OP expression
    (25) binary_expression -> expression . LOGICAL_OP_AND expression
    (26) binary_expression -> expression . LOGICAL_OP_OR expression

    RPAREN          shift and go to state 96
    PLUS_OP         shift and go to state 40
    MINUS_OP        shift and go to state 41
    MUL_OP          shift and go to state 42
    DIV_OP          shift and go to state 43
    LESS_OP         shift and go to state 44
    GREATER_OP      shift and go to state 45
    LESS_EQUAL_OP   shift and go to state 46
    GREATER_EQUAL_OP shift and go to state 47
    EQUAL_OP        shift and go to state 48
    DIFFERENT_OP    shift and go to state 49
    LOGICAL_OP_AND  shift and go to state 50
    LOGICAL_OP_OR   shift and go to state 51


state 93

    (53) loop -> LOOP2 LPAREN assignment . SEPARATION expression SEPARATION assignment RPAREN STRUCTURE_BODY statement_list

    SEPARATION      shift and go to state 97


state 94

    (39) assignment -> VARIABLE . ASSIGNMENT_OP expression

    ASSIGNMENT_OP   shift and go to state 58


state 95

    (50) conditional -> CONDITIONAL1 LPAREN expression RPAREN . STRUCTURE_BODY statement_list
    (51) conditional -> CONDITIONAL1 LPAREN expression RPAREN . STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list

    STRUCTURE_BODY  shift and go to state 98


state 96

    (52) loop -> LOOP1 LPAREN expression RPAREN . STRUCTURE_BODY statement_list

    STRUCTURE_BODY  shift and go to state 99


state 97

    (53) loop -> LOOP2 LPAREN assignment SEPARATION . expression SEPARATION assignment RPAREN STRUCTURE_BODY statement_list
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (15) binary_expression -> . expression PLUS_OP expression
    (16) binary_expression -> . expression MINUS_OP expression
    (17) binary_expression -> . expression MUL_OP expression
    (18) binary_expression -> . expression DIV_OP expression
    (19) binary_expression -> . expression LESS_OP expression
    (20) binary_expression -> . expression GREATER_OP expression
    (21) binary_expression -> . expression LESS_EQUAL_OP expression
    (22) binary_expression -> . expression GREATER_EQUAL_OP expression
    (23) binary_expression -> . expression EQUAL_OP expression
    (24) binary_expression -> . expression DIFFERENT_OP expression
    (25) binary_expression -> . expression LOGICAL_OP_AND expression
    (26) binary_expression -> . expression LOGICAL_OP_OR expression
    (27) unitary_expression -> . MINUS_OP expression
    (28) unitary_expression -> . LOGICAL_OP_NOT expression
    (29) primary_expression -> . LPAREN expression RPAREN
    (30) primary_expression -> . term
    (31) term -> . NUMBER_INTEGER
    (32) term -> . NUMBER_FLOAT
    (33) term -> . VARIABLE
    (34) term -> . TRUE
    (35) term -> . FALSE
    (36) term -> . NULL
    (37) term -> . TEXT_STRING
    (38) term -> . TEXT_CHAR

    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    VARIABLE        shift and go to state 71
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    expression                     shift and go to state 100
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 98

    (50) conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY . statement_list
    (51) conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY . statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . return_statement END_LINE
    (10) statement -> . break_statement END_LINE
    (11) statement -> . comment
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (39) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (40) declaration -> . TYPE_BOOLEAN VARIABLE
    (41) declaration -> . TYPE_STRING VARIABLE
    (42) declaration -> . TYPE_CHAR VARIABLE
    (43) declaration -> . TYPE_INTEGER VARIABLE
    (44) declaration -> . TYPE_FLOAT VARIABLE
    (45) declaration -> . TYPE_BOOLEAN assignment
    (46) declaration -> . TYPE_STRING assignment
    (47) declaration -> . TYPE_CHAR assignment
    (48) declaration -> . TYPE_INTEGER assignment
    (49) declaration -> . TYPE_FLOAT assignment
    (50) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (51) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (52) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (53) loop -> . LOOP2 LPAREN assignment SEPARATION expression SEPARATION assignment RPAREN STRUCTURE_BODY statement_list
    (54) return_statement -> . RETURN expression
    (55) return_statement -> . RETURN
    (56) break_statement -> . BREAK
    (57) comment -> . COMMENT
    (15) binary_expression -> . expression PLUS_OP expression
    (16) binary_expression -> . expression MINUS_OP expression
    (17) binary_expression -> . expression MUL_OP expression
    (18) binary_expression -> . expression DIV_OP expression
    (19) binary_expression -> . expression LESS_OP expression
    (20) binary_expression -> . expression GREATER_OP expression
    (21) binary_expression -> . expression LESS_EQUAL_OP expression
    (22) binary_expression -> . expression GREATER_EQUAL_OP expression
    (23) binary_expression -> . expression EQUAL_OP expression
    (24) binary_expression -> . expression DIFFERENT_OP expression
    (25) binary_expression -> . expression LOGICAL_OP_AND expression
    (26) binary_expression -> . expression LOGICAL_OP_OR expression
    (27) unitary_expression -> . MINUS_OP expression
    (28) unitary_expression -> . LOGICAL_OP_NOT expression
    (29) primary_expression -> . LPAREN expression RPAREN
    (30) primary_expression -> . term
    (31) term -> . NUMBER_INTEGER
    (32) term -> . NUMBER_FLOAT
    (33) term -> . VARIABLE
    (34) term -> . TRUE
    (35) term -> . FALSE
    (36) term -> . NULL
    (37) term -> . TEXT_STRING
    (38) term -> . TEXT_CHAR

    VARIABLE        shift and go to state 15
    TYPE_BOOLEAN    shift and go to state 16
    TYPE_STRING     shift and go to state 17
    TYPE_CHAR       shift and go to state 18
    TYPE_INTEGER    shift and go to state 19
    TYPE_FLOAT      shift and go to state 20
    CONDITIONAL1    shift and go to state 21
    LOOP1           shift and go to state 23
    LOOP2           shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    COMMENT         shift and go to state 27
    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    expression                     shift and go to state 4
    statement_list                 shift and go to state 101
    statement                      shift and go to state 3
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    return_statement               shift and go to state 9
    break_statement                shift and go to state 10
    comment                        shift and go to state 11
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 99

    (52) loop -> LOOP1 LPAREN expression RPAREN STRUCTURE_BODY . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . return_statement END_LINE
    (10) statement -> . break_statement END_LINE
    (11) statement -> . comment
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (39) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (40) declaration -> . TYPE_BOOLEAN VARIABLE
    (41) declaration -> . TYPE_STRING VARIABLE
    (42) declaration -> . TYPE_CHAR VARIABLE
    (43) declaration -> . TYPE_INTEGER VARIABLE
    (44) declaration -> . TYPE_FLOAT VARIABLE
    (45) declaration -> . TYPE_BOOLEAN assignment
    (46) declaration -> . TYPE_STRING assignment
    (47) declaration -> . TYPE_CHAR assignment
    (48) declaration -> . TYPE_INTEGER assignment
    (49) declaration -> . TYPE_FLOAT assignment
    (50) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (51) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (52) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (53) loop -> . LOOP2 LPAREN assignment SEPARATION expression SEPARATION assignment RPAREN STRUCTURE_BODY statement_list
    (54) return_statement -> . RETURN expression
    (55) return_statement -> . RETURN
    (56) break_statement -> . BREAK
    (57) comment -> . COMMENT
    (15) binary_expression -> . expression PLUS_OP expression
    (16) binary_expression -> . expression MINUS_OP expression
    (17) binary_expression -> . expression MUL_OP expression
    (18) binary_expression -> . expression DIV_OP expression
    (19) binary_expression -> . expression LESS_OP expression
    (20) binary_expression -> . expression GREATER_OP expression
    (21) binary_expression -> . expression LESS_EQUAL_OP expression
    (22) binary_expression -> . expression GREATER_EQUAL_OP expression
    (23) binary_expression -> . expression EQUAL_OP expression
    (24) binary_expression -> . expression DIFFERENT_OP expression
    (25) binary_expression -> . expression LOGICAL_OP_AND expression
    (26) binary_expression -> . expression LOGICAL_OP_OR expression
    (27) unitary_expression -> . MINUS_OP expression
    (28) unitary_expression -> . LOGICAL_OP_NOT expression
    (29) primary_expression -> . LPAREN expression RPAREN
    (30) primary_expression -> . term
    (31) term -> . NUMBER_INTEGER
    (32) term -> . NUMBER_FLOAT
    (33) term -> . VARIABLE
    (34) term -> . TRUE
    (35) term -> . FALSE
    (36) term -> . NULL
    (37) term -> . TEXT_STRING
    (38) term -> . TEXT_CHAR

    VARIABLE        shift and go to state 15
    TYPE_BOOLEAN    shift and go to state 16
    TYPE_STRING     shift and go to state 17
    TYPE_CHAR       shift and go to state 18
    TYPE_INTEGER    shift and go to state 19
    TYPE_FLOAT      shift and go to state 20
    CONDITIONAL1    shift and go to state 21
    LOOP1           shift and go to state 23
    LOOP2           shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    COMMENT         shift and go to state 27
    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    expression                     shift and go to state 4
    statement_list                 shift and go to state 102
    statement                      shift and go to state 3
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    return_statement               shift and go to state 9
    break_statement                shift and go to state 10
    comment                        shift and go to state 11
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 100

    (53) loop -> LOOP2 LPAREN assignment SEPARATION expression . SEPARATION assignment RPAREN STRUCTURE_BODY statement_list
    (15) binary_expression -> expression . PLUS_OP expression
    (16) binary_expression -> expression . MINUS_OP expression
    (17) binary_expression -> expression . MUL_OP expression
    (18) binary_expression -> expression . DIV_OP expression
    (19) binary_expression -> expression . LESS_OP expression
    (20) binary_expression -> expression . GREATER_OP expression
    (21) binary_expression -> expression . LESS_EQUAL_OP expression
    (22) binary_expression -> expression . GREATER_EQUAL_OP expression
    (23) binary_expression -> expression . EQUAL_OP expression
    (24) binary_expression -> expression . DIFFERENT_OP expression
    (25) binary_expression -> expression . LOGICAL_OP_AND expression
    (26) binary_expression -> expression . LOGICAL_OP_OR expression

    SEPARATION      shift and go to state 103
    PLUS_OP         shift and go to state 40
    MINUS_OP        shift and go to state 41
    MUL_OP          shift and go to state 42
    DIV_OP          shift and go to state 43
    LESS_OP         shift and go to state 44
    GREATER_OP      shift and go to state 45
    LESS_EQUAL_OP   shift and go to state 46
    GREATER_EQUAL_OP shift and go to state 47
    EQUAL_OP        shift and go to state 48
    DIFFERENT_OP    shift and go to state 49
    LOGICAL_OP_AND  shift and go to state 50
    LOGICAL_OP_OR   shift and go to state 51


state 101

    (50) conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list .
    (51) conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list . CONDITIONAL2 STRUCTURE_BODY statement_list
    (2) statement_list -> statement_list . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . return_statement END_LINE
    (10) statement -> . break_statement END_LINE
    (11) statement -> . comment
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (39) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (40) declaration -> . TYPE_BOOLEAN VARIABLE
    (41) declaration -> . TYPE_STRING VARIABLE
    (42) declaration -> . TYPE_CHAR VARIABLE
    (43) declaration -> . TYPE_INTEGER VARIABLE
    (44) declaration -> . TYPE_FLOAT VARIABLE
    (45) declaration -> . TYPE_BOOLEAN assignment
    (46) declaration -> . TYPE_STRING assignment
    (47) declaration -> . TYPE_CHAR assignment
    (48) declaration -> . TYPE_INTEGER assignment
    (49) declaration -> . TYPE_FLOAT assignment
    (50) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (51) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (52) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (53) loop -> . LOOP2 LPAREN assignment SEPARATION expression SEPARATION assignment RPAREN STRUCTURE_BODY statement_list
    (54) return_statement -> . RETURN expression
    (55) return_statement -> . RETURN
    (56) break_statement -> . BREAK
    (57) comment -> . COMMENT
    (15) binary_expression -> . expression PLUS_OP expression
    (16) binary_expression -> . expression MINUS_OP expression
    (17) binary_expression -> . expression MUL_OP expression
    (18) binary_expression -> . expression DIV_OP expression
    (19) binary_expression -> . expression LESS_OP expression
    (20) binary_expression -> . expression GREATER_OP expression
    (21) binary_expression -> . expression LESS_EQUAL_OP expression
    (22) binary_expression -> . expression GREATER_EQUAL_OP expression
    (23) binary_expression -> . expression EQUAL_OP expression
    (24) binary_expression -> . expression DIFFERENT_OP expression
    (25) binary_expression -> . expression LOGICAL_OP_AND expression
    (26) binary_expression -> . expression LOGICAL_OP_OR expression
    (27) unitary_expression -> . MINUS_OP expression
    (28) unitary_expression -> . LOGICAL_OP_NOT expression
    (29) primary_expression -> . LPAREN expression RPAREN
    (30) primary_expression -> . term
    (31) term -> . NUMBER_INTEGER
    (32) term -> . NUMBER_FLOAT
    (33) term -> . VARIABLE
    (34) term -> . TRUE
    (35) term -> . FALSE
    (36) term -> . NULL
    (37) term -> . TEXT_STRING
    (38) term -> . TEXT_CHAR

    END_LINE        reduce using rule 50 (conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list .)
    CONDITIONAL2    shift and go to state 104
    VARIABLE        shift and go to state 15
    TYPE_BOOLEAN    shift and go to state 16
    TYPE_STRING     shift and go to state 17
    TYPE_CHAR       shift and go to state 18
    TYPE_INTEGER    shift and go to state 19
    TYPE_FLOAT      shift and go to state 20
    CONDITIONAL1    shift and go to state 21
    LOOP1           shift and go to state 23
    LOOP2           shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    COMMENT         shift and go to state 27
    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    expression                     shift and go to state 4
    statement                      shift and go to state 38
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    return_statement               shift and go to state 9
    break_statement                shift and go to state 10
    comment                        shift and go to state 11
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 102

    (52) loop -> LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . return_statement END_LINE
    (10) statement -> . break_statement END_LINE
    (11) statement -> . comment
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (39) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (40) declaration -> . TYPE_BOOLEAN VARIABLE
    (41) declaration -> . TYPE_STRING VARIABLE
    (42) declaration -> . TYPE_CHAR VARIABLE
    (43) declaration -> . TYPE_INTEGER VARIABLE
    (44) declaration -> . TYPE_FLOAT VARIABLE
    (45) declaration -> . TYPE_BOOLEAN assignment
    (46) declaration -> . TYPE_STRING assignment
    (47) declaration -> . TYPE_CHAR assignment
    (48) declaration -> . TYPE_INTEGER assignment
    (49) declaration -> . TYPE_FLOAT assignment
    (50) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (51) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (52) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (53) loop -> . LOOP2 LPAREN assignment SEPARATION expression SEPARATION assignment RPAREN STRUCTURE_BODY statement_list
    (54) return_statement -> . RETURN expression
    (55) return_statement -> . RETURN
    (56) break_statement -> . BREAK
    (57) comment -> . COMMENT
    (15) binary_expression -> . expression PLUS_OP expression
    (16) binary_expression -> . expression MINUS_OP expression
    (17) binary_expression -> . expression MUL_OP expression
    (18) binary_expression -> . expression DIV_OP expression
    (19) binary_expression -> . expression LESS_OP expression
    (20) binary_expression -> . expression GREATER_OP expression
    (21) binary_expression -> . expression LESS_EQUAL_OP expression
    (22) binary_expression -> . expression GREATER_EQUAL_OP expression
    (23) binary_expression -> . expression EQUAL_OP expression
    (24) binary_expression -> . expression DIFFERENT_OP expression
    (25) binary_expression -> . expression LOGICAL_OP_AND expression
    (26) binary_expression -> . expression LOGICAL_OP_OR expression
    (27) unitary_expression -> . MINUS_OP expression
    (28) unitary_expression -> . LOGICAL_OP_NOT expression
    (29) primary_expression -> . LPAREN expression RPAREN
    (30) primary_expression -> . term
    (31) term -> . NUMBER_INTEGER
    (32) term -> . NUMBER_FLOAT
    (33) term -> . VARIABLE
    (34) term -> . TRUE
    (35) term -> . FALSE
    (36) term -> . NULL
    (37) term -> . TEXT_STRING
    (38) term -> . TEXT_CHAR

    END_LINE        reduce using rule 52 (loop -> LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list .)
    VARIABLE        shift and go to state 15
    TYPE_BOOLEAN    shift and go to state 16
    TYPE_STRING     shift and go to state 17
    TYPE_CHAR       shift and go to state 18
    TYPE_INTEGER    shift and go to state 19
    TYPE_FLOAT      shift and go to state 20
    CONDITIONAL1    shift and go to state 21
    LOOP1           shift and go to state 23
    LOOP2           shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    COMMENT         shift and go to state 27
    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    expression                     shift and go to state 4
    statement                      shift and go to state 38
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    return_statement               shift and go to state 9
    break_statement                shift and go to state 10
    comment                        shift and go to state 11
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 103

    (53) loop -> LOOP2 LPAREN assignment SEPARATION expression SEPARATION . assignment RPAREN STRUCTURE_BODY statement_list
    (39) assignment -> . VARIABLE ASSIGNMENT_OP expression

    VARIABLE        shift and go to state 94

    assignment                     shift and go to state 105

state 104

    (51) conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 . STRUCTURE_BODY statement_list

    STRUCTURE_BODY  shift and go to state 106


state 105

    (53) loop -> LOOP2 LPAREN assignment SEPARATION expression SEPARATION assignment . RPAREN STRUCTURE_BODY statement_list

    RPAREN          shift and go to state 107


state 106

    (51) conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . return_statement END_LINE
    (10) statement -> . break_statement END_LINE
    (11) statement -> . comment
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (39) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (40) declaration -> . TYPE_BOOLEAN VARIABLE
    (41) declaration -> . TYPE_STRING VARIABLE
    (42) declaration -> . TYPE_CHAR VARIABLE
    (43) declaration -> . TYPE_INTEGER VARIABLE
    (44) declaration -> . TYPE_FLOAT VARIABLE
    (45) declaration -> . TYPE_BOOLEAN assignment
    (46) declaration -> . TYPE_STRING assignment
    (47) declaration -> . TYPE_CHAR assignment
    (48) declaration -> . TYPE_INTEGER assignment
    (49) declaration -> . TYPE_FLOAT assignment
    (50) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (51) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (52) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (53) loop -> . LOOP2 LPAREN assignment SEPARATION expression SEPARATION assignment RPAREN STRUCTURE_BODY statement_list
    (54) return_statement -> . RETURN expression
    (55) return_statement -> . RETURN
    (56) break_statement -> . BREAK
    (57) comment -> . COMMENT
    (15) binary_expression -> . expression PLUS_OP expression
    (16) binary_expression -> . expression MINUS_OP expression
    (17) binary_expression -> . expression MUL_OP expression
    (18) binary_expression -> . expression DIV_OP expression
    (19) binary_expression -> . expression LESS_OP expression
    (20) binary_expression -> . expression GREATER_OP expression
    (21) binary_expression -> . expression LESS_EQUAL_OP expression
    (22) binary_expression -> . expression GREATER_EQUAL_OP expression
    (23) binary_expression -> . expression EQUAL_OP expression
    (24) binary_expression -> . expression DIFFERENT_OP expression
    (25) binary_expression -> . expression LOGICAL_OP_AND expression
    (26) binary_expression -> . expression LOGICAL_OP_OR expression
    (27) unitary_expression -> . MINUS_OP expression
    (28) unitary_expression -> . LOGICAL_OP_NOT expression
    (29) primary_expression -> . LPAREN expression RPAREN
    (30) primary_expression -> . term
    (31) term -> . NUMBER_INTEGER
    (32) term -> . NUMBER_FLOAT
    (33) term -> . VARIABLE
    (34) term -> . TRUE
    (35) term -> . FALSE
    (36) term -> . NULL
    (37) term -> . TEXT_STRING
    (38) term -> . TEXT_CHAR

    VARIABLE        shift and go to state 15
    TYPE_BOOLEAN    shift and go to state 16
    TYPE_STRING     shift and go to state 17
    TYPE_CHAR       shift and go to state 18
    TYPE_INTEGER    shift and go to state 19
    TYPE_FLOAT      shift and go to state 20
    CONDITIONAL1    shift and go to state 21
    LOOP1           shift and go to state 23
    LOOP2           shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    COMMENT         shift and go to state 27
    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    expression                     shift and go to state 4
    statement_list                 shift and go to state 108
    statement                      shift and go to state 3
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    return_statement               shift and go to state 9
    break_statement                shift and go to state 10
    comment                        shift and go to state 11
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 107

    (53) loop -> LOOP2 LPAREN assignment SEPARATION expression SEPARATION assignment RPAREN . STRUCTURE_BODY statement_list

    STRUCTURE_BODY  shift and go to state 109


state 108

    (51) conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . return_statement END_LINE
    (10) statement -> . break_statement END_LINE
    (11) statement -> . comment
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (39) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (40) declaration -> . TYPE_BOOLEAN VARIABLE
    (41) declaration -> . TYPE_STRING VARIABLE
    (42) declaration -> . TYPE_CHAR VARIABLE
    (43) declaration -> . TYPE_INTEGER VARIABLE
    (44) declaration -> . TYPE_FLOAT VARIABLE
    (45) declaration -> . TYPE_BOOLEAN assignment
    (46) declaration -> . TYPE_STRING assignment
    (47) declaration -> . TYPE_CHAR assignment
    (48) declaration -> . TYPE_INTEGER assignment
    (49) declaration -> . TYPE_FLOAT assignment
    (50) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (51) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (52) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (53) loop -> . LOOP2 LPAREN assignment SEPARATION expression SEPARATION assignment RPAREN STRUCTURE_BODY statement_list
    (54) return_statement -> . RETURN expression
    (55) return_statement -> . RETURN
    (56) break_statement -> . BREAK
    (57) comment -> . COMMENT
    (15) binary_expression -> . expression PLUS_OP expression
    (16) binary_expression -> . expression MINUS_OP expression
    (17) binary_expression -> . expression MUL_OP expression
    (18) binary_expression -> . expression DIV_OP expression
    (19) binary_expression -> . expression LESS_OP expression
    (20) binary_expression -> . expression GREATER_OP expression
    (21) binary_expression -> . expression LESS_EQUAL_OP expression
    (22) binary_expression -> . expression GREATER_EQUAL_OP expression
    (23) binary_expression -> . expression EQUAL_OP expression
    (24) binary_expression -> . expression DIFFERENT_OP expression
    (25) binary_expression -> . expression LOGICAL_OP_AND expression
    (26) binary_expression -> . expression LOGICAL_OP_OR expression
    (27) unitary_expression -> . MINUS_OP expression
    (28) unitary_expression -> . LOGICAL_OP_NOT expression
    (29) primary_expression -> . LPAREN expression RPAREN
    (30) primary_expression -> . term
    (31) term -> . NUMBER_INTEGER
    (32) term -> . NUMBER_FLOAT
    (33) term -> . VARIABLE
    (34) term -> . TRUE
    (35) term -> . FALSE
    (36) term -> . NULL
    (37) term -> . TEXT_STRING
    (38) term -> . TEXT_CHAR

    END_LINE        reduce using rule 51 (conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list .)
    VARIABLE        shift and go to state 15
    TYPE_BOOLEAN    shift and go to state 16
    TYPE_STRING     shift and go to state 17
    TYPE_CHAR       shift and go to state 18
    TYPE_INTEGER    shift and go to state 19
    TYPE_FLOAT      shift and go to state 20
    CONDITIONAL1    shift and go to state 21
    LOOP1           shift and go to state 23
    LOOP2           shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    COMMENT         shift and go to state 27
    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    expression                     shift and go to state 4
    statement                      shift and go to state 38
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    return_statement               shift and go to state 9
    break_statement                shift and go to state 10
    comment                        shift and go to state 11
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 109

    (53) loop -> LOOP2 LPAREN assignment SEPARATION expression SEPARATION assignment RPAREN STRUCTURE_BODY . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . return_statement END_LINE
    (10) statement -> . break_statement END_LINE
    (11) statement -> . comment
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (39) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (40) declaration -> . TYPE_BOOLEAN VARIABLE
    (41) declaration -> . TYPE_STRING VARIABLE
    (42) declaration -> . TYPE_CHAR VARIABLE
    (43) declaration -> . TYPE_INTEGER VARIABLE
    (44) declaration -> . TYPE_FLOAT VARIABLE
    (45) declaration -> . TYPE_BOOLEAN assignment
    (46) declaration -> . TYPE_STRING assignment
    (47) declaration -> . TYPE_CHAR assignment
    (48) declaration -> . TYPE_INTEGER assignment
    (49) declaration -> . TYPE_FLOAT assignment
    (50) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (51) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (52) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (53) loop -> . LOOP2 LPAREN assignment SEPARATION expression SEPARATION assignment RPAREN STRUCTURE_BODY statement_list
    (54) return_statement -> . RETURN expression
    (55) return_statement -> . RETURN
    (56) break_statement -> . BREAK
    (57) comment -> . COMMENT
    (15) binary_expression -> . expression PLUS_OP expression
    (16) binary_expression -> . expression MINUS_OP expression
    (17) binary_expression -> . expression MUL_OP expression
    (18) binary_expression -> . expression DIV_OP expression
    (19) binary_expression -> . expression LESS_OP expression
    (20) binary_expression -> . expression GREATER_OP expression
    (21) binary_expression -> . expression LESS_EQUAL_OP expression
    (22) binary_expression -> . expression GREATER_EQUAL_OP expression
    (23) binary_expression -> . expression EQUAL_OP expression
    (24) binary_expression -> . expression DIFFERENT_OP expression
    (25) binary_expression -> . expression LOGICAL_OP_AND expression
    (26) binary_expression -> . expression LOGICAL_OP_OR expression
    (27) unitary_expression -> . MINUS_OP expression
    (28) unitary_expression -> . LOGICAL_OP_NOT expression
    (29) primary_expression -> . LPAREN expression RPAREN
    (30) primary_expression -> . term
    (31) term -> . NUMBER_INTEGER
    (32) term -> . NUMBER_FLOAT
    (33) term -> . VARIABLE
    (34) term -> . TRUE
    (35) term -> . FALSE
    (36) term -> . NULL
    (37) term -> . TEXT_STRING
    (38) term -> . TEXT_CHAR

    VARIABLE        shift and go to state 15
    TYPE_BOOLEAN    shift and go to state 16
    TYPE_STRING     shift and go to state 17
    TYPE_CHAR       shift and go to state 18
    TYPE_INTEGER    shift and go to state 19
    TYPE_FLOAT      shift and go to state 20
    CONDITIONAL1    shift and go to state 21
    LOOP1           shift and go to state 23
    LOOP2           shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    COMMENT         shift and go to state 27
    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    assignment                     shift and go to state 5
    expression                     shift and go to state 4
    statement_list                 shift and go to state 110
    statement                      shift and go to state 3
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    return_statement               shift and go to state 9
    break_statement                shift and go to state 10
    comment                        shift and go to state 11
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 110

    (53) loop -> LOOP2 LPAREN assignment SEPARATION expression SEPARATION assignment RPAREN STRUCTURE_BODY statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . return_statement END_LINE
    (10) statement -> . break_statement END_LINE
    (11) statement -> . comment
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (39) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (40) declaration -> . TYPE_BOOLEAN VARIABLE
    (41) declaration -> . TYPE_STRING VARIABLE
    (42) declaration -> . TYPE_CHAR VARIABLE
    (43) declaration -> . TYPE_INTEGER VARIABLE
    (44) declaration -> . TYPE_FLOAT VARIABLE
    (45) declaration -> . TYPE_BOOLEAN assignment
    (46) declaration -> . TYPE_STRING assignment
    (47) declaration -> . TYPE_CHAR assignment
    (48) declaration -> . TYPE_INTEGER assignment
    (49) declaration -> . TYPE_FLOAT assignment
    (50) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (51) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (52) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (53) loop -> . LOOP2 LPAREN assignment SEPARATION expression SEPARATION assignment RPAREN STRUCTURE_BODY statement_list
    (54) return_statement -> . RETURN expression
    (55) return_statement -> . RETURN
    (56) break_statement -> . BREAK
    (57) comment -> . COMMENT
    (15) binary_expression -> . expression PLUS_OP expression
    (16) binary_expression -> . expression MINUS_OP expression
    (17) binary_expression -> . expression MUL_OP expression
    (18) binary_expression -> . expression DIV_OP expression
    (19) binary_expression -> . expression LESS_OP expression
    (20) binary_expression -> . expression GREATER_OP expression
    (21) binary_expression -> . expression LESS_EQUAL_OP expression
    (22) binary_expression -> . expression GREATER_EQUAL_OP expression
    (23) binary_expression -> . expression EQUAL_OP expression
    (24) binary_expression -> . expression DIFFERENT_OP expression
    (25) binary_expression -> . expression LOGICAL_OP_AND expression
    (26) binary_expression -> . expression LOGICAL_OP_OR expression
    (27) unitary_expression -> . MINUS_OP expression
    (28) unitary_expression -> . LOGICAL_OP_NOT expression
    (29) primary_expression -> . LPAREN expression RPAREN
    (30) primary_expression -> . term
    (31) term -> . NUMBER_INTEGER
    (32) term -> . NUMBER_FLOAT
    (33) term -> . VARIABLE
    (34) term -> . TRUE
    (35) term -> . FALSE
    (36) term -> . NULL
    (37) term -> . TEXT_STRING
    (38) term -> . TEXT_CHAR

    END_LINE        reduce using rule 53 (loop -> LOOP2 LPAREN assignment SEPARATION expression SEPARATION assignment RPAREN STRUCTURE_BODY statement_list .)
    VARIABLE        shift and go to state 15
    TYPE_BOOLEAN    shift and go to state 16
    TYPE_STRING     shift and go to state 17
    TYPE_CHAR       shift and go to state 18
    TYPE_INTEGER    shift and go to state 19
    TYPE_FLOAT      shift and go to state 20
    CONDITIONAL1    shift and go to state 21
    LOOP1           shift and go to state 23
    LOOP2           shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    COMMENT         shift and go to state 27
    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    assignment                     shift and go to state 5
    expression                     shift and go to state 4
    statement                      shift and go to state 38
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    return_statement               shift and go to state 9
    break_statement                shift and go to state 10
    comment                        shift and go to state 11
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30
