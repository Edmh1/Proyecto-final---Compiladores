
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftLOGICAL_OP_ORleftLOGICAL_OP_ANDrightLOGICAL_OP_NOTleftLESS_OPLESS_EQUAL_OPGREATER_OPGREATER_EQUAL_OPEQUAL_OPDIFFERENT_OPleftPLUS_OPMINUS_OPleftMUL_OPDIV_OPnonassocLPARENRPARENASSIGNMENT_OP BREAK COMMENT CONDITIONAL1 CONDITIONAL2 DIFFERENT_OP DIV_OP END_LINE EQUAL_OP FALSE FUNCTION_DECLARATION GREATER_EQUAL_OP GREATER_OP LESS_EQUAL_OP LESS_OP LOGICAL_OP_AND LOGICAL_OP_NOT LOGICAL_OP_OR LOOP1 LOOP2 LPAREN MINUS_OP MUL_OP NULL NUMBER_FLOAT NUMBER_INTEGER PLUS_OP RETURN RPAREN SEPARATION STRUCTURE_BODY TEXT_CHAR TEXT_STRING TRUE TYPE_BOOLEAN TYPE_CHAR TYPE_FLOAT TYPE_INTEGER TYPE_STRING VARIABLEprogram : statement_liststatement_list : statement_list statement\n                      | statementstatement : expression END_LINE\n                 | assignment END_LINE\n                 | declaration END_LINE\n                 | conditional END_LINE\n                 | loop END_LINE\n                 | function_declaration END_LINE\n                 | return_statement END_LINE\n                 | break_statement END_LINE\n                 | commentexpression : binary_expression\n                  | unitary_expression\n                  | primary_expressionbinary_expression : primary_expression PLUS_OP primary_expression\n                         | primary_expression MINUS_OP primary_expression\n                         | primary_expression MUL_OP primary_expression\n                         | primary_expression DIV_OP primary_expressionunitary_expression : MINUS_OP primary_expressionprimary_expression : LPAREN expression RPAREN\n                          | termterm : NUMBER_INTEGER\n            | NUMBER_FLOAT\n            | VARIABLE\n            | TRUE\n            | FALSE\n            | NULL\n            | TEXT_STRING\n            | TEXT_CHARassignment : VARIABLE ASSIGNMENT_OP expressiondeclaration : TYPE_BOOLEAN VARIABLE \n                   | TYPE_STRING VARIABLE\n                   | TYPE_CHAR VARIABLE\n                   | TYPE_INTEGER VARIABLE\n                   | TYPE_FLOAT VARIABLE\n                   | TYPE_BOOLEAN assignment\n                   | TYPE_STRING assignment\n                   | TYPE_CHAR assignment\n                   | TYPE_INTEGER assignment\n                   | TYPE_FLOAT assignmentconditional : CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list\n                   | CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_listloop : LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list\n            | LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_listfunction_declaration : FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_listreturn_statement : RETURN expression\n                        | RETURNbreak_statement : BREAKcomment : COMMENT'
    
_lr_action_items = {'VARIABLE':([0,2,3,12,17,18,19,20,21,23,26,27,29,30,39,40,41,42,43,44,45,46,47,48,49,50,51,52,63,66,67,83,85,86,88,89,90,91,92,95,97,98,99,],[16,16,-3,-12,53,55,57,59,61,65,68,65,-50,65,-2,-4,-5,-6,-7,-8,-9,-10,-11,65,65,65,65,65,65,65,65,65,16,16,16,16,16,65,16,16,16,16,16,]),'TYPE_BOOLEAN':([0,2,3,12,29,39,40,41,42,43,44,45,46,47,85,86,88,89,90,92,95,97,98,99,],[17,17,-3,-12,-50,-2,-4,-5,-6,-7,-8,-9,-10,-11,17,17,17,17,17,17,17,17,17,17,]),'TYPE_STRING':([0,2,3,12,29,39,40,41,42,43,44,45,46,47,85,86,88,89,90,92,95,97,98,99,],[18,18,-3,-12,-50,-2,-4,-5,-6,-7,-8,-9,-10,-11,18,18,18,18,18,18,18,18,18,18,]),'TYPE_CHAR':([0,2,3,12,29,39,40,41,42,43,44,45,46,47,85,86,88,89,90,92,95,97,98,99,],[19,19,-3,-12,-50,-2,-4,-5,-6,-7,-8,-9,-10,-11,19,19,19,19,19,19,19,19,19,19,]),'TYPE_INTEGER':([0,2,3,12,29,39,40,41,42,43,44,45,46,47,85,86,88,89,90,92,95,97,98,99,],[20,20,-3,-12,-50,-2,-4,-5,-6,-7,-8,-9,-10,-11,20,20,20,20,20,20,20,20,20,20,]),'TYPE_FLOAT':([0,2,3,12,29,39,40,41,42,43,44,45,46,47,85,86,88,89,90,92,95,97,98,99,],[21,21,-3,-12,-50,-2,-4,-5,-6,-7,-8,-9,-10,-11,21,21,21,21,21,21,21,21,21,21,]),'CONDITIONAL1':([0,2,3,12,29,39,40,41,42,43,44,45,46,47,85,86,88,89,90,92,95,97,98,99,],[22,22,-3,-12,-50,-2,-4,-5,-6,-7,-8,-9,-10,-11,22,22,22,22,22,22,22,22,22,22,]),'LOOP1':([0,2,3,12,29,39,40,41,42,43,44,45,46,47,85,86,88,89,90,92,95,97,98,99,],[24,24,-3,-12,-50,-2,-4,-5,-6,-7,-8,-9,-10,-11,24,24,24,24,24,24,24,24,24,24,]),'LOOP2':([0,2,3,12,29,39,40,41,42,43,44,45,46,47,85,86,88,89,90,92,95,97,98,99,],[25,25,-3,-12,-50,-2,-4,-5,-6,-7,-8,-9,-10,-11,25,25,25,25,25,25,25,25,25,25,]),'FUNCTION_DECLARATION':([0,2,3,12,29,39,40,41,42,43,44,45,46,47,85,86,88,89,90,92,95,97,98,99,],[26,26,-3,-12,-50,-2,-4,-5,-6,-7,-8,-9,-10,-11,26,26,26,26,26,26,26,26,26,26,]),'RETURN':([0,2,3,12,29,39,40,41,42,43,44,45,46,47,85,86,88,89,90,92,95,97,98,99,],[27,27,-3,-12,-50,-2,-4,-5,-6,-7,-8,-9,-10,-11,27,27,27,27,27,27,27,27,27,27,]),'BREAK':([0,2,3,12,29,39,40,41,42,43,44,45,46,47,85,86,88,89,90,92,95,97,98,99,],[28,28,-3,-12,-50,-2,-4,-5,-6,-7,-8,-9,-10,-11,28,28,28,28,28,28,28,28,28,28,]),'COMMENT':([0,2,3,12,29,39,40,41,42,43,44,45,46,47,85,86,88,89,90,92,95,97,98,99,],[29,29,-3,-12,-50,-2,-4,-5,-6,-7,-8,-9,-10,-11,29,29,29,29,29,29,29,29,29,29,]),'MINUS_OP':([0,2,3,12,15,16,23,27,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,52,63,65,66,67,77,83,85,86,88,89,90,91,92,95,97,98,99,],[30,30,-3,-12,49,-25,30,30,-50,-22,-23,-24,-26,-27,-28,-29,-30,-2,-4,-5,-6,-7,-8,-9,-10,-11,30,30,-25,30,30,-21,30,30,30,30,30,30,30,30,30,30,30,30,]),'LPAREN':([0,2,3,12,22,23,24,25,27,29,30,39,40,41,42,43,44,45,46,47,48,49,50,51,52,63,66,67,68,83,85,86,88,89,90,91,92,95,97,98,99,],[23,23,-3,-12,63,23,66,67,23,-50,23,-2,-4,-5,-6,-7,-8,-9,-10,-11,23,23,23,23,23,23,23,23,80,23,23,23,23,23,23,23,23,23,23,23,23,]),'NUMBER_INTEGER':([0,2,3,12,23,27,29,30,39,40,41,42,43,44,45,46,47,48,49,50,51,52,63,66,67,83,85,86,88,89,90,91,92,95,97,98,99,],[32,32,-3,-12,32,32,-50,32,-2,-4,-5,-6,-7,-8,-9,-10,-11,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'NUMBER_FLOAT':([0,2,3,12,23,27,29,30,39,40,41,42,43,44,45,46,47,48,49,50,51,52,63,66,67,83,85,86,88,89,90,91,92,95,97,98,99,],[33,33,-3,-12,33,33,-50,33,-2,-4,-5,-6,-7,-8,-9,-10,-11,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'TRUE':([0,2,3,12,23,27,29,30,39,40,41,42,43,44,45,46,47,48,49,50,51,52,63,66,67,83,85,86,88,89,90,91,92,95,97,98,99,],[34,34,-3,-12,34,34,-50,34,-2,-4,-5,-6,-7,-8,-9,-10,-11,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'FALSE':([0,2,3,12,23,27,29,30,39,40,41,42,43,44,45,46,47,48,49,50,51,52,63,66,67,83,85,86,88,89,90,91,92,95,97,98,99,],[35,35,-3,-12,35,35,-50,35,-2,-4,-5,-6,-7,-8,-9,-10,-11,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'NULL':([0,2,3,12,23,27,29,30,39,40,41,42,43,44,45,46,47,48,49,50,51,52,63,66,67,83,85,86,88,89,90,91,92,95,97,98,99,],[36,36,-3,-12,36,36,-50,36,-2,-4,-5,-6,-7,-8,-9,-10,-11,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'TEXT_STRING':([0,2,3,12,23,27,29,30,39,40,41,42,43,44,45,46,47,48,49,50,51,52,63,66,67,83,85,86,88,89,90,91,92,95,97,98,99,],[37,37,-3,-12,37,37,-50,37,-2,-4,-5,-6,-7,-8,-9,-10,-11,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'TEXT_CHAR':([0,2,3,12,23,27,29,30,39,40,41,42,43,44,45,46,47,48,49,50,51,52,63,66,67,83,85,86,88,89,90,91,92,95,97,98,99,],[38,38,-3,-12,38,38,-50,38,-2,-4,-5,-6,-7,-8,-9,-10,-11,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'$end':([1,2,3,12,29,39,40,41,42,43,44,45,46,47,],[0,-1,-3,-12,-50,-2,-4,-5,-6,-7,-8,-9,-10,-11,]),'CONDITIONAL2':([3,12,29,39,40,41,42,43,44,45,46,47,89,],[-3,-12,-50,-2,-4,-5,-6,-7,-8,-9,-10,-11,93,]),'END_LINE':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,54,55,56,57,58,59,60,61,62,65,69,70,71,72,73,74,75,77,89,90,92,97,99,],[-3,40,41,42,43,44,45,46,47,-12,-13,-14,-15,-25,-48,-49,-50,-22,-23,-24,-26,-27,-28,-29,-30,-2,-4,-5,-6,-7,-8,-9,-10,-11,-32,-37,-33,-38,-34,-39,-35,-40,-36,-41,-25,-47,-20,-16,-17,-18,-19,-31,-21,-42,-44,-46,-43,-45,]),'RPAREN':([13,14,15,31,32,33,34,35,36,37,38,64,65,70,71,72,73,74,76,77,78,80,94,],[-13,-14,-15,-22,-23,-24,-26,-27,-28,-29,-30,77,-25,-20,-16,-17,-18,-19,81,-21,82,84,96,]),'SEPARATION':([13,14,15,31,32,33,34,35,36,37,38,65,70,71,72,73,74,77,79,87,],[-13,-14,-15,-22,-23,-24,-26,-27,-28,-29,-30,-25,-20,-16,-17,-18,-19,-21,83,91,]),'PLUS_OP':([15,16,31,32,33,34,35,36,37,38,65,77,],[48,-25,-22,-23,-24,-26,-27,-28,-29,-30,-25,-21,]),'MUL_OP':([15,16,31,32,33,34,35,36,37,38,65,77,],[50,-25,-22,-23,-24,-26,-27,-28,-29,-30,-25,-21,]),'DIV_OP':([15,16,31,32,33,34,35,36,37,38,65,77,],[51,-25,-22,-23,-24,-26,-27,-28,-29,-30,-25,-21,]),'ASSIGNMENT_OP':([16,53,55,57,59,61,],[52,52,52,52,52,52,]),'STRUCTURE_BODY':([81,82,84,93,96,],[85,86,88,95,98,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,85,86,88,95,98,],[2,89,90,92,97,99,]),'statement':([0,2,85,86,88,89,90,92,95,97,98,99,],[3,39,3,3,3,39,39,39,3,39,3,39,]),'expression':([0,2,23,27,52,63,66,67,83,85,86,88,89,90,91,92,95,97,98,99,],[4,4,64,69,75,76,78,79,87,4,4,4,4,4,94,4,4,4,4,4,]),'assignment':([0,2,17,18,19,20,21,85,86,88,89,90,92,95,97,98,99,],[5,5,54,56,58,60,62,5,5,5,5,5,5,5,5,5,5,]),'declaration':([0,2,85,86,88,89,90,92,95,97,98,99,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'conditional':([0,2,85,86,88,89,90,92,95,97,98,99,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'loop':([0,2,85,86,88,89,90,92,95,97,98,99,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'function_declaration':([0,2,85,86,88,89,90,92,95,97,98,99,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'return_statement':([0,2,85,86,88,89,90,92,95,97,98,99,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'break_statement':([0,2,85,86,88,89,90,92,95,97,98,99,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'comment':([0,2,85,86,88,89,90,92,95,97,98,99,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'binary_expression':([0,2,23,27,52,63,66,67,83,85,86,88,89,90,91,92,95,97,98,99,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'unitary_expression':([0,2,23,27,52,63,66,67,83,85,86,88,89,90,91,92,95,97,98,99,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'primary_expression':([0,2,23,27,30,48,49,50,51,52,63,66,67,83,85,86,88,89,90,91,92,95,97,98,99,],[15,15,15,15,70,71,72,73,74,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'term':([0,2,23,27,30,48,49,50,51,52,63,66,67,83,85,86,88,89,90,91,92,95,97,98,99,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',17),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',21),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',22),
  ('statement -> expression END_LINE','statement',2,'p_statement','parser.py',29),
  ('statement -> assignment END_LINE','statement',2,'p_statement','parser.py',30),
  ('statement -> declaration END_LINE','statement',2,'p_statement','parser.py',31),
  ('statement -> conditional END_LINE','statement',2,'p_statement','parser.py',32),
  ('statement -> loop END_LINE','statement',2,'p_statement','parser.py',33),
  ('statement -> function_declaration END_LINE','statement',2,'p_statement','parser.py',34),
  ('statement -> return_statement END_LINE','statement',2,'p_statement','parser.py',35),
  ('statement -> break_statement END_LINE','statement',2,'p_statement','parser.py',36),
  ('statement -> comment','statement',1,'p_statement','parser.py',37),
  ('expression -> binary_expression','expression',1,'p_expression','parser.py',41),
  ('expression -> unitary_expression','expression',1,'p_expression','parser.py',42),
  ('expression -> primary_expression','expression',1,'p_expression','parser.py',43),
  ('binary_expression -> primary_expression PLUS_OP primary_expression','binary_expression',3,'p_binary_expression','parser.py',47),
  ('binary_expression -> primary_expression MINUS_OP primary_expression','binary_expression',3,'p_binary_expression','parser.py',48),
  ('binary_expression -> primary_expression MUL_OP primary_expression','binary_expression',3,'p_binary_expression','parser.py',49),
  ('binary_expression -> primary_expression DIV_OP primary_expression','binary_expression',3,'p_binary_expression','parser.py',50),
  ('unitary_expression -> MINUS_OP primary_expression','unitary_expression',2,'p_unitary_expression','parser.py',60),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression','parser.py',69),
  ('primary_expression -> term','primary_expression',1,'p_primary_expression','parser.py',70),
  ('term -> NUMBER_INTEGER','term',1,'p_term','parser.py',77),
  ('term -> NUMBER_FLOAT','term',1,'p_term','parser.py',78),
  ('term -> VARIABLE','term',1,'p_term','parser.py',79),
  ('term -> TRUE','term',1,'p_term','parser.py',80),
  ('term -> FALSE','term',1,'p_term','parser.py',81),
  ('term -> NULL','term',1,'p_term','parser.py',82),
  ('term -> TEXT_STRING','term',1,'p_term','parser.py',83),
  ('term -> TEXT_CHAR','term',1,'p_term','parser.py',84),
  ('assignment -> VARIABLE ASSIGNMENT_OP expression','assignment',3,'p_assignment','parser.py',91),
  ('declaration -> TYPE_BOOLEAN VARIABLE','declaration',2,'p_declaration','parser.py',99),
  ('declaration -> TYPE_STRING VARIABLE','declaration',2,'p_declaration','parser.py',100),
  ('declaration -> TYPE_CHAR VARIABLE','declaration',2,'p_declaration','parser.py',101),
  ('declaration -> TYPE_INTEGER VARIABLE','declaration',2,'p_declaration','parser.py',102),
  ('declaration -> TYPE_FLOAT VARIABLE','declaration',2,'p_declaration','parser.py',103),
  ('declaration -> TYPE_BOOLEAN assignment','declaration',2,'p_declaration','parser.py',104),
  ('declaration -> TYPE_STRING assignment','declaration',2,'p_declaration','parser.py',105),
  ('declaration -> TYPE_CHAR assignment','declaration',2,'p_declaration','parser.py',106),
  ('declaration -> TYPE_INTEGER assignment','declaration',2,'p_declaration','parser.py',107),
  ('declaration -> TYPE_FLOAT assignment','declaration',2,'p_declaration','parser.py',108),
  ('conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list','conditional',6,'p_conditional','parser.py',124),
  ('conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list','conditional',9,'p_conditional','parser.py',125),
  ('loop -> LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list','loop',6,'p_loop','parser.py',141),
  ('loop -> LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list','loop',10,'p_loop','parser.py',142),
  ('function_declaration -> FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list','function_declaration',6,'p_function_declaration','parser.py',159),
  ('return_statement -> RETURN expression','return_statement',2,'p_return_statement','parser.py',167),
  ('return_statement -> RETURN','return_statement',1,'p_return_statement','parser.py',168),
  ('break_statement -> BREAK','break_statement',1,'p_break_statement','parser.py',181),
  ('comment -> COMMENT','comment',1,'p_comment','parser.py',187),
]
