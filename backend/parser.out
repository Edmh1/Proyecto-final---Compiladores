Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DIFFERENT_OP
    EQUAL_OP
    GREATER_EQUAL_OP
    GREATER_OP
    LESS_EQUAL_OP
    LESS_OP
    LOGICAL_OP_AND
    LOGICAL_OP_NOT
    LOGICAL_OP_OR

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement_list statement
Rule 3     statement_list -> statement
Rule 4     statement -> expression END_LINE
Rule 5     statement -> assignment END_LINE
Rule 6     statement -> declaration END_LINE
Rule 7     statement -> conditional END_LINE
Rule 8     statement -> loop END_LINE
Rule 9     statement -> function_declaration END_LINE
Rule 10    statement -> return_statement END_LINE
Rule 11    statement -> break_statement END_LINE
Rule 12    statement -> comment
Rule 13    expression -> binary_expression
Rule 14    expression -> unitary_expression
Rule 15    expression -> primary_expression
Rule 16    binary_expression -> primary_expression PLUS_OP primary_expression
Rule 17    binary_expression -> primary_expression MINUS_OP primary_expression
Rule 18    binary_expression -> primary_expression MUL_OP primary_expression
Rule 19    binary_expression -> primary_expression DIV_OP primary_expression
Rule 20    unitary_expression -> MINUS_OP primary_expression
Rule 21    primary_expression -> LPAREN expression RPAREN
Rule 22    primary_expression -> term
Rule 23    term -> NUMBER_INTEGER
Rule 24    term -> NUMBER_FLOAT
Rule 25    term -> VARIABLE
Rule 26    term -> TRUE
Rule 27    term -> FALSE
Rule 28    term -> NULL
Rule 29    term -> TEXT_STRING
Rule 30    term -> TEXT_CHAR
Rule 31    assignment -> VARIABLE ASSIGNMENT_OP expression
Rule 32    declaration -> TYPE_BOOLEAN VARIABLE
Rule 33    declaration -> TYPE_STRING VARIABLE
Rule 34    declaration -> TYPE_CHAR VARIABLE
Rule 35    declaration -> TYPE_INTEGER VARIABLE
Rule 36    declaration -> TYPE_FLOAT VARIABLE
Rule 37    declaration -> TYPE_BOOLEAN assignment
Rule 38    declaration -> TYPE_STRING assignment
Rule 39    declaration -> TYPE_CHAR assignment
Rule 40    declaration -> TYPE_INTEGER assignment
Rule 41    declaration -> TYPE_FLOAT assignment
Rule 42    conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
Rule 43    conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
Rule 44    loop -> LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
Rule 45    loop -> LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
Rule 46    function_declaration -> FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list
Rule 47    return_statement -> RETURN expression
Rule 48    return_statement -> RETURN
Rule 49    break_statement -> BREAK
Rule 50    comment -> COMMENT

Terminals, with rules where they appear

ASSIGNMENT_OP        : 31
BREAK                : 49
COMMENT              : 50
CONDITIONAL1         : 42 43
CONDITIONAL2         : 43
DIFFERENT_OP         : 
DIV_OP               : 19
END_LINE             : 4 5 6 7 8 9 10 11
EQUAL_OP             : 
FALSE                : 27
FUNCTION_DECLARATION : 46
GREATER_EQUAL_OP     : 
GREATER_OP           : 
LESS_EQUAL_OP        : 
LESS_OP              : 
LOGICAL_OP_AND       : 
LOGICAL_OP_NOT       : 
LOGICAL_OP_OR        : 
LOOP1                : 44
LOOP2                : 45
LPAREN               : 21 42 43 44 45 46
MINUS_OP             : 17 20
MUL_OP               : 18
NULL                 : 28
NUMBER_FLOAT         : 24
NUMBER_INTEGER       : 23
PLUS_OP              : 16
RETURN               : 47 48
RPAREN               : 21 42 43 44 45 46
SEPARATION           : 45 45
STRUCTURE_BODY       : 42 43 43 44 45 46
TEXT_CHAR            : 30
TEXT_STRING          : 29
TRUE                 : 26
TYPE_BOOLEAN         : 32 37
TYPE_CHAR            : 34 39
TYPE_FLOAT           : 36 41
TYPE_INTEGER         : 35 40
TYPE_STRING          : 33 38
VARIABLE             : 25 31 32 33 34 35 36 46
error                : 

Nonterminals, with rules where they appear

assignment           : 5 37 38 39 40 41
binary_expression    : 13
break_statement      : 11
comment              : 12
conditional          : 7
declaration          : 6
expression           : 4 21 31 42 43 44 45 45 45 47
function_declaration : 9
loop                 : 8
primary_expression   : 15 16 16 17 17 18 18 19 19 20
program              : 0
return_statement     : 10
statement            : 2 3
statement_list       : 1 2 42 43 43 44 45 46
term                 : 22
unitary_expression   : 14

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . function_declaration END_LINE
    (10) statement -> . return_statement END_LINE
    (11) statement -> . break_statement END_LINE
    (12) statement -> . comment
    (13) expression -> . binary_expression
    (14) expression -> . unitary_expression
    (15) expression -> . primary_expression
    (31) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (32) declaration -> . TYPE_BOOLEAN VARIABLE
    (33) declaration -> . TYPE_STRING VARIABLE
    (34) declaration -> . TYPE_CHAR VARIABLE
    (35) declaration -> . TYPE_INTEGER VARIABLE
    (36) declaration -> . TYPE_FLOAT VARIABLE
    (37) declaration -> . TYPE_BOOLEAN assignment
    (38) declaration -> . TYPE_STRING assignment
    (39) declaration -> . TYPE_CHAR assignment
    (40) declaration -> . TYPE_INTEGER assignment
    (41) declaration -> . TYPE_FLOAT assignment
    (42) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (43) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (44) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (45) loop -> . LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (46) function_declaration -> . FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list
    (47) return_statement -> . RETURN expression
    (48) return_statement -> . RETURN
    (49) break_statement -> . BREAK
    (50) comment -> . COMMENT
    (16) binary_expression -> . primary_expression PLUS_OP primary_expression
    (17) binary_expression -> . primary_expression MINUS_OP primary_expression
    (18) binary_expression -> . primary_expression MUL_OP primary_expression
    (19) binary_expression -> . primary_expression DIV_OP primary_expression
    (20) unitary_expression -> . MINUS_OP primary_expression
    (21) primary_expression -> . LPAREN expression RPAREN
    (22) primary_expression -> . term
    (23) term -> . NUMBER_INTEGER
    (24) term -> . NUMBER_FLOAT
    (25) term -> . VARIABLE
    (26) term -> . TRUE
    (27) term -> . FALSE
    (28) term -> . NULL
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR

    VARIABLE        shift and go to state 16
    TYPE_BOOLEAN    shift and go to state 17
    TYPE_STRING     shift and go to state 18
    TYPE_CHAR       shift and go to state 19
    TYPE_INTEGER    shift and go to state 20
    TYPE_FLOAT      shift and go to state 21
    CONDITIONAL1    shift and go to state 22
    LOOP1           shift and go to state 24
    LOOP2           shift and go to state 25
    FUNCTION_DECLARATION shift and go to state 26
    RETURN          shift and go to state 27
    BREAK           shift and go to state 28
    COMMENT         shift and go to state 29
    MINUS_OP        shift and go to state 30
    LPAREN          shift and go to state 23
    NUMBER_INTEGER  shift and go to state 32
    NUMBER_FLOAT    shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    TEXT_STRING     shift and go to state 37
    TEXT_CHAR       shift and go to state 38

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    expression                     shift and go to state 4
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    function_declaration           shift and go to state 9
    return_statement               shift and go to state 10
    break_statement                shift and go to state 11
    comment                        shift and go to state 12
    binary_expression              shift and go to state 13
    unitary_expression             shift and go to state 14
    primary_expression             shift and go to state 15
    term                           shift and go to state 31

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . function_declaration END_LINE
    (10) statement -> . return_statement END_LINE
    (11) statement -> . break_statement END_LINE
    (12) statement -> . comment
    (13) expression -> . binary_expression
    (14) expression -> . unitary_expression
    (15) expression -> . primary_expression
    (31) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (32) declaration -> . TYPE_BOOLEAN VARIABLE
    (33) declaration -> . TYPE_STRING VARIABLE
    (34) declaration -> . TYPE_CHAR VARIABLE
    (35) declaration -> . TYPE_INTEGER VARIABLE
    (36) declaration -> . TYPE_FLOAT VARIABLE
    (37) declaration -> . TYPE_BOOLEAN assignment
    (38) declaration -> . TYPE_STRING assignment
    (39) declaration -> . TYPE_CHAR assignment
    (40) declaration -> . TYPE_INTEGER assignment
    (41) declaration -> . TYPE_FLOAT assignment
    (42) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (43) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (44) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (45) loop -> . LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (46) function_declaration -> . FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list
    (47) return_statement -> . RETURN expression
    (48) return_statement -> . RETURN
    (49) break_statement -> . BREAK
    (50) comment -> . COMMENT
    (16) binary_expression -> . primary_expression PLUS_OP primary_expression
    (17) binary_expression -> . primary_expression MINUS_OP primary_expression
    (18) binary_expression -> . primary_expression MUL_OP primary_expression
    (19) binary_expression -> . primary_expression DIV_OP primary_expression
    (20) unitary_expression -> . MINUS_OP primary_expression
    (21) primary_expression -> . LPAREN expression RPAREN
    (22) primary_expression -> . term
    (23) term -> . NUMBER_INTEGER
    (24) term -> . NUMBER_FLOAT
    (25) term -> . VARIABLE
    (26) term -> . TRUE
    (27) term -> . FALSE
    (28) term -> . NULL
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR

    $end            reduce using rule 1 (program -> statement_list .)
    VARIABLE        shift and go to state 16
    TYPE_BOOLEAN    shift and go to state 17
    TYPE_STRING     shift and go to state 18
    TYPE_CHAR       shift and go to state 19
    TYPE_INTEGER    shift and go to state 20
    TYPE_FLOAT      shift and go to state 21
    CONDITIONAL1    shift and go to state 22
    LOOP1           shift and go to state 24
    LOOP2           shift and go to state 25
    FUNCTION_DECLARATION shift and go to state 26
    RETURN          shift and go to state 27
    BREAK           shift and go to state 28
    COMMENT         shift and go to state 29
    MINUS_OP        shift and go to state 30
    LPAREN          shift and go to state 23
    NUMBER_INTEGER  shift and go to state 32
    NUMBER_FLOAT    shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    TEXT_STRING     shift and go to state 37
    TEXT_CHAR       shift and go to state 38

    statement                      shift and go to state 39
    expression                     shift and go to state 4
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    function_declaration           shift and go to state 9
    return_statement               shift and go to state 10
    break_statement                shift and go to state 11
    comment                        shift and go to state 12
    binary_expression              shift and go to state 13
    unitary_expression             shift and go to state 14
    primary_expression             shift and go to state 15
    term                           shift and go to state 31

state 3

    (3) statement_list -> statement .

    VARIABLE        reduce using rule 3 (statement_list -> statement .)
    TYPE_BOOLEAN    reduce using rule 3 (statement_list -> statement .)
    TYPE_STRING     reduce using rule 3 (statement_list -> statement .)
    TYPE_CHAR       reduce using rule 3 (statement_list -> statement .)
    TYPE_INTEGER    reduce using rule 3 (statement_list -> statement .)
    TYPE_FLOAT      reduce using rule 3 (statement_list -> statement .)
    CONDITIONAL1    reduce using rule 3 (statement_list -> statement .)
    LOOP1           reduce using rule 3 (statement_list -> statement .)
    LOOP2           reduce using rule 3 (statement_list -> statement .)
    FUNCTION_DECLARATION reduce using rule 3 (statement_list -> statement .)
    RETURN          reduce using rule 3 (statement_list -> statement .)
    BREAK           reduce using rule 3 (statement_list -> statement .)
    COMMENT         reduce using rule 3 (statement_list -> statement .)
    MINUS_OP        reduce using rule 3 (statement_list -> statement .)
    LPAREN          reduce using rule 3 (statement_list -> statement .)
    NUMBER_INTEGER  reduce using rule 3 (statement_list -> statement .)
    NUMBER_FLOAT    reduce using rule 3 (statement_list -> statement .)
    TRUE            reduce using rule 3 (statement_list -> statement .)
    FALSE           reduce using rule 3 (statement_list -> statement .)
    NULL            reduce using rule 3 (statement_list -> statement .)
    TEXT_STRING     reduce using rule 3 (statement_list -> statement .)
    TEXT_CHAR       reduce using rule 3 (statement_list -> statement .)
    $end            reduce using rule 3 (statement_list -> statement .)
    CONDITIONAL2    reduce using rule 3 (statement_list -> statement .)
    END_LINE        reduce using rule 3 (statement_list -> statement .)


state 4

    (4) statement -> expression . END_LINE

    END_LINE        shift and go to state 40


state 5

    (5) statement -> assignment . END_LINE

    END_LINE        shift and go to state 41


state 6

    (6) statement -> declaration . END_LINE

    END_LINE        shift and go to state 42


state 7

    (7) statement -> conditional . END_LINE

    END_LINE        shift and go to state 43


state 8

    (8) statement -> loop . END_LINE

    END_LINE        shift and go to state 44


state 9

    (9) statement -> function_declaration . END_LINE

    END_LINE        shift and go to state 45


state 10

    (10) statement -> return_statement . END_LINE

    END_LINE        shift and go to state 46


state 11

    (11) statement -> break_statement . END_LINE

    END_LINE        shift and go to state 47


state 12

    (12) statement -> comment .

    VARIABLE        reduce using rule 12 (statement -> comment .)
    TYPE_BOOLEAN    reduce using rule 12 (statement -> comment .)
    TYPE_STRING     reduce using rule 12 (statement -> comment .)
    TYPE_CHAR       reduce using rule 12 (statement -> comment .)
    TYPE_INTEGER    reduce using rule 12 (statement -> comment .)
    TYPE_FLOAT      reduce using rule 12 (statement -> comment .)
    CONDITIONAL1    reduce using rule 12 (statement -> comment .)
    LOOP1           reduce using rule 12 (statement -> comment .)
    LOOP2           reduce using rule 12 (statement -> comment .)
    FUNCTION_DECLARATION reduce using rule 12 (statement -> comment .)
    RETURN          reduce using rule 12 (statement -> comment .)
    BREAK           reduce using rule 12 (statement -> comment .)
    COMMENT         reduce using rule 12 (statement -> comment .)
    MINUS_OP        reduce using rule 12 (statement -> comment .)
    LPAREN          reduce using rule 12 (statement -> comment .)
    NUMBER_INTEGER  reduce using rule 12 (statement -> comment .)
    NUMBER_FLOAT    reduce using rule 12 (statement -> comment .)
    TRUE            reduce using rule 12 (statement -> comment .)
    FALSE           reduce using rule 12 (statement -> comment .)
    NULL            reduce using rule 12 (statement -> comment .)
    TEXT_STRING     reduce using rule 12 (statement -> comment .)
    TEXT_CHAR       reduce using rule 12 (statement -> comment .)
    $end            reduce using rule 12 (statement -> comment .)
    CONDITIONAL2    reduce using rule 12 (statement -> comment .)
    END_LINE        reduce using rule 12 (statement -> comment .)


state 13

    (13) expression -> binary_expression .

    END_LINE        reduce using rule 13 (expression -> binary_expression .)
    RPAREN          reduce using rule 13 (expression -> binary_expression .)
    SEPARATION      reduce using rule 13 (expression -> binary_expression .)


state 14

    (14) expression -> unitary_expression .

    END_LINE        reduce using rule 14 (expression -> unitary_expression .)
    RPAREN          reduce using rule 14 (expression -> unitary_expression .)
    SEPARATION      reduce using rule 14 (expression -> unitary_expression .)


state 15

    (15) expression -> primary_expression .
    (16) binary_expression -> primary_expression . PLUS_OP primary_expression
    (17) binary_expression -> primary_expression . MINUS_OP primary_expression
    (18) binary_expression -> primary_expression . MUL_OP primary_expression
    (19) binary_expression -> primary_expression . DIV_OP primary_expression

    END_LINE        reduce using rule 15 (expression -> primary_expression .)
    RPAREN          reduce using rule 15 (expression -> primary_expression .)
    SEPARATION      reduce using rule 15 (expression -> primary_expression .)
    PLUS_OP         shift and go to state 48
    MINUS_OP        shift and go to state 49
    MUL_OP          shift and go to state 50
    DIV_OP          shift and go to state 51


state 16

    (31) assignment -> VARIABLE . ASSIGNMENT_OP expression
    (25) term -> VARIABLE .

    ASSIGNMENT_OP   shift and go to state 52
    PLUS_OP         reduce using rule 25 (term -> VARIABLE .)
    MINUS_OP        reduce using rule 25 (term -> VARIABLE .)
    MUL_OP          reduce using rule 25 (term -> VARIABLE .)
    DIV_OP          reduce using rule 25 (term -> VARIABLE .)
    END_LINE        reduce using rule 25 (term -> VARIABLE .)


state 17

    (32) declaration -> TYPE_BOOLEAN . VARIABLE
    (37) declaration -> TYPE_BOOLEAN . assignment
    (31) assignment -> . VARIABLE ASSIGNMENT_OP expression

    VARIABLE        shift and go to state 53

    assignment                     shift and go to state 54

state 18

    (33) declaration -> TYPE_STRING . VARIABLE
    (38) declaration -> TYPE_STRING . assignment
    (31) assignment -> . VARIABLE ASSIGNMENT_OP expression

    VARIABLE        shift and go to state 55

    assignment                     shift and go to state 56

state 19

    (34) declaration -> TYPE_CHAR . VARIABLE
    (39) declaration -> TYPE_CHAR . assignment
    (31) assignment -> . VARIABLE ASSIGNMENT_OP expression

    VARIABLE        shift and go to state 57

    assignment                     shift and go to state 58

state 20

    (35) declaration -> TYPE_INTEGER . VARIABLE
    (40) declaration -> TYPE_INTEGER . assignment
    (31) assignment -> . VARIABLE ASSIGNMENT_OP expression

    VARIABLE        shift and go to state 59

    assignment                     shift and go to state 60

state 21

    (36) declaration -> TYPE_FLOAT . VARIABLE
    (41) declaration -> TYPE_FLOAT . assignment
    (31) assignment -> . VARIABLE ASSIGNMENT_OP expression

    VARIABLE        shift and go to state 61

    assignment                     shift and go to state 62

state 22

    (42) conditional -> CONDITIONAL1 . LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (43) conditional -> CONDITIONAL1 . LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list

    LPAREN          shift and go to state 63


state 23

    (21) primary_expression -> LPAREN . expression RPAREN
    (13) expression -> . binary_expression
    (14) expression -> . unitary_expression
    (15) expression -> . primary_expression
    (16) binary_expression -> . primary_expression PLUS_OP primary_expression
    (17) binary_expression -> . primary_expression MINUS_OP primary_expression
    (18) binary_expression -> . primary_expression MUL_OP primary_expression
    (19) binary_expression -> . primary_expression DIV_OP primary_expression
    (20) unitary_expression -> . MINUS_OP primary_expression
    (21) primary_expression -> . LPAREN expression RPAREN
    (22) primary_expression -> . term
    (23) term -> . NUMBER_INTEGER
    (24) term -> . NUMBER_FLOAT
    (25) term -> . VARIABLE
    (26) term -> . TRUE
    (27) term -> . FALSE
    (28) term -> . NULL
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR

    MINUS_OP        shift and go to state 30
    LPAREN          shift and go to state 23
    NUMBER_INTEGER  shift and go to state 32
    NUMBER_FLOAT    shift and go to state 33
    VARIABLE        shift and go to state 65
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    TEXT_STRING     shift and go to state 37
    TEXT_CHAR       shift and go to state 38

    expression                     shift and go to state 64
    binary_expression              shift and go to state 13
    unitary_expression             shift and go to state 14
    primary_expression             shift and go to state 15
    term                           shift and go to state 31

state 24

    (44) loop -> LOOP1 . LPAREN expression RPAREN STRUCTURE_BODY statement_list

    LPAREN          shift and go to state 66


state 25

    (45) loop -> LOOP2 . LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list

    LPAREN          shift and go to state 67


state 26

    (46) function_declaration -> FUNCTION_DECLARATION . VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list

    VARIABLE        shift and go to state 68


state 27

    (47) return_statement -> RETURN . expression
    (48) return_statement -> RETURN .
    (13) expression -> . binary_expression
    (14) expression -> . unitary_expression
    (15) expression -> . primary_expression
    (16) binary_expression -> . primary_expression PLUS_OP primary_expression
    (17) binary_expression -> . primary_expression MINUS_OP primary_expression
    (18) binary_expression -> . primary_expression MUL_OP primary_expression
    (19) binary_expression -> . primary_expression DIV_OP primary_expression
    (20) unitary_expression -> . MINUS_OP primary_expression
    (21) primary_expression -> . LPAREN expression RPAREN
    (22) primary_expression -> . term
    (23) term -> . NUMBER_INTEGER
    (24) term -> . NUMBER_FLOAT
    (25) term -> . VARIABLE
    (26) term -> . TRUE
    (27) term -> . FALSE
    (28) term -> . NULL
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR

    END_LINE        reduce using rule 48 (return_statement -> RETURN .)
    MINUS_OP        shift and go to state 30
    LPAREN          shift and go to state 23
    NUMBER_INTEGER  shift and go to state 32
    NUMBER_FLOAT    shift and go to state 33
    VARIABLE        shift and go to state 65
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    TEXT_STRING     shift and go to state 37
    TEXT_CHAR       shift and go to state 38

    expression                     shift and go to state 69
    binary_expression              shift and go to state 13
    unitary_expression             shift and go to state 14
    primary_expression             shift and go to state 15
    term                           shift and go to state 31

state 28

    (49) break_statement -> BREAK .

    END_LINE        reduce using rule 49 (break_statement -> BREAK .)


state 29

    (50) comment -> COMMENT .

    VARIABLE        reduce using rule 50 (comment -> COMMENT .)
    TYPE_BOOLEAN    reduce using rule 50 (comment -> COMMENT .)
    TYPE_STRING     reduce using rule 50 (comment -> COMMENT .)
    TYPE_CHAR       reduce using rule 50 (comment -> COMMENT .)
    TYPE_INTEGER    reduce using rule 50 (comment -> COMMENT .)
    TYPE_FLOAT      reduce using rule 50 (comment -> COMMENT .)
    CONDITIONAL1    reduce using rule 50 (comment -> COMMENT .)
    LOOP1           reduce using rule 50 (comment -> COMMENT .)
    LOOP2           reduce using rule 50 (comment -> COMMENT .)
    FUNCTION_DECLARATION reduce using rule 50 (comment -> COMMENT .)
    RETURN          reduce using rule 50 (comment -> COMMENT .)
    BREAK           reduce using rule 50 (comment -> COMMENT .)
    COMMENT         reduce using rule 50 (comment -> COMMENT .)
    MINUS_OP        reduce using rule 50 (comment -> COMMENT .)
    LPAREN          reduce using rule 50 (comment -> COMMENT .)
    NUMBER_INTEGER  reduce using rule 50 (comment -> COMMENT .)
    NUMBER_FLOAT    reduce using rule 50 (comment -> COMMENT .)
    TRUE            reduce using rule 50 (comment -> COMMENT .)
    FALSE           reduce using rule 50 (comment -> COMMENT .)
    NULL            reduce using rule 50 (comment -> COMMENT .)
    TEXT_STRING     reduce using rule 50 (comment -> COMMENT .)
    TEXT_CHAR       reduce using rule 50 (comment -> COMMENT .)
    $end            reduce using rule 50 (comment -> COMMENT .)
    CONDITIONAL2    reduce using rule 50 (comment -> COMMENT .)
    END_LINE        reduce using rule 50 (comment -> COMMENT .)


state 30

    (20) unitary_expression -> MINUS_OP . primary_expression
    (21) primary_expression -> . LPAREN expression RPAREN
    (22) primary_expression -> . term
    (23) term -> . NUMBER_INTEGER
    (24) term -> . NUMBER_FLOAT
    (25) term -> . VARIABLE
    (26) term -> . TRUE
    (27) term -> . FALSE
    (28) term -> . NULL
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR

    LPAREN          shift and go to state 23
    NUMBER_INTEGER  shift and go to state 32
    NUMBER_FLOAT    shift and go to state 33
    VARIABLE        shift and go to state 65
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    TEXT_STRING     shift and go to state 37
    TEXT_CHAR       shift and go to state 38

    primary_expression             shift and go to state 70
    term                           shift and go to state 31

state 31

    (22) primary_expression -> term .

    PLUS_OP         reduce using rule 22 (primary_expression -> term .)
    MINUS_OP        reduce using rule 22 (primary_expression -> term .)
    MUL_OP          reduce using rule 22 (primary_expression -> term .)
    DIV_OP          reduce using rule 22 (primary_expression -> term .)
    END_LINE        reduce using rule 22 (primary_expression -> term .)
    RPAREN          reduce using rule 22 (primary_expression -> term .)
    SEPARATION      reduce using rule 22 (primary_expression -> term .)


state 32

    (23) term -> NUMBER_INTEGER .

    PLUS_OP         reduce using rule 23 (term -> NUMBER_INTEGER .)
    MINUS_OP        reduce using rule 23 (term -> NUMBER_INTEGER .)
    MUL_OP          reduce using rule 23 (term -> NUMBER_INTEGER .)
    DIV_OP          reduce using rule 23 (term -> NUMBER_INTEGER .)
    END_LINE        reduce using rule 23 (term -> NUMBER_INTEGER .)
    RPAREN          reduce using rule 23 (term -> NUMBER_INTEGER .)
    SEPARATION      reduce using rule 23 (term -> NUMBER_INTEGER .)


state 33

    (24) term -> NUMBER_FLOAT .

    PLUS_OP         reduce using rule 24 (term -> NUMBER_FLOAT .)
    MINUS_OP        reduce using rule 24 (term -> NUMBER_FLOAT .)
    MUL_OP          reduce using rule 24 (term -> NUMBER_FLOAT .)
    DIV_OP          reduce using rule 24 (term -> NUMBER_FLOAT .)
    END_LINE        reduce using rule 24 (term -> NUMBER_FLOAT .)
    RPAREN          reduce using rule 24 (term -> NUMBER_FLOAT .)
    SEPARATION      reduce using rule 24 (term -> NUMBER_FLOAT .)


state 34

    (26) term -> TRUE .

    PLUS_OP         reduce using rule 26 (term -> TRUE .)
    MINUS_OP        reduce using rule 26 (term -> TRUE .)
    MUL_OP          reduce using rule 26 (term -> TRUE .)
    DIV_OP          reduce using rule 26 (term -> TRUE .)
    END_LINE        reduce using rule 26 (term -> TRUE .)
    RPAREN          reduce using rule 26 (term -> TRUE .)
    SEPARATION      reduce using rule 26 (term -> TRUE .)


state 35

    (27) term -> FALSE .

    PLUS_OP         reduce using rule 27 (term -> FALSE .)
    MINUS_OP        reduce using rule 27 (term -> FALSE .)
    MUL_OP          reduce using rule 27 (term -> FALSE .)
    DIV_OP          reduce using rule 27 (term -> FALSE .)
    END_LINE        reduce using rule 27 (term -> FALSE .)
    RPAREN          reduce using rule 27 (term -> FALSE .)
    SEPARATION      reduce using rule 27 (term -> FALSE .)


state 36

    (28) term -> NULL .

    PLUS_OP         reduce using rule 28 (term -> NULL .)
    MINUS_OP        reduce using rule 28 (term -> NULL .)
    MUL_OP          reduce using rule 28 (term -> NULL .)
    DIV_OP          reduce using rule 28 (term -> NULL .)
    END_LINE        reduce using rule 28 (term -> NULL .)
    RPAREN          reduce using rule 28 (term -> NULL .)
    SEPARATION      reduce using rule 28 (term -> NULL .)


state 37

    (29) term -> TEXT_STRING .

    PLUS_OP         reduce using rule 29 (term -> TEXT_STRING .)
    MINUS_OP        reduce using rule 29 (term -> TEXT_STRING .)
    MUL_OP          reduce using rule 29 (term -> TEXT_STRING .)
    DIV_OP          reduce using rule 29 (term -> TEXT_STRING .)
    END_LINE        reduce using rule 29 (term -> TEXT_STRING .)
    RPAREN          reduce using rule 29 (term -> TEXT_STRING .)
    SEPARATION      reduce using rule 29 (term -> TEXT_STRING .)


state 38

    (30) term -> TEXT_CHAR .

    PLUS_OP         reduce using rule 30 (term -> TEXT_CHAR .)
    MINUS_OP        reduce using rule 30 (term -> TEXT_CHAR .)
    MUL_OP          reduce using rule 30 (term -> TEXT_CHAR .)
    DIV_OP          reduce using rule 30 (term -> TEXT_CHAR .)
    END_LINE        reduce using rule 30 (term -> TEXT_CHAR .)
    RPAREN          reduce using rule 30 (term -> TEXT_CHAR .)
    SEPARATION      reduce using rule 30 (term -> TEXT_CHAR .)


state 39

    (2) statement_list -> statement_list statement .

    VARIABLE        reduce using rule 2 (statement_list -> statement_list statement .)
    TYPE_BOOLEAN    reduce using rule 2 (statement_list -> statement_list statement .)
    TYPE_STRING     reduce using rule 2 (statement_list -> statement_list statement .)
    TYPE_CHAR       reduce using rule 2 (statement_list -> statement_list statement .)
    TYPE_INTEGER    reduce using rule 2 (statement_list -> statement_list statement .)
    TYPE_FLOAT      reduce using rule 2 (statement_list -> statement_list statement .)
    CONDITIONAL1    reduce using rule 2 (statement_list -> statement_list statement .)
    LOOP1           reduce using rule 2 (statement_list -> statement_list statement .)
    LOOP2           reduce using rule 2 (statement_list -> statement_list statement .)
    FUNCTION_DECLARATION reduce using rule 2 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 2 (statement_list -> statement_list statement .)
    BREAK           reduce using rule 2 (statement_list -> statement_list statement .)
    COMMENT         reduce using rule 2 (statement_list -> statement_list statement .)
    MINUS_OP        reduce using rule 2 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 2 (statement_list -> statement_list statement .)
    NUMBER_INTEGER  reduce using rule 2 (statement_list -> statement_list statement .)
    NUMBER_FLOAT    reduce using rule 2 (statement_list -> statement_list statement .)
    TRUE            reduce using rule 2 (statement_list -> statement_list statement .)
    FALSE           reduce using rule 2 (statement_list -> statement_list statement .)
    NULL            reduce using rule 2 (statement_list -> statement_list statement .)
    TEXT_STRING     reduce using rule 2 (statement_list -> statement_list statement .)
    TEXT_CHAR       reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)
    CONDITIONAL2    reduce using rule 2 (statement_list -> statement_list statement .)
    END_LINE        reduce using rule 2 (statement_list -> statement_list statement .)


state 40

    (4) statement -> expression END_LINE .

    VARIABLE        reduce using rule 4 (statement -> expression END_LINE .)
    TYPE_BOOLEAN    reduce using rule 4 (statement -> expression END_LINE .)
    TYPE_STRING     reduce using rule 4 (statement -> expression END_LINE .)
    TYPE_CHAR       reduce using rule 4 (statement -> expression END_LINE .)
    TYPE_INTEGER    reduce using rule 4 (statement -> expression END_LINE .)
    TYPE_FLOAT      reduce using rule 4 (statement -> expression END_LINE .)
    CONDITIONAL1    reduce using rule 4 (statement -> expression END_LINE .)
    LOOP1           reduce using rule 4 (statement -> expression END_LINE .)
    LOOP2           reduce using rule 4 (statement -> expression END_LINE .)
    FUNCTION_DECLARATION reduce using rule 4 (statement -> expression END_LINE .)
    RETURN          reduce using rule 4 (statement -> expression END_LINE .)
    BREAK           reduce using rule 4 (statement -> expression END_LINE .)
    COMMENT         reduce using rule 4 (statement -> expression END_LINE .)
    MINUS_OP        reduce using rule 4 (statement -> expression END_LINE .)
    LPAREN          reduce using rule 4 (statement -> expression END_LINE .)
    NUMBER_INTEGER  reduce using rule 4 (statement -> expression END_LINE .)
    NUMBER_FLOAT    reduce using rule 4 (statement -> expression END_LINE .)
    TRUE            reduce using rule 4 (statement -> expression END_LINE .)
    FALSE           reduce using rule 4 (statement -> expression END_LINE .)
    NULL            reduce using rule 4 (statement -> expression END_LINE .)
    TEXT_STRING     reduce using rule 4 (statement -> expression END_LINE .)
    TEXT_CHAR       reduce using rule 4 (statement -> expression END_LINE .)
    $end            reduce using rule 4 (statement -> expression END_LINE .)
    CONDITIONAL2    reduce using rule 4 (statement -> expression END_LINE .)
    END_LINE        reduce using rule 4 (statement -> expression END_LINE .)


state 41

    (5) statement -> assignment END_LINE .

    VARIABLE        reduce using rule 5 (statement -> assignment END_LINE .)
    TYPE_BOOLEAN    reduce using rule 5 (statement -> assignment END_LINE .)
    TYPE_STRING     reduce using rule 5 (statement -> assignment END_LINE .)
    TYPE_CHAR       reduce using rule 5 (statement -> assignment END_LINE .)
    TYPE_INTEGER    reduce using rule 5 (statement -> assignment END_LINE .)
    TYPE_FLOAT      reduce using rule 5 (statement -> assignment END_LINE .)
    CONDITIONAL1    reduce using rule 5 (statement -> assignment END_LINE .)
    LOOP1           reduce using rule 5 (statement -> assignment END_LINE .)
    LOOP2           reduce using rule 5 (statement -> assignment END_LINE .)
    FUNCTION_DECLARATION reduce using rule 5 (statement -> assignment END_LINE .)
    RETURN          reduce using rule 5 (statement -> assignment END_LINE .)
    BREAK           reduce using rule 5 (statement -> assignment END_LINE .)
    COMMENT         reduce using rule 5 (statement -> assignment END_LINE .)
    MINUS_OP        reduce using rule 5 (statement -> assignment END_LINE .)
    LPAREN          reduce using rule 5 (statement -> assignment END_LINE .)
    NUMBER_INTEGER  reduce using rule 5 (statement -> assignment END_LINE .)
    NUMBER_FLOAT    reduce using rule 5 (statement -> assignment END_LINE .)
    TRUE            reduce using rule 5 (statement -> assignment END_LINE .)
    FALSE           reduce using rule 5 (statement -> assignment END_LINE .)
    NULL            reduce using rule 5 (statement -> assignment END_LINE .)
    TEXT_STRING     reduce using rule 5 (statement -> assignment END_LINE .)
    TEXT_CHAR       reduce using rule 5 (statement -> assignment END_LINE .)
    $end            reduce using rule 5 (statement -> assignment END_LINE .)
    CONDITIONAL2    reduce using rule 5 (statement -> assignment END_LINE .)
    END_LINE        reduce using rule 5 (statement -> assignment END_LINE .)


state 42

    (6) statement -> declaration END_LINE .

    VARIABLE        reduce using rule 6 (statement -> declaration END_LINE .)
    TYPE_BOOLEAN    reduce using rule 6 (statement -> declaration END_LINE .)
    TYPE_STRING     reduce using rule 6 (statement -> declaration END_LINE .)
    TYPE_CHAR       reduce using rule 6 (statement -> declaration END_LINE .)
    TYPE_INTEGER    reduce using rule 6 (statement -> declaration END_LINE .)
    TYPE_FLOAT      reduce using rule 6 (statement -> declaration END_LINE .)
    CONDITIONAL1    reduce using rule 6 (statement -> declaration END_LINE .)
    LOOP1           reduce using rule 6 (statement -> declaration END_LINE .)
    LOOP2           reduce using rule 6 (statement -> declaration END_LINE .)
    FUNCTION_DECLARATION reduce using rule 6 (statement -> declaration END_LINE .)
    RETURN          reduce using rule 6 (statement -> declaration END_LINE .)
    BREAK           reduce using rule 6 (statement -> declaration END_LINE .)
    COMMENT         reduce using rule 6 (statement -> declaration END_LINE .)
    MINUS_OP        reduce using rule 6 (statement -> declaration END_LINE .)
    LPAREN          reduce using rule 6 (statement -> declaration END_LINE .)
    NUMBER_INTEGER  reduce using rule 6 (statement -> declaration END_LINE .)
    NUMBER_FLOAT    reduce using rule 6 (statement -> declaration END_LINE .)
    TRUE            reduce using rule 6 (statement -> declaration END_LINE .)
    FALSE           reduce using rule 6 (statement -> declaration END_LINE .)
    NULL            reduce using rule 6 (statement -> declaration END_LINE .)
    TEXT_STRING     reduce using rule 6 (statement -> declaration END_LINE .)
    TEXT_CHAR       reduce using rule 6 (statement -> declaration END_LINE .)
    $end            reduce using rule 6 (statement -> declaration END_LINE .)
    CONDITIONAL2    reduce using rule 6 (statement -> declaration END_LINE .)
    END_LINE        reduce using rule 6 (statement -> declaration END_LINE .)


state 43

    (7) statement -> conditional END_LINE .

    VARIABLE        reduce using rule 7 (statement -> conditional END_LINE .)
    TYPE_BOOLEAN    reduce using rule 7 (statement -> conditional END_LINE .)
    TYPE_STRING     reduce using rule 7 (statement -> conditional END_LINE .)
    TYPE_CHAR       reduce using rule 7 (statement -> conditional END_LINE .)
    TYPE_INTEGER    reduce using rule 7 (statement -> conditional END_LINE .)
    TYPE_FLOAT      reduce using rule 7 (statement -> conditional END_LINE .)
    CONDITIONAL1    reduce using rule 7 (statement -> conditional END_LINE .)
    LOOP1           reduce using rule 7 (statement -> conditional END_LINE .)
    LOOP2           reduce using rule 7 (statement -> conditional END_LINE .)
    FUNCTION_DECLARATION reduce using rule 7 (statement -> conditional END_LINE .)
    RETURN          reduce using rule 7 (statement -> conditional END_LINE .)
    BREAK           reduce using rule 7 (statement -> conditional END_LINE .)
    COMMENT         reduce using rule 7 (statement -> conditional END_LINE .)
    MINUS_OP        reduce using rule 7 (statement -> conditional END_LINE .)
    LPAREN          reduce using rule 7 (statement -> conditional END_LINE .)
    NUMBER_INTEGER  reduce using rule 7 (statement -> conditional END_LINE .)
    NUMBER_FLOAT    reduce using rule 7 (statement -> conditional END_LINE .)
    TRUE            reduce using rule 7 (statement -> conditional END_LINE .)
    FALSE           reduce using rule 7 (statement -> conditional END_LINE .)
    NULL            reduce using rule 7 (statement -> conditional END_LINE .)
    TEXT_STRING     reduce using rule 7 (statement -> conditional END_LINE .)
    TEXT_CHAR       reduce using rule 7 (statement -> conditional END_LINE .)
    $end            reduce using rule 7 (statement -> conditional END_LINE .)
    CONDITIONAL2    reduce using rule 7 (statement -> conditional END_LINE .)
    END_LINE        reduce using rule 7 (statement -> conditional END_LINE .)


state 44

    (8) statement -> loop END_LINE .

    VARIABLE        reduce using rule 8 (statement -> loop END_LINE .)
    TYPE_BOOLEAN    reduce using rule 8 (statement -> loop END_LINE .)
    TYPE_STRING     reduce using rule 8 (statement -> loop END_LINE .)
    TYPE_CHAR       reduce using rule 8 (statement -> loop END_LINE .)
    TYPE_INTEGER    reduce using rule 8 (statement -> loop END_LINE .)
    TYPE_FLOAT      reduce using rule 8 (statement -> loop END_LINE .)
    CONDITIONAL1    reduce using rule 8 (statement -> loop END_LINE .)
    LOOP1           reduce using rule 8 (statement -> loop END_LINE .)
    LOOP2           reduce using rule 8 (statement -> loop END_LINE .)
    FUNCTION_DECLARATION reduce using rule 8 (statement -> loop END_LINE .)
    RETURN          reduce using rule 8 (statement -> loop END_LINE .)
    BREAK           reduce using rule 8 (statement -> loop END_LINE .)
    COMMENT         reduce using rule 8 (statement -> loop END_LINE .)
    MINUS_OP        reduce using rule 8 (statement -> loop END_LINE .)
    LPAREN          reduce using rule 8 (statement -> loop END_LINE .)
    NUMBER_INTEGER  reduce using rule 8 (statement -> loop END_LINE .)
    NUMBER_FLOAT    reduce using rule 8 (statement -> loop END_LINE .)
    TRUE            reduce using rule 8 (statement -> loop END_LINE .)
    FALSE           reduce using rule 8 (statement -> loop END_LINE .)
    NULL            reduce using rule 8 (statement -> loop END_LINE .)
    TEXT_STRING     reduce using rule 8 (statement -> loop END_LINE .)
    TEXT_CHAR       reduce using rule 8 (statement -> loop END_LINE .)
    $end            reduce using rule 8 (statement -> loop END_LINE .)
    CONDITIONAL2    reduce using rule 8 (statement -> loop END_LINE .)
    END_LINE        reduce using rule 8 (statement -> loop END_LINE .)


state 45

    (9) statement -> function_declaration END_LINE .

    VARIABLE        reduce using rule 9 (statement -> function_declaration END_LINE .)
    TYPE_BOOLEAN    reduce using rule 9 (statement -> function_declaration END_LINE .)
    TYPE_STRING     reduce using rule 9 (statement -> function_declaration END_LINE .)
    TYPE_CHAR       reduce using rule 9 (statement -> function_declaration END_LINE .)
    TYPE_INTEGER    reduce using rule 9 (statement -> function_declaration END_LINE .)
    TYPE_FLOAT      reduce using rule 9 (statement -> function_declaration END_LINE .)
    CONDITIONAL1    reduce using rule 9 (statement -> function_declaration END_LINE .)
    LOOP1           reduce using rule 9 (statement -> function_declaration END_LINE .)
    LOOP2           reduce using rule 9 (statement -> function_declaration END_LINE .)
    FUNCTION_DECLARATION reduce using rule 9 (statement -> function_declaration END_LINE .)
    RETURN          reduce using rule 9 (statement -> function_declaration END_LINE .)
    BREAK           reduce using rule 9 (statement -> function_declaration END_LINE .)
    COMMENT         reduce using rule 9 (statement -> function_declaration END_LINE .)
    MINUS_OP        reduce using rule 9 (statement -> function_declaration END_LINE .)
    LPAREN          reduce using rule 9 (statement -> function_declaration END_LINE .)
    NUMBER_INTEGER  reduce using rule 9 (statement -> function_declaration END_LINE .)
    NUMBER_FLOAT    reduce using rule 9 (statement -> function_declaration END_LINE .)
    TRUE            reduce using rule 9 (statement -> function_declaration END_LINE .)
    FALSE           reduce using rule 9 (statement -> function_declaration END_LINE .)
    NULL            reduce using rule 9 (statement -> function_declaration END_LINE .)
    TEXT_STRING     reduce using rule 9 (statement -> function_declaration END_LINE .)
    TEXT_CHAR       reduce using rule 9 (statement -> function_declaration END_LINE .)
    $end            reduce using rule 9 (statement -> function_declaration END_LINE .)
    CONDITIONAL2    reduce using rule 9 (statement -> function_declaration END_LINE .)
    END_LINE        reduce using rule 9 (statement -> function_declaration END_LINE .)


state 46

    (10) statement -> return_statement END_LINE .

    VARIABLE        reduce using rule 10 (statement -> return_statement END_LINE .)
    TYPE_BOOLEAN    reduce using rule 10 (statement -> return_statement END_LINE .)
    TYPE_STRING     reduce using rule 10 (statement -> return_statement END_LINE .)
    TYPE_CHAR       reduce using rule 10 (statement -> return_statement END_LINE .)
    TYPE_INTEGER    reduce using rule 10 (statement -> return_statement END_LINE .)
    TYPE_FLOAT      reduce using rule 10 (statement -> return_statement END_LINE .)
    CONDITIONAL1    reduce using rule 10 (statement -> return_statement END_LINE .)
    LOOP1           reduce using rule 10 (statement -> return_statement END_LINE .)
    LOOP2           reduce using rule 10 (statement -> return_statement END_LINE .)
    FUNCTION_DECLARATION reduce using rule 10 (statement -> return_statement END_LINE .)
    RETURN          reduce using rule 10 (statement -> return_statement END_LINE .)
    BREAK           reduce using rule 10 (statement -> return_statement END_LINE .)
    COMMENT         reduce using rule 10 (statement -> return_statement END_LINE .)
    MINUS_OP        reduce using rule 10 (statement -> return_statement END_LINE .)
    LPAREN          reduce using rule 10 (statement -> return_statement END_LINE .)
    NUMBER_INTEGER  reduce using rule 10 (statement -> return_statement END_LINE .)
    NUMBER_FLOAT    reduce using rule 10 (statement -> return_statement END_LINE .)
    TRUE            reduce using rule 10 (statement -> return_statement END_LINE .)
    FALSE           reduce using rule 10 (statement -> return_statement END_LINE .)
    NULL            reduce using rule 10 (statement -> return_statement END_LINE .)
    TEXT_STRING     reduce using rule 10 (statement -> return_statement END_LINE .)
    TEXT_CHAR       reduce using rule 10 (statement -> return_statement END_LINE .)
    $end            reduce using rule 10 (statement -> return_statement END_LINE .)
    CONDITIONAL2    reduce using rule 10 (statement -> return_statement END_LINE .)
    END_LINE        reduce using rule 10 (statement -> return_statement END_LINE .)


state 47

    (11) statement -> break_statement END_LINE .

    VARIABLE        reduce using rule 11 (statement -> break_statement END_LINE .)
    TYPE_BOOLEAN    reduce using rule 11 (statement -> break_statement END_LINE .)
    TYPE_STRING     reduce using rule 11 (statement -> break_statement END_LINE .)
    TYPE_CHAR       reduce using rule 11 (statement -> break_statement END_LINE .)
    TYPE_INTEGER    reduce using rule 11 (statement -> break_statement END_LINE .)
    TYPE_FLOAT      reduce using rule 11 (statement -> break_statement END_LINE .)
    CONDITIONAL1    reduce using rule 11 (statement -> break_statement END_LINE .)
    LOOP1           reduce using rule 11 (statement -> break_statement END_LINE .)
    LOOP2           reduce using rule 11 (statement -> break_statement END_LINE .)
    FUNCTION_DECLARATION reduce using rule 11 (statement -> break_statement END_LINE .)
    RETURN          reduce using rule 11 (statement -> break_statement END_LINE .)
    BREAK           reduce using rule 11 (statement -> break_statement END_LINE .)
    COMMENT         reduce using rule 11 (statement -> break_statement END_LINE .)
    MINUS_OP        reduce using rule 11 (statement -> break_statement END_LINE .)
    LPAREN          reduce using rule 11 (statement -> break_statement END_LINE .)
    NUMBER_INTEGER  reduce using rule 11 (statement -> break_statement END_LINE .)
    NUMBER_FLOAT    reduce using rule 11 (statement -> break_statement END_LINE .)
    TRUE            reduce using rule 11 (statement -> break_statement END_LINE .)
    FALSE           reduce using rule 11 (statement -> break_statement END_LINE .)
    NULL            reduce using rule 11 (statement -> break_statement END_LINE .)
    TEXT_STRING     reduce using rule 11 (statement -> break_statement END_LINE .)
    TEXT_CHAR       reduce using rule 11 (statement -> break_statement END_LINE .)
    $end            reduce using rule 11 (statement -> break_statement END_LINE .)
    CONDITIONAL2    reduce using rule 11 (statement -> break_statement END_LINE .)
    END_LINE        reduce using rule 11 (statement -> break_statement END_LINE .)


state 48

    (16) binary_expression -> primary_expression PLUS_OP . primary_expression
    (21) primary_expression -> . LPAREN expression RPAREN
    (22) primary_expression -> . term
    (23) term -> . NUMBER_INTEGER
    (24) term -> . NUMBER_FLOAT
    (25) term -> . VARIABLE
    (26) term -> . TRUE
    (27) term -> . FALSE
    (28) term -> . NULL
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR

    LPAREN          shift and go to state 23
    NUMBER_INTEGER  shift and go to state 32
    NUMBER_FLOAT    shift and go to state 33
    VARIABLE        shift and go to state 65
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    TEXT_STRING     shift and go to state 37
    TEXT_CHAR       shift and go to state 38

    primary_expression             shift and go to state 71
    term                           shift and go to state 31

state 49

    (17) binary_expression -> primary_expression MINUS_OP . primary_expression
    (21) primary_expression -> . LPAREN expression RPAREN
    (22) primary_expression -> . term
    (23) term -> . NUMBER_INTEGER
    (24) term -> . NUMBER_FLOAT
    (25) term -> . VARIABLE
    (26) term -> . TRUE
    (27) term -> . FALSE
    (28) term -> . NULL
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR

    LPAREN          shift and go to state 23
    NUMBER_INTEGER  shift and go to state 32
    NUMBER_FLOAT    shift and go to state 33
    VARIABLE        shift and go to state 65
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    TEXT_STRING     shift and go to state 37
    TEXT_CHAR       shift and go to state 38

    primary_expression             shift and go to state 72
    term                           shift and go to state 31

state 50

    (18) binary_expression -> primary_expression MUL_OP . primary_expression
    (21) primary_expression -> . LPAREN expression RPAREN
    (22) primary_expression -> . term
    (23) term -> . NUMBER_INTEGER
    (24) term -> . NUMBER_FLOAT
    (25) term -> . VARIABLE
    (26) term -> . TRUE
    (27) term -> . FALSE
    (28) term -> . NULL
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR

    LPAREN          shift and go to state 23
    NUMBER_INTEGER  shift and go to state 32
    NUMBER_FLOAT    shift and go to state 33
    VARIABLE        shift and go to state 65
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    TEXT_STRING     shift and go to state 37
    TEXT_CHAR       shift and go to state 38

    primary_expression             shift and go to state 73
    term                           shift and go to state 31

state 51

    (19) binary_expression -> primary_expression DIV_OP . primary_expression
    (21) primary_expression -> . LPAREN expression RPAREN
    (22) primary_expression -> . term
    (23) term -> . NUMBER_INTEGER
    (24) term -> . NUMBER_FLOAT
    (25) term -> . VARIABLE
    (26) term -> . TRUE
    (27) term -> . FALSE
    (28) term -> . NULL
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR

    LPAREN          shift and go to state 23
    NUMBER_INTEGER  shift and go to state 32
    NUMBER_FLOAT    shift and go to state 33
    VARIABLE        shift and go to state 65
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    TEXT_STRING     shift and go to state 37
    TEXT_CHAR       shift and go to state 38

    primary_expression             shift and go to state 74
    term                           shift and go to state 31

state 52

    (31) assignment -> VARIABLE ASSIGNMENT_OP . expression
    (13) expression -> . binary_expression
    (14) expression -> . unitary_expression
    (15) expression -> . primary_expression
    (16) binary_expression -> . primary_expression PLUS_OP primary_expression
    (17) binary_expression -> . primary_expression MINUS_OP primary_expression
    (18) binary_expression -> . primary_expression MUL_OP primary_expression
    (19) binary_expression -> . primary_expression DIV_OP primary_expression
    (20) unitary_expression -> . MINUS_OP primary_expression
    (21) primary_expression -> . LPAREN expression RPAREN
    (22) primary_expression -> . term
    (23) term -> . NUMBER_INTEGER
    (24) term -> . NUMBER_FLOAT
    (25) term -> . VARIABLE
    (26) term -> . TRUE
    (27) term -> . FALSE
    (28) term -> . NULL
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR

    MINUS_OP        shift and go to state 30
    LPAREN          shift and go to state 23
    NUMBER_INTEGER  shift and go to state 32
    NUMBER_FLOAT    shift and go to state 33
    VARIABLE        shift and go to state 65
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    TEXT_STRING     shift and go to state 37
    TEXT_CHAR       shift and go to state 38

    expression                     shift and go to state 75
    binary_expression              shift and go to state 13
    unitary_expression             shift and go to state 14
    primary_expression             shift and go to state 15
    term                           shift and go to state 31

state 53

    (32) declaration -> TYPE_BOOLEAN VARIABLE .
    (31) assignment -> VARIABLE . ASSIGNMENT_OP expression

    END_LINE        reduce using rule 32 (declaration -> TYPE_BOOLEAN VARIABLE .)
    ASSIGNMENT_OP   shift and go to state 52


state 54

    (37) declaration -> TYPE_BOOLEAN assignment .

    END_LINE        reduce using rule 37 (declaration -> TYPE_BOOLEAN assignment .)


state 55

    (33) declaration -> TYPE_STRING VARIABLE .
    (31) assignment -> VARIABLE . ASSIGNMENT_OP expression

    END_LINE        reduce using rule 33 (declaration -> TYPE_STRING VARIABLE .)
    ASSIGNMENT_OP   shift and go to state 52


state 56

    (38) declaration -> TYPE_STRING assignment .

    END_LINE        reduce using rule 38 (declaration -> TYPE_STRING assignment .)


state 57

    (34) declaration -> TYPE_CHAR VARIABLE .
    (31) assignment -> VARIABLE . ASSIGNMENT_OP expression

    END_LINE        reduce using rule 34 (declaration -> TYPE_CHAR VARIABLE .)
    ASSIGNMENT_OP   shift and go to state 52


state 58

    (39) declaration -> TYPE_CHAR assignment .

    END_LINE        reduce using rule 39 (declaration -> TYPE_CHAR assignment .)


state 59

    (35) declaration -> TYPE_INTEGER VARIABLE .
    (31) assignment -> VARIABLE . ASSIGNMENT_OP expression

    END_LINE        reduce using rule 35 (declaration -> TYPE_INTEGER VARIABLE .)
    ASSIGNMENT_OP   shift and go to state 52


state 60

    (40) declaration -> TYPE_INTEGER assignment .

    END_LINE        reduce using rule 40 (declaration -> TYPE_INTEGER assignment .)


state 61

    (36) declaration -> TYPE_FLOAT VARIABLE .
    (31) assignment -> VARIABLE . ASSIGNMENT_OP expression

    END_LINE        reduce using rule 36 (declaration -> TYPE_FLOAT VARIABLE .)
    ASSIGNMENT_OP   shift and go to state 52


state 62

    (41) declaration -> TYPE_FLOAT assignment .

    END_LINE        reduce using rule 41 (declaration -> TYPE_FLOAT assignment .)


state 63

    (42) conditional -> CONDITIONAL1 LPAREN . expression RPAREN STRUCTURE_BODY statement_list
    (43) conditional -> CONDITIONAL1 LPAREN . expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (13) expression -> . binary_expression
    (14) expression -> . unitary_expression
    (15) expression -> . primary_expression
    (16) binary_expression -> . primary_expression PLUS_OP primary_expression
    (17) binary_expression -> . primary_expression MINUS_OP primary_expression
    (18) binary_expression -> . primary_expression MUL_OP primary_expression
    (19) binary_expression -> . primary_expression DIV_OP primary_expression
    (20) unitary_expression -> . MINUS_OP primary_expression
    (21) primary_expression -> . LPAREN expression RPAREN
    (22) primary_expression -> . term
    (23) term -> . NUMBER_INTEGER
    (24) term -> . NUMBER_FLOAT
    (25) term -> . VARIABLE
    (26) term -> . TRUE
    (27) term -> . FALSE
    (28) term -> . NULL
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR

    MINUS_OP        shift and go to state 30
    LPAREN          shift and go to state 23
    NUMBER_INTEGER  shift and go to state 32
    NUMBER_FLOAT    shift and go to state 33
    VARIABLE        shift and go to state 65
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    TEXT_STRING     shift and go to state 37
    TEXT_CHAR       shift and go to state 38

    expression                     shift and go to state 76
    binary_expression              shift and go to state 13
    unitary_expression             shift and go to state 14
    primary_expression             shift and go to state 15
    term                           shift and go to state 31

state 64

    (21) primary_expression -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 77


state 65

    (25) term -> VARIABLE .

    PLUS_OP         reduce using rule 25 (term -> VARIABLE .)
    MINUS_OP        reduce using rule 25 (term -> VARIABLE .)
    MUL_OP          reduce using rule 25 (term -> VARIABLE .)
    DIV_OP          reduce using rule 25 (term -> VARIABLE .)
    RPAREN          reduce using rule 25 (term -> VARIABLE .)
    END_LINE        reduce using rule 25 (term -> VARIABLE .)
    SEPARATION      reduce using rule 25 (term -> VARIABLE .)


state 66

    (44) loop -> LOOP1 LPAREN . expression RPAREN STRUCTURE_BODY statement_list
    (13) expression -> . binary_expression
    (14) expression -> . unitary_expression
    (15) expression -> . primary_expression
    (16) binary_expression -> . primary_expression PLUS_OP primary_expression
    (17) binary_expression -> . primary_expression MINUS_OP primary_expression
    (18) binary_expression -> . primary_expression MUL_OP primary_expression
    (19) binary_expression -> . primary_expression DIV_OP primary_expression
    (20) unitary_expression -> . MINUS_OP primary_expression
    (21) primary_expression -> . LPAREN expression RPAREN
    (22) primary_expression -> . term
    (23) term -> . NUMBER_INTEGER
    (24) term -> . NUMBER_FLOAT
    (25) term -> . VARIABLE
    (26) term -> . TRUE
    (27) term -> . FALSE
    (28) term -> . NULL
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR

    MINUS_OP        shift and go to state 30
    LPAREN          shift and go to state 23
    NUMBER_INTEGER  shift and go to state 32
    NUMBER_FLOAT    shift and go to state 33
    VARIABLE        shift and go to state 65
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    TEXT_STRING     shift and go to state 37
    TEXT_CHAR       shift and go to state 38

    expression                     shift and go to state 78
    binary_expression              shift and go to state 13
    unitary_expression             shift and go to state 14
    primary_expression             shift and go to state 15
    term                           shift and go to state 31

state 67

    (45) loop -> LOOP2 LPAREN . expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (13) expression -> . binary_expression
    (14) expression -> . unitary_expression
    (15) expression -> . primary_expression
    (16) binary_expression -> . primary_expression PLUS_OP primary_expression
    (17) binary_expression -> . primary_expression MINUS_OP primary_expression
    (18) binary_expression -> . primary_expression MUL_OP primary_expression
    (19) binary_expression -> . primary_expression DIV_OP primary_expression
    (20) unitary_expression -> . MINUS_OP primary_expression
    (21) primary_expression -> . LPAREN expression RPAREN
    (22) primary_expression -> . term
    (23) term -> . NUMBER_INTEGER
    (24) term -> . NUMBER_FLOAT
    (25) term -> . VARIABLE
    (26) term -> . TRUE
    (27) term -> . FALSE
    (28) term -> . NULL
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR

    MINUS_OP        shift and go to state 30
    LPAREN          shift and go to state 23
    NUMBER_INTEGER  shift and go to state 32
    NUMBER_FLOAT    shift and go to state 33
    VARIABLE        shift and go to state 65
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    TEXT_STRING     shift and go to state 37
    TEXT_CHAR       shift and go to state 38

    expression                     shift and go to state 79
    binary_expression              shift and go to state 13
    unitary_expression             shift and go to state 14
    primary_expression             shift and go to state 15
    term                           shift and go to state 31

state 68

    (46) function_declaration -> FUNCTION_DECLARATION VARIABLE . LPAREN RPAREN STRUCTURE_BODY statement_list

    LPAREN          shift and go to state 80


state 69

    (47) return_statement -> RETURN expression .

    END_LINE        reduce using rule 47 (return_statement -> RETURN expression .)


state 70

    (20) unitary_expression -> MINUS_OP primary_expression .

    END_LINE        reduce using rule 20 (unitary_expression -> MINUS_OP primary_expression .)
    RPAREN          reduce using rule 20 (unitary_expression -> MINUS_OP primary_expression .)
    SEPARATION      reduce using rule 20 (unitary_expression -> MINUS_OP primary_expression .)


state 71

    (16) binary_expression -> primary_expression PLUS_OP primary_expression .

    END_LINE        reduce using rule 16 (binary_expression -> primary_expression PLUS_OP primary_expression .)
    RPAREN          reduce using rule 16 (binary_expression -> primary_expression PLUS_OP primary_expression .)
    SEPARATION      reduce using rule 16 (binary_expression -> primary_expression PLUS_OP primary_expression .)


state 72

    (17) binary_expression -> primary_expression MINUS_OP primary_expression .

    END_LINE        reduce using rule 17 (binary_expression -> primary_expression MINUS_OP primary_expression .)
    RPAREN          reduce using rule 17 (binary_expression -> primary_expression MINUS_OP primary_expression .)
    SEPARATION      reduce using rule 17 (binary_expression -> primary_expression MINUS_OP primary_expression .)


state 73

    (18) binary_expression -> primary_expression MUL_OP primary_expression .

    END_LINE        reduce using rule 18 (binary_expression -> primary_expression MUL_OP primary_expression .)
    RPAREN          reduce using rule 18 (binary_expression -> primary_expression MUL_OP primary_expression .)
    SEPARATION      reduce using rule 18 (binary_expression -> primary_expression MUL_OP primary_expression .)


state 74

    (19) binary_expression -> primary_expression DIV_OP primary_expression .

    END_LINE        reduce using rule 19 (binary_expression -> primary_expression DIV_OP primary_expression .)
    RPAREN          reduce using rule 19 (binary_expression -> primary_expression DIV_OP primary_expression .)
    SEPARATION      reduce using rule 19 (binary_expression -> primary_expression DIV_OP primary_expression .)


state 75

    (31) assignment -> VARIABLE ASSIGNMENT_OP expression .

    END_LINE        reduce using rule 31 (assignment -> VARIABLE ASSIGNMENT_OP expression .)


state 76

    (42) conditional -> CONDITIONAL1 LPAREN expression . RPAREN STRUCTURE_BODY statement_list
    (43) conditional -> CONDITIONAL1 LPAREN expression . RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list

    RPAREN          shift and go to state 81


state 77

    (21) primary_expression -> LPAREN expression RPAREN .

    PLUS_OP         reduce using rule 21 (primary_expression -> LPAREN expression RPAREN .)
    MINUS_OP        reduce using rule 21 (primary_expression -> LPAREN expression RPAREN .)
    MUL_OP          reduce using rule 21 (primary_expression -> LPAREN expression RPAREN .)
    DIV_OP          reduce using rule 21 (primary_expression -> LPAREN expression RPAREN .)
    END_LINE        reduce using rule 21 (primary_expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 21 (primary_expression -> LPAREN expression RPAREN .)
    SEPARATION      reduce using rule 21 (primary_expression -> LPAREN expression RPAREN .)


state 78

    (44) loop -> LOOP1 LPAREN expression . RPAREN STRUCTURE_BODY statement_list

    RPAREN          shift and go to state 82


state 79

    (45) loop -> LOOP2 LPAREN expression . SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list

    SEPARATION      shift and go to state 83


state 80

    (46) function_declaration -> FUNCTION_DECLARATION VARIABLE LPAREN . RPAREN STRUCTURE_BODY statement_list

    RPAREN          shift and go to state 84


state 81

    (42) conditional -> CONDITIONAL1 LPAREN expression RPAREN . STRUCTURE_BODY statement_list
    (43) conditional -> CONDITIONAL1 LPAREN expression RPAREN . STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list

    STRUCTURE_BODY  shift and go to state 85


state 82

    (44) loop -> LOOP1 LPAREN expression RPAREN . STRUCTURE_BODY statement_list

    STRUCTURE_BODY  shift and go to state 86


state 83

    (45) loop -> LOOP2 LPAREN expression SEPARATION . expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (13) expression -> . binary_expression
    (14) expression -> . unitary_expression
    (15) expression -> . primary_expression
    (16) binary_expression -> . primary_expression PLUS_OP primary_expression
    (17) binary_expression -> . primary_expression MINUS_OP primary_expression
    (18) binary_expression -> . primary_expression MUL_OP primary_expression
    (19) binary_expression -> . primary_expression DIV_OP primary_expression
    (20) unitary_expression -> . MINUS_OP primary_expression
    (21) primary_expression -> . LPAREN expression RPAREN
    (22) primary_expression -> . term
    (23) term -> . NUMBER_INTEGER
    (24) term -> . NUMBER_FLOAT
    (25) term -> . VARIABLE
    (26) term -> . TRUE
    (27) term -> . FALSE
    (28) term -> . NULL
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR

    MINUS_OP        shift and go to state 30
    LPAREN          shift and go to state 23
    NUMBER_INTEGER  shift and go to state 32
    NUMBER_FLOAT    shift and go to state 33
    VARIABLE        shift and go to state 65
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    TEXT_STRING     shift and go to state 37
    TEXT_CHAR       shift and go to state 38

    expression                     shift and go to state 87
    binary_expression              shift and go to state 13
    unitary_expression             shift and go to state 14
    primary_expression             shift and go to state 15
    term                           shift and go to state 31

state 84

    (46) function_declaration -> FUNCTION_DECLARATION VARIABLE LPAREN RPAREN . STRUCTURE_BODY statement_list

    STRUCTURE_BODY  shift and go to state 88


state 85

    (42) conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY . statement_list
    (43) conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY . statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . function_declaration END_LINE
    (10) statement -> . return_statement END_LINE
    (11) statement -> . break_statement END_LINE
    (12) statement -> . comment
    (13) expression -> . binary_expression
    (14) expression -> . unitary_expression
    (15) expression -> . primary_expression
    (31) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (32) declaration -> . TYPE_BOOLEAN VARIABLE
    (33) declaration -> . TYPE_STRING VARIABLE
    (34) declaration -> . TYPE_CHAR VARIABLE
    (35) declaration -> . TYPE_INTEGER VARIABLE
    (36) declaration -> . TYPE_FLOAT VARIABLE
    (37) declaration -> . TYPE_BOOLEAN assignment
    (38) declaration -> . TYPE_STRING assignment
    (39) declaration -> . TYPE_CHAR assignment
    (40) declaration -> . TYPE_INTEGER assignment
    (41) declaration -> . TYPE_FLOAT assignment
    (42) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (43) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (44) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (45) loop -> . LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (46) function_declaration -> . FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list
    (47) return_statement -> . RETURN expression
    (48) return_statement -> . RETURN
    (49) break_statement -> . BREAK
    (50) comment -> . COMMENT
    (16) binary_expression -> . primary_expression PLUS_OP primary_expression
    (17) binary_expression -> . primary_expression MINUS_OP primary_expression
    (18) binary_expression -> . primary_expression MUL_OP primary_expression
    (19) binary_expression -> . primary_expression DIV_OP primary_expression
    (20) unitary_expression -> . MINUS_OP primary_expression
    (21) primary_expression -> . LPAREN expression RPAREN
    (22) primary_expression -> . term
    (23) term -> . NUMBER_INTEGER
    (24) term -> . NUMBER_FLOAT
    (25) term -> . VARIABLE
    (26) term -> . TRUE
    (27) term -> . FALSE
    (28) term -> . NULL
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR

    VARIABLE        shift and go to state 16
    TYPE_BOOLEAN    shift and go to state 17
    TYPE_STRING     shift and go to state 18
    TYPE_CHAR       shift and go to state 19
    TYPE_INTEGER    shift and go to state 20
    TYPE_FLOAT      shift and go to state 21
    CONDITIONAL1    shift and go to state 22
    LOOP1           shift and go to state 24
    LOOP2           shift and go to state 25
    FUNCTION_DECLARATION shift and go to state 26
    RETURN          shift and go to state 27
    BREAK           shift and go to state 28
    COMMENT         shift and go to state 29
    MINUS_OP        shift and go to state 30
    LPAREN          shift and go to state 23
    NUMBER_INTEGER  shift and go to state 32
    NUMBER_FLOAT    shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    TEXT_STRING     shift and go to state 37
    TEXT_CHAR       shift and go to state 38

    expression                     shift and go to state 4
    statement_list                 shift and go to state 89
    statement                      shift and go to state 3
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    function_declaration           shift and go to state 9
    return_statement               shift and go to state 10
    break_statement                shift and go to state 11
    comment                        shift and go to state 12
    binary_expression              shift and go to state 13
    unitary_expression             shift and go to state 14
    primary_expression             shift and go to state 15
    term                           shift and go to state 31

state 86

    (44) loop -> LOOP1 LPAREN expression RPAREN STRUCTURE_BODY . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . function_declaration END_LINE
    (10) statement -> . return_statement END_LINE
    (11) statement -> . break_statement END_LINE
    (12) statement -> . comment
    (13) expression -> . binary_expression
    (14) expression -> . unitary_expression
    (15) expression -> . primary_expression
    (31) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (32) declaration -> . TYPE_BOOLEAN VARIABLE
    (33) declaration -> . TYPE_STRING VARIABLE
    (34) declaration -> . TYPE_CHAR VARIABLE
    (35) declaration -> . TYPE_INTEGER VARIABLE
    (36) declaration -> . TYPE_FLOAT VARIABLE
    (37) declaration -> . TYPE_BOOLEAN assignment
    (38) declaration -> . TYPE_STRING assignment
    (39) declaration -> . TYPE_CHAR assignment
    (40) declaration -> . TYPE_INTEGER assignment
    (41) declaration -> . TYPE_FLOAT assignment
    (42) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (43) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (44) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (45) loop -> . LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (46) function_declaration -> . FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list
    (47) return_statement -> . RETURN expression
    (48) return_statement -> . RETURN
    (49) break_statement -> . BREAK
    (50) comment -> . COMMENT
    (16) binary_expression -> . primary_expression PLUS_OP primary_expression
    (17) binary_expression -> . primary_expression MINUS_OP primary_expression
    (18) binary_expression -> . primary_expression MUL_OP primary_expression
    (19) binary_expression -> . primary_expression DIV_OP primary_expression
    (20) unitary_expression -> . MINUS_OP primary_expression
    (21) primary_expression -> . LPAREN expression RPAREN
    (22) primary_expression -> . term
    (23) term -> . NUMBER_INTEGER
    (24) term -> . NUMBER_FLOAT
    (25) term -> . VARIABLE
    (26) term -> . TRUE
    (27) term -> . FALSE
    (28) term -> . NULL
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR

    VARIABLE        shift and go to state 16
    TYPE_BOOLEAN    shift and go to state 17
    TYPE_STRING     shift and go to state 18
    TYPE_CHAR       shift and go to state 19
    TYPE_INTEGER    shift and go to state 20
    TYPE_FLOAT      shift and go to state 21
    CONDITIONAL1    shift and go to state 22
    LOOP1           shift and go to state 24
    LOOP2           shift and go to state 25
    FUNCTION_DECLARATION shift and go to state 26
    RETURN          shift and go to state 27
    BREAK           shift and go to state 28
    COMMENT         shift and go to state 29
    MINUS_OP        shift and go to state 30
    LPAREN          shift and go to state 23
    NUMBER_INTEGER  shift and go to state 32
    NUMBER_FLOAT    shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    TEXT_STRING     shift and go to state 37
    TEXT_CHAR       shift and go to state 38

    expression                     shift and go to state 4
    statement_list                 shift and go to state 90
    statement                      shift and go to state 3
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    function_declaration           shift and go to state 9
    return_statement               shift and go to state 10
    break_statement                shift and go to state 11
    comment                        shift and go to state 12
    binary_expression              shift and go to state 13
    unitary_expression             shift and go to state 14
    primary_expression             shift and go to state 15
    term                           shift and go to state 31

state 87

    (45) loop -> LOOP2 LPAREN expression SEPARATION expression . SEPARATION expression RPAREN STRUCTURE_BODY statement_list

    SEPARATION      shift and go to state 91


state 88

    (46) function_declaration -> FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . function_declaration END_LINE
    (10) statement -> . return_statement END_LINE
    (11) statement -> . break_statement END_LINE
    (12) statement -> . comment
    (13) expression -> . binary_expression
    (14) expression -> . unitary_expression
    (15) expression -> . primary_expression
    (31) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (32) declaration -> . TYPE_BOOLEAN VARIABLE
    (33) declaration -> . TYPE_STRING VARIABLE
    (34) declaration -> . TYPE_CHAR VARIABLE
    (35) declaration -> . TYPE_INTEGER VARIABLE
    (36) declaration -> . TYPE_FLOAT VARIABLE
    (37) declaration -> . TYPE_BOOLEAN assignment
    (38) declaration -> . TYPE_STRING assignment
    (39) declaration -> . TYPE_CHAR assignment
    (40) declaration -> . TYPE_INTEGER assignment
    (41) declaration -> . TYPE_FLOAT assignment
    (42) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (43) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (44) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (45) loop -> . LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (46) function_declaration -> . FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list
    (47) return_statement -> . RETURN expression
    (48) return_statement -> . RETURN
    (49) break_statement -> . BREAK
    (50) comment -> . COMMENT
    (16) binary_expression -> . primary_expression PLUS_OP primary_expression
    (17) binary_expression -> . primary_expression MINUS_OP primary_expression
    (18) binary_expression -> . primary_expression MUL_OP primary_expression
    (19) binary_expression -> . primary_expression DIV_OP primary_expression
    (20) unitary_expression -> . MINUS_OP primary_expression
    (21) primary_expression -> . LPAREN expression RPAREN
    (22) primary_expression -> . term
    (23) term -> . NUMBER_INTEGER
    (24) term -> . NUMBER_FLOAT
    (25) term -> . VARIABLE
    (26) term -> . TRUE
    (27) term -> . FALSE
    (28) term -> . NULL
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR

    VARIABLE        shift and go to state 16
    TYPE_BOOLEAN    shift and go to state 17
    TYPE_STRING     shift and go to state 18
    TYPE_CHAR       shift and go to state 19
    TYPE_INTEGER    shift and go to state 20
    TYPE_FLOAT      shift and go to state 21
    CONDITIONAL1    shift and go to state 22
    LOOP1           shift and go to state 24
    LOOP2           shift and go to state 25
    FUNCTION_DECLARATION shift and go to state 26
    RETURN          shift and go to state 27
    BREAK           shift and go to state 28
    COMMENT         shift and go to state 29
    MINUS_OP        shift and go to state 30
    LPAREN          shift and go to state 23
    NUMBER_INTEGER  shift and go to state 32
    NUMBER_FLOAT    shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    TEXT_STRING     shift and go to state 37
    TEXT_CHAR       shift and go to state 38

    statement_list                 shift and go to state 92
    statement                      shift and go to state 3
    expression                     shift and go to state 4
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    function_declaration           shift and go to state 9
    return_statement               shift and go to state 10
    break_statement                shift and go to state 11
    comment                        shift and go to state 12
    binary_expression              shift and go to state 13
    unitary_expression             shift and go to state 14
    primary_expression             shift and go to state 15
    term                           shift and go to state 31

state 89

    (42) conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list .
    (43) conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list . CONDITIONAL2 STRUCTURE_BODY statement_list
    (2) statement_list -> statement_list . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . function_declaration END_LINE
    (10) statement -> . return_statement END_LINE
    (11) statement -> . break_statement END_LINE
    (12) statement -> . comment
    (13) expression -> . binary_expression
    (14) expression -> . unitary_expression
    (15) expression -> . primary_expression
    (31) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (32) declaration -> . TYPE_BOOLEAN VARIABLE
    (33) declaration -> . TYPE_STRING VARIABLE
    (34) declaration -> . TYPE_CHAR VARIABLE
    (35) declaration -> . TYPE_INTEGER VARIABLE
    (36) declaration -> . TYPE_FLOAT VARIABLE
    (37) declaration -> . TYPE_BOOLEAN assignment
    (38) declaration -> . TYPE_STRING assignment
    (39) declaration -> . TYPE_CHAR assignment
    (40) declaration -> . TYPE_INTEGER assignment
    (41) declaration -> . TYPE_FLOAT assignment
    (42) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (43) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (44) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (45) loop -> . LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (46) function_declaration -> . FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list
    (47) return_statement -> . RETURN expression
    (48) return_statement -> . RETURN
    (49) break_statement -> . BREAK
    (50) comment -> . COMMENT
    (16) binary_expression -> . primary_expression PLUS_OP primary_expression
    (17) binary_expression -> . primary_expression MINUS_OP primary_expression
    (18) binary_expression -> . primary_expression MUL_OP primary_expression
    (19) binary_expression -> . primary_expression DIV_OP primary_expression
    (20) unitary_expression -> . MINUS_OP primary_expression
    (21) primary_expression -> . LPAREN expression RPAREN
    (22) primary_expression -> . term
    (23) term -> . NUMBER_INTEGER
    (24) term -> . NUMBER_FLOAT
    (25) term -> . VARIABLE
    (26) term -> . TRUE
    (27) term -> . FALSE
    (28) term -> . NULL
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR

    END_LINE        reduce using rule 42 (conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list .)
    CONDITIONAL2    shift and go to state 93
    VARIABLE        shift and go to state 16
    TYPE_BOOLEAN    shift and go to state 17
    TYPE_STRING     shift and go to state 18
    TYPE_CHAR       shift and go to state 19
    TYPE_INTEGER    shift and go to state 20
    TYPE_FLOAT      shift and go to state 21
    CONDITIONAL1    shift and go to state 22
    LOOP1           shift and go to state 24
    LOOP2           shift and go to state 25
    FUNCTION_DECLARATION shift and go to state 26
    RETURN          shift and go to state 27
    BREAK           shift and go to state 28
    COMMENT         shift and go to state 29
    MINUS_OP        shift and go to state 30
    LPAREN          shift and go to state 23
    NUMBER_INTEGER  shift and go to state 32
    NUMBER_FLOAT    shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    TEXT_STRING     shift and go to state 37
    TEXT_CHAR       shift and go to state 38

    expression                     shift and go to state 4
    statement                      shift and go to state 39
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    function_declaration           shift and go to state 9
    return_statement               shift and go to state 10
    break_statement                shift and go to state 11
    comment                        shift and go to state 12
    binary_expression              shift and go to state 13
    unitary_expression             shift and go to state 14
    primary_expression             shift and go to state 15
    term                           shift and go to state 31

state 90

    (44) loop -> LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . function_declaration END_LINE
    (10) statement -> . return_statement END_LINE
    (11) statement -> . break_statement END_LINE
    (12) statement -> . comment
    (13) expression -> . binary_expression
    (14) expression -> . unitary_expression
    (15) expression -> . primary_expression
    (31) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (32) declaration -> . TYPE_BOOLEAN VARIABLE
    (33) declaration -> . TYPE_STRING VARIABLE
    (34) declaration -> . TYPE_CHAR VARIABLE
    (35) declaration -> . TYPE_INTEGER VARIABLE
    (36) declaration -> . TYPE_FLOAT VARIABLE
    (37) declaration -> . TYPE_BOOLEAN assignment
    (38) declaration -> . TYPE_STRING assignment
    (39) declaration -> . TYPE_CHAR assignment
    (40) declaration -> . TYPE_INTEGER assignment
    (41) declaration -> . TYPE_FLOAT assignment
    (42) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (43) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (44) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (45) loop -> . LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (46) function_declaration -> . FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list
    (47) return_statement -> . RETURN expression
    (48) return_statement -> . RETURN
    (49) break_statement -> . BREAK
    (50) comment -> . COMMENT
    (16) binary_expression -> . primary_expression PLUS_OP primary_expression
    (17) binary_expression -> . primary_expression MINUS_OP primary_expression
    (18) binary_expression -> . primary_expression MUL_OP primary_expression
    (19) binary_expression -> . primary_expression DIV_OP primary_expression
    (20) unitary_expression -> . MINUS_OP primary_expression
    (21) primary_expression -> . LPAREN expression RPAREN
    (22) primary_expression -> . term
    (23) term -> . NUMBER_INTEGER
    (24) term -> . NUMBER_FLOAT
    (25) term -> . VARIABLE
    (26) term -> . TRUE
    (27) term -> . FALSE
    (28) term -> . NULL
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR

    END_LINE        reduce using rule 44 (loop -> LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list .)
    VARIABLE        shift and go to state 16
    TYPE_BOOLEAN    shift and go to state 17
    TYPE_STRING     shift and go to state 18
    TYPE_CHAR       shift and go to state 19
    TYPE_INTEGER    shift and go to state 20
    TYPE_FLOAT      shift and go to state 21
    CONDITIONAL1    shift and go to state 22
    LOOP1           shift and go to state 24
    LOOP2           shift and go to state 25
    FUNCTION_DECLARATION shift and go to state 26
    RETURN          shift and go to state 27
    BREAK           shift and go to state 28
    COMMENT         shift and go to state 29
    MINUS_OP        shift and go to state 30
    LPAREN          shift and go to state 23
    NUMBER_INTEGER  shift and go to state 32
    NUMBER_FLOAT    shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    TEXT_STRING     shift and go to state 37
    TEXT_CHAR       shift and go to state 38

    expression                     shift and go to state 4
    statement                      shift and go to state 39
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    function_declaration           shift and go to state 9
    return_statement               shift and go to state 10
    break_statement                shift and go to state 11
    comment                        shift and go to state 12
    binary_expression              shift and go to state 13
    unitary_expression             shift and go to state 14
    primary_expression             shift and go to state 15
    term                           shift and go to state 31

state 91

    (45) loop -> LOOP2 LPAREN expression SEPARATION expression SEPARATION . expression RPAREN STRUCTURE_BODY statement_list
    (13) expression -> . binary_expression
    (14) expression -> . unitary_expression
    (15) expression -> . primary_expression
    (16) binary_expression -> . primary_expression PLUS_OP primary_expression
    (17) binary_expression -> . primary_expression MINUS_OP primary_expression
    (18) binary_expression -> . primary_expression MUL_OP primary_expression
    (19) binary_expression -> . primary_expression DIV_OP primary_expression
    (20) unitary_expression -> . MINUS_OP primary_expression
    (21) primary_expression -> . LPAREN expression RPAREN
    (22) primary_expression -> . term
    (23) term -> . NUMBER_INTEGER
    (24) term -> . NUMBER_FLOAT
    (25) term -> . VARIABLE
    (26) term -> . TRUE
    (27) term -> . FALSE
    (28) term -> . NULL
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR

    MINUS_OP        shift and go to state 30
    LPAREN          shift and go to state 23
    NUMBER_INTEGER  shift and go to state 32
    NUMBER_FLOAT    shift and go to state 33
    VARIABLE        shift and go to state 65
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    TEXT_STRING     shift and go to state 37
    TEXT_CHAR       shift and go to state 38

    expression                     shift and go to state 94
    binary_expression              shift and go to state 13
    unitary_expression             shift and go to state 14
    primary_expression             shift and go to state 15
    term                           shift and go to state 31

state 92

    (46) function_declaration -> FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . function_declaration END_LINE
    (10) statement -> . return_statement END_LINE
    (11) statement -> . break_statement END_LINE
    (12) statement -> . comment
    (13) expression -> . binary_expression
    (14) expression -> . unitary_expression
    (15) expression -> . primary_expression
    (31) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (32) declaration -> . TYPE_BOOLEAN VARIABLE
    (33) declaration -> . TYPE_STRING VARIABLE
    (34) declaration -> . TYPE_CHAR VARIABLE
    (35) declaration -> . TYPE_INTEGER VARIABLE
    (36) declaration -> . TYPE_FLOAT VARIABLE
    (37) declaration -> . TYPE_BOOLEAN assignment
    (38) declaration -> . TYPE_STRING assignment
    (39) declaration -> . TYPE_CHAR assignment
    (40) declaration -> . TYPE_INTEGER assignment
    (41) declaration -> . TYPE_FLOAT assignment
    (42) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (43) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (44) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (45) loop -> . LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (46) function_declaration -> . FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list
    (47) return_statement -> . RETURN expression
    (48) return_statement -> . RETURN
    (49) break_statement -> . BREAK
    (50) comment -> . COMMENT
    (16) binary_expression -> . primary_expression PLUS_OP primary_expression
    (17) binary_expression -> . primary_expression MINUS_OP primary_expression
    (18) binary_expression -> . primary_expression MUL_OP primary_expression
    (19) binary_expression -> . primary_expression DIV_OP primary_expression
    (20) unitary_expression -> . MINUS_OP primary_expression
    (21) primary_expression -> . LPAREN expression RPAREN
    (22) primary_expression -> . term
    (23) term -> . NUMBER_INTEGER
    (24) term -> . NUMBER_FLOAT
    (25) term -> . VARIABLE
    (26) term -> . TRUE
    (27) term -> . FALSE
    (28) term -> . NULL
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR

    END_LINE        reduce using rule 46 (function_declaration -> FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list .)
    VARIABLE        shift and go to state 16
    TYPE_BOOLEAN    shift and go to state 17
    TYPE_STRING     shift and go to state 18
    TYPE_CHAR       shift and go to state 19
    TYPE_INTEGER    shift and go to state 20
    TYPE_FLOAT      shift and go to state 21
    CONDITIONAL1    shift and go to state 22
    LOOP1           shift and go to state 24
    LOOP2           shift and go to state 25
    FUNCTION_DECLARATION shift and go to state 26
    RETURN          shift and go to state 27
    BREAK           shift and go to state 28
    COMMENT         shift and go to state 29
    MINUS_OP        shift and go to state 30
    LPAREN          shift and go to state 23
    NUMBER_INTEGER  shift and go to state 32
    NUMBER_FLOAT    shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    TEXT_STRING     shift and go to state 37
    TEXT_CHAR       shift and go to state 38

    statement                      shift and go to state 39
    expression                     shift and go to state 4
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    function_declaration           shift and go to state 9
    return_statement               shift and go to state 10
    break_statement                shift and go to state 11
    comment                        shift and go to state 12
    binary_expression              shift and go to state 13
    unitary_expression             shift and go to state 14
    primary_expression             shift and go to state 15
    term                           shift and go to state 31

state 93

    (43) conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 . STRUCTURE_BODY statement_list

    STRUCTURE_BODY  shift and go to state 95


state 94

    (45) loop -> LOOP2 LPAREN expression SEPARATION expression SEPARATION expression . RPAREN STRUCTURE_BODY statement_list

    RPAREN          shift and go to state 96


state 95

    (43) conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . function_declaration END_LINE
    (10) statement -> . return_statement END_LINE
    (11) statement -> . break_statement END_LINE
    (12) statement -> . comment
    (13) expression -> . binary_expression
    (14) expression -> . unitary_expression
    (15) expression -> . primary_expression
    (31) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (32) declaration -> . TYPE_BOOLEAN VARIABLE
    (33) declaration -> . TYPE_STRING VARIABLE
    (34) declaration -> . TYPE_CHAR VARIABLE
    (35) declaration -> . TYPE_INTEGER VARIABLE
    (36) declaration -> . TYPE_FLOAT VARIABLE
    (37) declaration -> . TYPE_BOOLEAN assignment
    (38) declaration -> . TYPE_STRING assignment
    (39) declaration -> . TYPE_CHAR assignment
    (40) declaration -> . TYPE_INTEGER assignment
    (41) declaration -> . TYPE_FLOAT assignment
    (42) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (43) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (44) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (45) loop -> . LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (46) function_declaration -> . FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list
    (47) return_statement -> . RETURN expression
    (48) return_statement -> . RETURN
    (49) break_statement -> . BREAK
    (50) comment -> . COMMENT
    (16) binary_expression -> . primary_expression PLUS_OP primary_expression
    (17) binary_expression -> . primary_expression MINUS_OP primary_expression
    (18) binary_expression -> . primary_expression MUL_OP primary_expression
    (19) binary_expression -> . primary_expression DIV_OP primary_expression
    (20) unitary_expression -> . MINUS_OP primary_expression
    (21) primary_expression -> . LPAREN expression RPAREN
    (22) primary_expression -> . term
    (23) term -> . NUMBER_INTEGER
    (24) term -> . NUMBER_FLOAT
    (25) term -> . VARIABLE
    (26) term -> . TRUE
    (27) term -> . FALSE
    (28) term -> . NULL
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR

    VARIABLE        shift and go to state 16
    TYPE_BOOLEAN    shift and go to state 17
    TYPE_STRING     shift and go to state 18
    TYPE_CHAR       shift and go to state 19
    TYPE_INTEGER    shift and go to state 20
    TYPE_FLOAT      shift and go to state 21
    CONDITIONAL1    shift and go to state 22
    LOOP1           shift and go to state 24
    LOOP2           shift and go to state 25
    FUNCTION_DECLARATION shift and go to state 26
    RETURN          shift and go to state 27
    BREAK           shift and go to state 28
    COMMENT         shift and go to state 29
    MINUS_OP        shift and go to state 30
    LPAREN          shift and go to state 23
    NUMBER_INTEGER  shift and go to state 32
    NUMBER_FLOAT    shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    TEXT_STRING     shift and go to state 37
    TEXT_CHAR       shift and go to state 38

    expression                     shift and go to state 4
    statement_list                 shift and go to state 97
    statement                      shift and go to state 3
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    function_declaration           shift and go to state 9
    return_statement               shift and go to state 10
    break_statement                shift and go to state 11
    comment                        shift and go to state 12
    binary_expression              shift and go to state 13
    unitary_expression             shift and go to state 14
    primary_expression             shift and go to state 15
    term                           shift and go to state 31

state 96

    (45) loop -> LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN . STRUCTURE_BODY statement_list

    STRUCTURE_BODY  shift and go to state 98


state 97

    (43) conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . function_declaration END_LINE
    (10) statement -> . return_statement END_LINE
    (11) statement -> . break_statement END_LINE
    (12) statement -> . comment
    (13) expression -> . binary_expression
    (14) expression -> . unitary_expression
    (15) expression -> . primary_expression
    (31) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (32) declaration -> . TYPE_BOOLEAN VARIABLE
    (33) declaration -> . TYPE_STRING VARIABLE
    (34) declaration -> . TYPE_CHAR VARIABLE
    (35) declaration -> . TYPE_INTEGER VARIABLE
    (36) declaration -> . TYPE_FLOAT VARIABLE
    (37) declaration -> . TYPE_BOOLEAN assignment
    (38) declaration -> . TYPE_STRING assignment
    (39) declaration -> . TYPE_CHAR assignment
    (40) declaration -> . TYPE_INTEGER assignment
    (41) declaration -> . TYPE_FLOAT assignment
    (42) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (43) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (44) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (45) loop -> . LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (46) function_declaration -> . FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list
    (47) return_statement -> . RETURN expression
    (48) return_statement -> . RETURN
    (49) break_statement -> . BREAK
    (50) comment -> . COMMENT
    (16) binary_expression -> . primary_expression PLUS_OP primary_expression
    (17) binary_expression -> . primary_expression MINUS_OP primary_expression
    (18) binary_expression -> . primary_expression MUL_OP primary_expression
    (19) binary_expression -> . primary_expression DIV_OP primary_expression
    (20) unitary_expression -> . MINUS_OP primary_expression
    (21) primary_expression -> . LPAREN expression RPAREN
    (22) primary_expression -> . term
    (23) term -> . NUMBER_INTEGER
    (24) term -> . NUMBER_FLOAT
    (25) term -> . VARIABLE
    (26) term -> . TRUE
    (27) term -> . FALSE
    (28) term -> . NULL
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR

    END_LINE        reduce using rule 43 (conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list .)
    VARIABLE        shift and go to state 16
    TYPE_BOOLEAN    shift and go to state 17
    TYPE_STRING     shift and go to state 18
    TYPE_CHAR       shift and go to state 19
    TYPE_INTEGER    shift and go to state 20
    TYPE_FLOAT      shift and go to state 21
    CONDITIONAL1    shift and go to state 22
    LOOP1           shift and go to state 24
    LOOP2           shift and go to state 25
    FUNCTION_DECLARATION shift and go to state 26
    RETURN          shift and go to state 27
    BREAK           shift and go to state 28
    COMMENT         shift and go to state 29
    MINUS_OP        shift and go to state 30
    LPAREN          shift and go to state 23
    NUMBER_INTEGER  shift and go to state 32
    NUMBER_FLOAT    shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    TEXT_STRING     shift and go to state 37
    TEXT_CHAR       shift and go to state 38

    expression                     shift and go to state 4
    statement                      shift and go to state 39
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    function_declaration           shift and go to state 9
    return_statement               shift and go to state 10
    break_statement                shift and go to state 11
    comment                        shift and go to state 12
    binary_expression              shift and go to state 13
    unitary_expression             shift and go to state 14
    primary_expression             shift and go to state 15
    term                           shift and go to state 31

state 98

    (45) loop -> LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . function_declaration END_LINE
    (10) statement -> . return_statement END_LINE
    (11) statement -> . break_statement END_LINE
    (12) statement -> . comment
    (13) expression -> . binary_expression
    (14) expression -> . unitary_expression
    (15) expression -> . primary_expression
    (31) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (32) declaration -> . TYPE_BOOLEAN VARIABLE
    (33) declaration -> . TYPE_STRING VARIABLE
    (34) declaration -> . TYPE_CHAR VARIABLE
    (35) declaration -> . TYPE_INTEGER VARIABLE
    (36) declaration -> . TYPE_FLOAT VARIABLE
    (37) declaration -> . TYPE_BOOLEAN assignment
    (38) declaration -> . TYPE_STRING assignment
    (39) declaration -> . TYPE_CHAR assignment
    (40) declaration -> . TYPE_INTEGER assignment
    (41) declaration -> . TYPE_FLOAT assignment
    (42) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (43) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (44) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (45) loop -> . LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (46) function_declaration -> . FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list
    (47) return_statement -> . RETURN expression
    (48) return_statement -> . RETURN
    (49) break_statement -> . BREAK
    (50) comment -> . COMMENT
    (16) binary_expression -> . primary_expression PLUS_OP primary_expression
    (17) binary_expression -> . primary_expression MINUS_OP primary_expression
    (18) binary_expression -> . primary_expression MUL_OP primary_expression
    (19) binary_expression -> . primary_expression DIV_OP primary_expression
    (20) unitary_expression -> . MINUS_OP primary_expression
    (21) primary_expression -> . LPAREN expression RPAREN
    (22) primary_expression -> . term
    (23) term -> . NUMBER_INTEGER
    (24) term -> . NUMBER_FLOAT
    (25) term -> . VARIABLE
    (26) term -> . TRUE
    (27) term -> . FALSE
    (28) term -> . NULL
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR

    VARIABLE        shift and go to state 16
    TYPE_BOOLEAN    shift and go to state 17
    TYPE_STRING     shift and go to state 18
    TYPE_CHAR       shift and go to state 19
    TYPE_INTEGER    shift and go to state 20
    TYPE_FLOAT      shift and go to state 21
    CONDITIONAL1    shift and go to state 22
    LOOP1           shift and go to state 24
    LOOP2           shift and go to state 25
    FUNCTION_DECLARATION shift and go to state 26
    RETURN          shift and go to state 27
    BREAK           shift and go to state 28
    COMMENT         shift and go to state 29
    MINUS_OP        shift and go to state 30
    LPAREN          shift and go to state 23
    NUMBER_INTEGER  shift and go to state 32
    NUMBER_FLOAT    shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    TEXT_STRING     shift and go to state 37
    TEXT_CHAR       shift and go to state 38

    expression                     shift and go to state 4
    statement_list                 shift and go to state 99
    statement                      shift and go to state 3
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    function_declaration           shift and go to state 9
    return_statement               shift and go to state 10
    break_statement                shift and go to state 11
    comment                        shift and go to state 12
    binary_expression              shift and go to state 13
    unitary_expression             shift and go to state 14
    primary_expression             shift and go to state 15
    term                           shift and go to state 31

state 99

    (45) loop -> LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . function_declaration END_LINE
    (10) statement -> . return_statement END_LINE
    (11) statement -> . break_statement END_LINE
    (12) statement -> . comment
    (13) expression -> . binary_expression
    (14) expression -> . unitary_expression
    (15) expression -> . primary_expression
    (31) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (32) declaration -> . TYPE_BOOLEAN VARIABLE
    (33) declaration -> . TYPE_STRING VARIABLE
    (34) declaration -> . TYPE_CHAR VARIABLE
    (35) declaration -> . TYPE_INTEGER VARIABLE
    (36) declaration -> . TYPE_FLOAT VARIABLE
    (37) declaration -> . TYPE_BOOLEAN assignment
    (38) declaration -> . TYPE_STRING assignment
    (39) declaration -> . TYPE_CHAR assignment
    (40) declaration -> . TYPE_INTEGER assignment
    (41) declaration -> . TYPE_FLOAT assignment
    (42) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (43) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (44) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (45) loop -> . LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (46) function_declaration -> . FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list
    (47) return_statement -> . RETURN expression
    (48) return_statement -> . RETURN
    (49) break_statement -> . BREAK
    (50) comment -> . COMMENT
    (16) binary_expression -> . primary_expression PLUS_OP primary_expression
    (17) binary_expression -> . primary_expression MINUS_OP primary_expression
    (18) binary_expression -> . primary_expression MUL_OP primary_expression
    (19) binary_expression -> . primary_expression DIV_OP primary_expression
    (20) unitary_expression -> . MINUS_OP primary_expression
    (21) primary_expression -> . LPAREN expression RPAREN
    (22) primary_expression -> . term
    (23) term -> . NUMBER_INTEGER
    (24) term -> . NUMBER_FLOAT
    (25) term -> . VARIABLE
    (26) term -> . TRUE
    (27) term -> . FALSE
    (28) term -> . NULL
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR

    END_LINE        reduce using rule 45 (loop -> LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list .)
    VARIABLE        shift and go to state 16
    TYPE_BOOLEAN    shift and go to state 17
    TYPE_STRING     shift and go to state 18
    TYPE_CHAR       shift and go to state 19
    TYPE_INTEGER    shift and go to state 20
    TYPE_FLOAT      shift and go to state 21
    CONDITIONAL1    shift and go to state 22
    LOOP1           shift and go to state 24
    LOOP2           shift and go to state 25
    FUNCTION_DECLARATION shift and go to state 26
    RETURN          shift and go to state 27
    BREAK           shift and go to state 28
    COMMENT         shift and go to state 29
    MINUS_OP        shift and go to state 30
    LPAREN          shift and go to state 23
    NUMBER_INTEGER  shift and go to state 32
    NUMBER_FLOAT    shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    TEXT_STRING     shift and go to state 37
    TEXT_CHAR       shift and go to state 38

    expression                     shift and go to state 4
    statement                      shift and go to state 39
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    function_declaration           shift and go to state 9
    return_statement               shift and go to state 10
    break_statement                shift and go to state 11
    comment                        shift and go to state 12
    binary_expression              shift and go to state 13
    unitary_expression             shift and go to state 14
    primary_expression             shift and go to state 15
    term                           shift and go to state 31
