
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUS_OPMINUS_OPleftMUL_OPDIV_OPleftLESS_OPLESS_EQUAL_OPGREATER_OPGREATER_EQUAL_OPEQUAL_OPDIFFERENT_OPleftLOGICAL_OP_ANDLOGICAL_OP_ORrightLOGICAL_OP_NOTASSIGNMENT_OP BREAK COMMENT CONDITIONAL1 CONDITIONAL2 DIFFERENT_OP DIV_OP END_LINE EQUAL_OP FALSE FUNCTION_DECLARATION GREATER_EQUAL_OP GREATER_OP LESS_EQUAL_OP LESS_OP LOGICAL_OP_AND LOGICAL_OP_NOT LOGICAL_OP_OR LOOP1 LOOP2 LPAREN MINUS_OP MUL_OP NULL NUMBER_FLOAT NUMBER_INTEGER PLUS_OP RETURN RPAREN SEPARATION STRUCTURE_BODY TEXT_CHAR TEXT_STRING TRUE TYPE_BOOLEAN TYPE_CHAR TYPE_FLOAT TYPE_INTEGER TYPE_STRING VARIABLEprogram : statement_liststatement_list : statement_list statement\n                      | statementstatement : expression END_LINE\n                 | assignment END_LINE\n                 | declaration END_LINE\n                 | conditional\n                 | loop\n                 | function_declaration\n                 | return_statement\n                 | break_statement\n                 | COMMENTexpression : term\n                  | expression PLUS_OP term\n                  | expression MINUS_OP term\n                  | expression MUL_OP term\n                  | expression DIV_OP term\n                  | expression LESS_OP expression\n                  | expression LESS_EQUAL_OP expression\n                  | expression GREATER_OP expression\n                  | expression GREATER_EQUAL_OP expression\n                  | expression EQUAL_OP expression\n                  | expression DIFFERENT_OP expression\n                  | LOGICAL_OP_NOT expression\n                  | expression LOGICAL_OP_AND expression\n                  | expression LOGICAL_OP_OR expressionterm : NUMBER_INTEGER\n            | NUMBER_FLOAT\n            | TEXT_STRING\n            | TEXT_CHAR\n            | VARIABLE\n            | TRUE\n            | FALSE\n            | NULLassignment : VARIABLE ASSIGNMENT_OP expressiondeclaration : TYPE_BOOLEAN assignment\n                   | TYPE_STRING assignment\n                   | TYPE_CHAR assignment\n                   | TYPE_INTEGER assignment\n                   | TYPE_FLOAT assignment\n                   | TYPE_BOOLEAN VARIABLE \n                   | TYPE_STRING VARIABLE\n                   | TYPE_CHAR VARIABLE\n                   | TYPE_INTEGER VARIABLE\n                   | TYPE_FLOAT VARIABLEconditional : CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list END_LINE\n                   | CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list END_LINEloop : LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list END_LINE\n            | LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list END_LINEfunction_declaration : FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list END_LINEreturn_statement : RETURN expression END_LINE\n                        | RETURN END_LINEbreak_statement : BREAK END_LINE'
    
_lr_action_items = {'COMMENT':([0,2,3,7,8,9,10,11,12,34,35,48,49,68,69,87,92,93,95,96,97,99,100,102,104,105,107,108,109,110,111,],[12,12,-3,-7,-8,-9,-10,-11,-12,-2,-4,-5,-6,-52,-53,-51,12,12,12,12,12,12,-46,-48,-50,12,12,12,-47,12,-49,]),'LOGICAL_OP_NOT':([0,2,3,7,8,9,10,11,12,14,25,34,35,40,41,42,43,44,45,46,47,48,49,52,63,64,65,68,69,87,90,92,93,95,96,97,98,99,100,102,104,105,107,108,109,110,111,],[14,14,-3,-7,-8,-9,-10,-11,-12,14,14,-2,-4,14,14,14,14,14,14,14,14,-5,-6,14,14,14,14,-52,-53,-51,14,14,14,14,14,14,14,14,-46,-48,-50,14,14,14,-47,14,-49,]),'VARIABLE':([0,2,3,7,8,9,10,11,12,14,16,17,18,19,20,24,25,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,63,64,65,68,69,87,90,92,93,95,96,97,98,99,100,102,104,105,107,108,109,110,111,],[15,15,-3,-7,-8,-9,-10,-11,-12,51,54,56,58,60,62,66,51,-2,-4,51,51,51,51,51,51,51,51,51,51,51,51,-5,-6,51,51,51,51,-52,-53,-51,51,15,15,15,15,15,51,15,-46,-48,-50,15,15,15,-47,15,-49,]),'TYPE_BOOLEAN':([0,2,3,7,8,9,10,11,12,34,35,48,49,68,69,87,92,93,95,96,97,99,100,102,104,105,107,108,109,110,111,],[16,16,-3,-7,-8,-9,-10,-11,-12,-2,-4,-5,-6,-52,-53,-51,16,16,16,16,16,16,-46,-48,-50,16,16,16,-47,16,-49,]),'TYPE_STRING':([0,2,3,7,8,9,10,11,12,34,35,48,49,68,69,87,92,93,95,96,97,99,100,102,104,105,107,108,109,110,111,],[17,17,-3,-7,-8,-9,-10,-11,-12,-2,-4,-5,-6,-52,-53,-51,17,17,17,17,17,17,-46,-48,-50,17,17,17,-47,17,-49,]),'TYPE_CHAR':([0,2,3,7,8,9,10,11,12,34,35,48,49,68,69,87,92,93,95,96,97,99,100,102,104,105,107,108,109,110,111,],[18,18,-3,-7,-8,-9,-10,-11,-12,-2,-4,-5,-6,-52,-53,-51,18,18,18,18,18,18,-46,-48,-50,18,18,18,-47,18,-49,]),'TYPE_INTEGER':([0,2,3,7,8,9,10,11,12,34,35,48,49,68,69,87,92,93,95,96,97,99,100,102,104,105,107,108,109,110,111,],[19,19,-3,-7,-8,-9,-10,-11,-12,-2,-4,-5,-6,-52,-53,-51,19,19,19,19,19,19,-46,-48,-50,19,19,19,-47,19,-49,]),'TYPE_FLOAT':([0,2,3,7,8,9,10,11,12,34,35,48,49,68,69,87,92,93,95,96,97,99,100,102,104,105,107,108,109,110,111,],[20,20,-3,-7,-8,-9,-10,-11,-12,-2,-4,-5,-6,-52,-53,-51,20,20,20,20,20,20,-46,-48,-50,20,20,20,-47,20,-49,]),'CONDITIONAL1':([0,2,3,7,8,9,10,11,12,34,35,48,49,68,69,87,92,93,95,96,97,99,100,102,104,105,107,108,109,110,111,],[21,21,-3,-7,-8,-9,-10,-11,-12,-2,-4,-5,-6,-52,-53,-51,21,21,21,21,21,21,-46,-48,-50,21,21,21,-47,21,-49,]),'LOOP1':([0,2,3,7,8,9,10,11,12,34,35,48,49,68,69,87,92,93,95,96,97,99,100,102,104,105,107,108,109,110,111,],[22,22,-3,-7,-8,-9,-10,-11,-12,-2,-4,-5,-6,-52,-53,-51,22,22,22,22,22,22,-46,-48,-50,22,22,22,-47,22,-49,]),'LOOP2':([0,2,3,7,8,9,10,11,12,34,35,48,49,68,69,87,92,93,95,96,97,99,100,102,104,105,107,108,109,110,111,],[23,23,-3,-7,-8,-9,-10,-11,-12,-2,-4,-5,-6,-52,-53,-51,23,23,23,23,23,23,-46,-48,-50,23,23,23,-47,23,-49,]),'FUNCTION_DECLARATION':([0,2,3,7,8,9,10,11,12,34,35,48,49,68,69,87,92,93,95,96,97,99,100,102,104,105,107,108,109,110,111,],[24,24,-3,-7,-8,-9,-10,-11,-12,-2,-4,-5,-6,-52,-53,-51,24,24,24,24,24,24,-46,-48,-50,24,24,24,-47,24,-49,]),'RETURN':([0,2,3,7,8,9,10,11,12,34,35,48,49,68,69,87,92,93,95,96,97,99,100,102,104,105,107,108,109,110,111,],[25,25,-3,-7,-8,-9,-10,-11,-12,-2,-4,-5,-6,-52,-53,-51,25,25,25,25,25,25,-46,-48,-50,25,25,25,-47,25,-49,]),'BREAK':([0,2,3,7,8,9,10,11,12,34,35,48,49,68,69,87,92,93,95,96,97,99,100,102,104,105,107,108,109,110,111,],[26,26,-3,-7,-8,-9,-10,-11,-12,-2,-4,-5,-6,-52,-53,-51,26,26,26,26,26,26,-46,-48,-50,26,26,26,-47,26,-49,]),'NUMBER_INTEGER':([0,2,3,7,8,9,10,11,12,14,25,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,63,64,65,68,69,87,90,92,93,95,96,97,98,99,100,102,104,105,107,108,109,110,111,],[27,27,-3,-7,-8,-9,-10,-11,-12,27,27,-2,-4,27,27,27,27,27,27,27,27,27,27,27,27,-5,-6,27,27,27,27,-52,-53,-51,27,27,27,27,27,27,27,27,-46,-48,-50,27,27,27,-47,27,-49,]),'NUMBER_FLOAT':([0,2,3,7,8,9,10,11,12,14,25,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,63,64,65,68,69,87,90,92,93,95,96,97,98,99,100,102,104,105,107,108,109,110,111,],[28,28,-3,-7,-8,-9,-10,-11,-12,28,28,-2,-4,28,28,28,28,28,28,28,28,28,28,28,28,-5,-6,28,28,28,28,-52,-53,-51,28,28,28,28,28,28,28,28,-46,-48,-50,28,28,28,-47,28,-49,]),'TEXT_STRING':([0,2,3,7,8,9,10,11,12,14,25,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,63,64,65,68,69,87,90,92,93,95,96,97,98,99,100,102,104,105,107,108,109,110,111,],[29,29,-3,-7,-8,-9,-10,-11,-12,29,29,-2,-4,29,29,29,29,29,29,29,29,29,29,29,29,-5,-6,29,29,29,29,-52,-53,-51,29,29,29,29,29,29,29,29,-46,-48,-50,29,29,29,-47,29,-49,]),'TEXT_CHAR':([0,2,3,7,8,9,10,11,12,14,25,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,63,64,65,68,69,87,90,92,93,95,96,97,98,99,100,102,104,105,107,108,109,110,111,],[30,30,-3,-7,-8,-9,-10,-11,-12,30,30,-2,-4,30,30,30,30,30,30,30,30,30,30,30,30,-5,-6,30,30,30,30,-52,-53,-51,30,30,30,30,30,30,30,30,-46,-48,-50,30,30,30,-47,30,-49,]),'TRUE':([0,2,3,7,8,9,10,11,12,14,25,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,63,64,65,68,69,87,90,92,93,95,96,97,98,99,100,102,104,105,107,108,109,110,111,],[31,31,-3,-7,-8,-9,-10,-11,-12,31,31,-2,-4,31,31,31,31,31,31,31,31,31,31,31,31,-5,-6,31,31,31,31,-52,-53,-51,31,31,31,31,31,31,31,31,-46,-48,-50,31,31,31,-47,31,-49,]),'FALSE':([0,2,3,7,8,9,10,11,12,14,25,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,63,64,65,68,69,87,90,92,93,95,96,97,98,99,100,102,104,105,107,108,109,110,111,],[32,32,-3,-7,-8,-9,-10,-11,-12,32,32,-2,-4,32,32,32,32,32,32,32,32,32,32,32,32,-5,-6,32,32,32,32,-52,-53,-51,32,32,32,32,32,32,32,32,-46,-48,-50,32,32,32,-47,32,-49,]),'NULL':([0,2,3,7,8,9,10,11,12,14,25,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,63,64,65,68,69,87,90,92,93,95,96,97,98,99,100,102,104,105,107,108,109,110,111,],[33,33,-3,-7,-8,-9,-10,-11,-12,33,33,-2,-4,33,33,33,33,33,33,33,33,33,33,33,33,-5,-6,33,33,33,33,-52,-53,-51,33,33,33,33,33,33,33,33,-46,-48,-50,33,33,33,-47,33,-49,]),'$end':([1,2,3,7,8,9,10,11,12,34,35,48,49,68,69,87,100,102,104,109,111,],[0,-1,-3,-7,-8,-9,-10,-11,-12,-2,-4,-5,-6,-52,-53,-51,-46,-48,-50,-47,-49,]),'END_LINE':([3,4,5,6,7,8,9,10,11,12,13,15,25,26,27,28,29,30,31,32,33,34,35,48,49,50,51,53,54,55,56,57,58,59,60,61,62,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,87,96,97,99,100,102,104,107,109,110,111,],[-3,35,48,49,-7,-8,-9,-10,-11,-12,-13,-31,68,69,-27,-28,-29,-30,-32,-33,-34,-2,-4,-5,-6,-24,-31,-36,-41,-37,-42,-38,-43,-39,-44,-40,-45,87,-52,-53,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-35,-51,100,102,104,-46,-48,-50,109,-47,111,-49,]),'CONDITIONAL2':([3,7,8,9,10,11,12,34,35,48,49,68,69,87,96,100,102,104,109,111,],[-3,-7,-8,-9,-10,-11,-12,-2,-4,-5,-6,-52,-53,-51,101,-46,-48,-50,-47,-49,]),'PLUS_OP':([4,13,15,27,28,29,30,31,32,33,50,51,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,94,103,],[36,-13,-31,-27,-28,-29,-30,-32,-33,-34,-24,-31,36,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,36,36,36,36,36,36,]),'MINUS_OP':([4,13,15,27,28,29,30,31,32,33,50,51,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,94,103,],[37,-13,-31,-27,-28,-29,-30,-32,-33,-34,-24,-31,37,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,37,37,37,37,37,37,]),'MUL_OP':([4,13,15,27,28,29,30,31,32,33,50,51,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,94,103,],[38,-13,-31,-27,-28,-29,-30,-32,-33,-34,-24,-31,38,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,38,38,38,38,38,38,]),'DIV_OP':([4,13,15,27,28,29,30,31,32,33,50,51,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,94,103,],[39,-13,-31,-27,-28,-29,-30,-32,-33,-34,-24,-31,39,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,39,39,39,39,39,39,]),'LESS_OP':([4,13,15,27,28,29,30,31,32,33,50,51,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,94,103,],[40,-13,-31,-27,-28,-29,-30,-32,-33,-34,-24,-31,40,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,40,40,40,40,40,40,]),'LESS_EQUAL_OP':([4,13,15,27,28,29,30,31,32,33,50,51,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,94,103,],[41,-13,-31,-27,-28,-29,-30,-32,-33,-34,-24,-31,41,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,41,41,41,41,41,41,]),'GREATER_OP':([4,13,15,27,28,29,30,31,32,33,50,51,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,94,103,],[42,-13,-31,-27,-28,-29,-30,-32,-33,-34,-24,-31,42,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,42,42,42,42,42,42,]),'GREATER_EQUAL_OP':([4,13,15,27,28,29,30,31,32,33,50,51,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,94,103,],[43,-13,-31,-27,-28,-29,-30,-32,-33,-34,-24,-31,43,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,43,43,43,43,43,43,]),'EQUAL_OP':([4,13,15,27,28,29,30,31,32,33,50,51,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,94,103,],[44,-13,-31,-27,-28,-29,-30,-32,-33,-34,-24,-31,44,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,44,44,44,44,44,44,]),'DIFFERENT_OP':([4,13,15,27,28,29,30,31,32,33,50,51,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,94,103,],[45,-13,-31,-27,-28,-29,-30,-32,-33,-34,-24,-31,45,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,45,45,45,45,45,45,]),'LOGICAL_OP_AND':([4,13,15,27,28,29,30,31,32,33,50,51,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,94,103,],[46,-13,-31,-27,-28,-29,-30,-32,-33,-34,-24,-31,46,-14,-15,-16,-17,46,46,46,46,46,46,-25,-26,46,46,46,46,46,46,]),'LOGICAL_OP_OR':([4,13,15,27,28,29,30,31,32,33,50,51,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,94,103,],[47,-13,-31,-27,-28,-29,-30,-32,-33,-34,-24,-31,47,-14,-15,-16,-17,47,47,47,47,47,47,-25,-26,47,47,47,47,47,47,]),'RPAREN':([13,27,28,29,30,31,32,33,50,51,70,71,72,73,74,75,76,77,78,79,80,81,83,84,86,103,],[-13,-27,-28,-29,-30,-32,-33,-34,-24,-31,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,88,89,91,106,]),'SEPARATION':([13,27,28,29,30,31,32,33,50,51,70,71,72,73,74,75,76,77,78,79,80,81,85,94,],[-13,-27,-28,-29,-30,-32,-33,-34,-24,-31,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,90,98,]),'ASSIGNMENT_OP':([15,54,56,58,60,62,],[52,52,52,52,52,52,]),'LPAREN':([21,22,23,66,],[63,64,65,86,]),'STRUCTURE_BODY':([88,89,91,101,106,],[92,93,95,105,108,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,92,93,95,105,108,],[2,96,97,99,107,110,]),'statement':([0,2,92,93,95,96,97,99,105,107,108,110,],[3,34,3,3,3,34,34,34,3,34,3,34,]),'expression':([0,2,14,25,40,41,42,43,44,45,46,47,52,63,64,65,90,92,93,95,96,97,98,99,105,107,108,110,],[4,4,50,67,74,75,76,77,78,79,80,81,82,83,84,85,94,4,4,4,4,4,103,4,4,4,4,4,]),'assignment':([0,2,16,17,18,19,20,92,93,95,96,97,99,105,107,108,110,],[5,5,53,55,57,59,61,5,5,5,5,5,5,5,5,5,5,]),'declaration':([0,2,92,93,95,96,97,99,105,107,108,110,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'conditional':([0,2,92,93,95,96,97,99,105,107,108,110,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'loop':([0,2,92,93,95,96,97,99,105,107,108,110,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'function_declaration':([0,2,92,93,95,96,97,99,105,107,108,110,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'return_statement':([0,2,92,93,95,96,97,99,105,107,108,110,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'break_statement':([0,2,92,93,95,96,97,99,105,107,108,110,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'term':([0,2,14,25,36,37,38,39,40,41,42,43,44,45,46,47,52,63,64,65,90,92,93,95,96,97,98,99,105,107,108,110,],[13,13,13,13,70,71,72,73,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',17),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',21),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',22),
  ('statement -> expression END_LINE','statement',2,'p_statement','parser.py',29),
  ('statement -> assignment END_LINE','statement',2,'p_statement','parser.py',30),
  ('statement -> declaration END_LINE','statement',2,'p_statement','parser.py',31),
  ('statement -> conditional','statement',1,'p_statement','parser.py',32),
  ('statement -> loop','statement',1,'p_statement','parser.py',33),
  ('statement -> function_declaration','statement',1,'p_statement','parser.py',34),
  ('statement -> return_statement','statement',1,'p_statement','parser.py',35),
  ('statement -> break_statement','statement',1,'p_statement','parser.py',36),
  ('statement -> COMMENT','statement',1,'p_statement','parser.py',37),
  ('expression -> term','expression',1,'p_expression','parser.py',41),
  ('expression -> expression PLUS_OP term','expression',3,'p_expression','parser.py',42),
  ('expression -> expression MINUS_OP term','expression',3,'p_expression','parser.py',43),
  ('expression -> expression MUL_OP term','expression',3,'p_expression','parser.py',44),
  ('expression -> expression DIV_OP term','expression',3,'p_expression','parser.py',45),
  ('expression -> expression LESS_OP expression','expression',3,'p_expression','parser.py',46),
  ('expression -> expression LESS_EQUAL_OP expression','expression',3,'p_expression','parser.py',47),
  ('expression -> expression GREATER_OP expression','expression',3,'p_expression','parser.py',48),
  ('expression -> expression GREATER_EQUAL_OP expression','expression',3,'p_expression','parser.py',49),
  ('expression -> expression EQUAL_OP expression','expression',3,'p_expression','parser.py',50),
  ('expression -> expression DIFFERENT_OP expression','expression',3,'p_expression','parser.py',51),
  ('expression -> LOGICAL_OP_NOT expression','expression',2,'p_expression','parser.py',52),
  ('expression -> expression LOGICAL_OP_AND expression','expression',3,'p_expression','parser.py',53),
  ('expression -> expression LOGICAL_OP_OR expression','expression',3,'p_expression','parser.py',54),
  ('term -> NUMBER_INTEGER','term',1,'p_term','parser.py',61),
  ('term -> NUMBER_FLOAT','term',1,'p_term','parser.py',62),
  ('term -> TEXT_STRING','term',1,'p_term','parser.py',63),
  ('term -> TEXT_CHAR','term',1,'p_term','parser.py',64),
  ('term -> VARIABLE','term',1,'p_term','parser.py',65),
  ('term -> TRUE','term',1,'p_term','parser.py',66),
  ('term -> FALSE','term',1,'p_term','parser.py',67),
  ('term -> NULL','term',1,'p_term','parser.py',68),
  ('assignment -> VARIABLE ASSIGNMENT_OP expression','assignment',3,'p_assignment','parser.py',72),
  ('declaration -> TYPE_BOOLEAN assignment','declaration',2,'p_declaration','parser.py',76),
  ('declaration -> TYPE_STRING assignment','declaration',2,'p_declaration','parser.py',77),
  ('declaration -> TYPE_CHAR assignment','declaration',2,'p_declaration','parser.py',78),
  ('declaration -> TYPE_INTEGER assignment','declaration',2,'p_declaration','parser.py',79),
  ('declaration -> TYPE_FLOAT assignment','declaration',2,'p_declaration','parser.py',80),
  ('declaration -> TYPE_BOOLEAN VARIABLE','declaration',2,'p_declaration','parser.py',81),
  ('declaration -> TYPE_STRING VARIABLE','declaration',2,'p_declaration','parser.py',82),
  ('declaration -> TYPE_CHAR VARIABLE','declaration',2,'p_declaration','parser.py',83),
  ('declaration -> TYPE_INTEGER VARIABLE','declaration',2,'p_declaration','parser.py',84),
  ('declaration -> TYPE_FLOAT VARIABLE','declaration',2,'p_declaration','parser.py',85),
  ('conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list END_LINE','conditional',7,'p_conditional','parser.py',89),
  ('conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list END_LINE','conditional',10,'p_conditional','parser.py',90),
  ('loop -> LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list END_LINE','loop',7,'p_loop','parser.py',97),
  ('loop -> LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list END_LINE','loop',11,'p_loop','parser.py',98),
  ('function_declaration -> FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list END_LINE','function_declaration',7,'p_function_declaration','parser.py',106),
  ('return_statement -> RETURN expression END_LINE','return_statement',3,'p_return_statement','parser.py',110),
  ('return_statement -> RETURN END_LINE','return_statement',2,'p_return_statement','parser.py',111),
  ('break_statement -> BREAK END_LINE','break_statement',2,'p_break_statement','parser.py',115),
]
