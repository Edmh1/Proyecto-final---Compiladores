Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement_list statement
Rule 3     statement_list -> statement
Rule 4     statement -> expression END_LINE
Rule 5     statement -> assignment END_LINE
Rule 6     statement -> declaration END_LINE
Rule 7     statement -> conditional END_LINE
Rule 8     statement -> loop END_LINE
Rule 9     statement -> function_declaration END_LINE
Rule 10    statement -> return_statement END_LINE
Rule 11    statement -> break_statement END_LINE
Rule 12    statement -> COMMENT
Rule 13    expression -> logical_or_expression
Rule 14    logical_or_expression -> logical_or_expression LOGICAL_OP_OR logical_and_expression
Rule 15    logical_or_expression -> logical_and_expression
Rule 16    logical_and_expression -> logical_and_expression LOGICAL_OP_AND equality_expression
Rule 17    logical_and_expression -> equality_expression
Rule 18    equality_expression -> equality_expression EQUAL_OP relational_expression
Rule 19    equality_expression -> equality_expression DIFFERENT_OP relational_expression
Rule 20    equality_expression -> relational_expression
Rule 21    relational_expression -> relational_expression LESS_OP additive_expression
Rule 22    relational_expression -> relational_expression LESS_EQUAL_OP additive_expression
Rule 23    relational_expression -> relational_expression GREATER_OP additive_expression
Rule 24    relational_expression -> relational_expression GREATER_EQUAL_OP additive_expression
Rule 25    relational_expression -> additive_expression
Rule 26    additive_expression -> additive_expression PLUS_OP multiplicative_expression
Rule 27    additive_expression -> additive_expression MINUS_OP multiplicative_expression
Rule 28    additive_expression -> multiplicative_expression
Rule 29    multiplicative_expression -> multiplicative_expression MUL_OP unary_expression
Rule 30    multiplicative_expression -> multiplicative_expression DIV_OP unary_expression
Rule 31    multiplicative_expression -> unary_expression
Rule 32    unary_expression -> LOGICAL_OP_NOT unary_expression
Rule 33    unary_expression -> primary_expression
Rule 34    primary_expression -> LPAREN expression RPAREN
Rule 35    primary_expression -> term
Rule 36    term -> NUMBER_INTEGER
Rule 37    term -> NUMBER_FLOAT
Rule 38    term -> VARIABLE
Rule 39    term -> TRUE
Rule 40    term -> FALSE
Rule 41    term -> NULL
Rule 42    term -> TEXT_STRING
Rule 43    term -> TEXT_CHAR
Rule 44    assignment -> VARIABLE ASSIGNMENT_OP expression
Rule 45    declaration -> TYPE_BOOLEAN VARIABLE
Rule 46    declaration -> TYPE_STRING VARIABLE
Rule 47    declaration -> TYPE_CHAR VARIABLE
Rule 48    declaration -> TYPE_INTEGER VARIABLE
Rule 49    declaration -> TYPE_FLOAT VARIABLE
Rule 50    declaration -> TYPE_BOOLEAN assignment
Rule 51    declaration -> TYPE_STRING assignment
Rule 52    declaration -> TYPE_CHAR assignment
Rule 53    declaration -> TYPE_INTEGER assignment
Rule 54    declaration -> TYPE_FLOAT assignment
Rule 55    conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
Rule 56    conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
Rule 57    loop -> LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
Rule 58    loop -> LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
Rule 59    function_declaration -> FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list
Rule 60    return_statement -> RETURN expression
Rule 61    return_statement -> RETURN
Rule 62    break_statement -> BREAK
Rule 63    comment -> COMMENT

Terminals, with rules where they appear

ASSIGNMENT_OP        : 44
BREAK                : 62
COMMENT              : 12 63
CONDITIONAL1         : 55 56
CONDITIONAL2         : 56
DIFFERENT_OP         : 19
DIV_OP               : 30
END_LINE             : 4 5 6 7 8 9 10 11
EQUAL_OP             : 18
FALSE                : 40
FUNCTION_DECLARATION : 59
GREATER_EQUAL_OP     : 24
GREATER_OP           : 23
LESS_EQUAL_OP        : 22
LESS_OP              : 21
LOGICAL_OP_AND       : 16
LOGICAL_OP_NOT       : 32
LOGICAL_OP_OR        : 14
LOOP1                : 57
LOOP2                : 58
LPAREN               : 34 55 56 57 58 59
MINUS_OP             : 27
MUL_OP               : 29
NULL                 : 41
NUMBER_FLOAT         : 37
NUMBER_INTEGER       : 36
PLUS_OP              : 26
RETURN               : 60 61
RPAREN               : 34 55 56 57 58 59
SEPARATION           : 58 58
STRUCTURE_BODY       : 55 56 56 57 58 59
TEXT_CHAR            : 43
TEXT_STRING          : 42
TRUE                 : 39
TYPE_BOOLEAN         : 45 50
TYPE_CHAR            : 47 52
TYPE_FLOAT           : 49 54
TYPE_INTEGER         : 48 53
TYPE_STRING          : 46 51
VARIABLE             : 38 44 45 46 47 48 49 59
error                : 

Nonterminals, with rules where they appear

additive_expression  : 21 22 23 24 25 26 27
assignment           : 5 50 51 52 53 54
break_statement      : 11
comment              : 
conditional          : 7
declaration          : 6
equality_expression  : 16 17 18 19
expression           : 4 34 44 55 56 57 58 58 58 60
function_declaration : 9
logical_and_expression : 14 15 16
logical_or_expression : 13 14
loop                 : 8
multiplicative_expression : 26 27 28 29 30
primary_expression   : 33
program              : 0
relational_expression : 18 19 20 21 22 23 24
return_statement     : 10
statement            : 2 3
statement_list       : 1 2 55 56 56 57 58 59
term                 : 35
unary_expression     : 29 30 31 32

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . function_declaration END_LINE
    (10) statement -> . return_statement END_LINE
    (11) statement -> . break_statement END_LINE
    (12) statement -> . COMMENT
    (13) expression -> . logical_or_expression
    (44) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (45) declaration -> . TYPE_BOOLEAN VARIABLE
    (46) declaration -> . TYPE_STRING VARIABLE
    (47) declaration -> . TYPE_CHAR VARIABLE
    (48) declaration -> . TYPE_INTEGER VARIABLE
    (49) declaration -> . TYPE_FLOAT VARIABLE
    (50) declaration -> . TYPE_BOOLEAN assignment
    (51) declaration -> . TYPE_STRING assignment
    (52) declaration -> . TYPE_CHAR assignment
    (53) declaration -> . TYPE_INTEGER assignment
    (54) declaration -> . TYPE_FLOAT assignment
    (55) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (56) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (57) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (58) loop -> . LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (59) function_declaration -> . FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list
    (60) return_statement -> . RETURN expression
    (61) return_statement -> . RETURN
    (62) break_statement -> . BREAK
    (14) logical_or_expression -> . logical_or_expression LOGICAL_OP_OR logical_and_expression
    (15) logical_or_expression -> . logical_and_expression
    (16) logical_and_expression -> . logical_and_expression LOGICAL_OP_AND equality_expression
    (17) logical_and_expression -> . equality_expression
    (18) equality_expression -> . equality_expression EQUAL_OP relational_expression
    (19) equality_expression -> . equality_expression DIFFERENT_OP relational_expression
    (20) equality_expression -> . relational_expression
    (21) relational_expression -> . relational_expression LESS_OP additive_expression
    (22) relational_expression -> . relational_expression LESS_EQUAL_OP additive_expression
    (23) relational_expression -> . relational_expression GREATER_OP additive_expression
    (24) relational_expression -> . relational_expression GREATER_EQUAL_OP additive_expression
    (25) relational_expression -> . additive_expression
    (26) additive_expression -> . additive_expression PLUS_OP multiplicative_expression
    (27) additive_expression -> . additive_expression MINUS_OP multiplicative_expression
    (28) additive_expression -> . multiplicative_expression
    (29) multiplicative_expression -> . multiplicative_expression MUL_OP unary_expression
    (30) multiplicative_expression -> . multiplicative_expression DIV_OP unary_expression
    (31) multiplicative_expression -> . unary_expression
    (32) unary_expression -> . LOGICAL_OP_NOT unary_expression
    (33) unary_expression -> . primary_expression
    (34) primary_expression -> . LPAREN expression RPAREN
    (35) primary_expression -> . term
    (36) term -> . NUMBER_INTEGER
    (37) term -> . NUMBER_FLOAT
    (38) term -> . VARIABLE
    (39) term -> . TRUE
    (40) term -> . FALSE
    (41) term -> . NULL
    (42) term -> . TEXT_STRING
    (43) term -> . TEXT_CHAR

    COMMENT         shift and go to state 12
    VARIABLE        shift and go to state 14
    TYPE_BOOLEAN    shift and go to state 15
    TYPE_STRING     shift and go to state 16
    TYPE_CHAR       shift and go to state 17
    TYPE_INTEGER    shift and go to state 18
    TYPE_FLOAT      shift and go to state 19
    CONDITIONAL1    shift and go to state 20
    LOOP1           shift and go to state 22
    LOOP2           shift and go to state 23
    FUNCTION_DECLARATION shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    LOGICAL_OP_NOT  shift and go to state 33
    LPAREN          shift and go to state 21
    NUMBER_INTEGER  shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    NULL            shift and go to state 40
    TEXT_STRING     shift and go to state 41
    TEXT_CHAR       shift and go to state 42

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    expression                     shift and go to state 4
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    function_declaration           shift and go to state 9
    return_statement               shift and go to state 10
    break_statement                shift and go to state 11
    logical_or_expression          shift and go to state 13
    logical_and_expression         shift and go to state 27
    equality_expression            shift and go to state 28
    relational_expression          shift and go to state 29
    additive_expression            shift and go to state 30
    multiplicative_expression      shift and go to state 31
    unary_expression               shift and go to state 32
    primary_expression             shift and go to state 34
    term                           shift and go to state 35

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . function_declaration END_LINE
    (10) statement -> . return_statement END_LINE
    (11) statement -> . break_statement END_LINE
    (12) statement -> . COMMENT
    (13) expression -> . logical_or_expression
    (44) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (45) declaration -> . TYPE_BOOLEAN VARIABLE
    (46) declaration -> . TYPE_STRING VARIABLE
    (47) declaration -> . TYPE_CHAR VARIABLE
    (48) declaration -> . TYPE_INTEGER VARIABLE
    (49) declaration -> . TYPE_FLOAT VARIABLE
    (50) declaration -> . TYPE_BOOLEAN assignment
    (51) declaration -> . TYPE_STRING assignment
    (52) declaration -> . TYPE_CHAR assignment
    (53) declaration -> . TYPE_INTEGER assignment
    (54) declaration -> . TYPE_FLOAT assignment
    (55) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (56) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (57) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (58) loop -> . LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (59) function_declaration -> . FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list
    (60) return_statement -> . RETURN expression
    (61) return_statement -> . RETURN
    (62) break_statement -> . BREAK
    (14) logical_or_expression -> . logical_or_expression LOGICAL_OP_OR logical_and_expression
    (15) logical_or_expression -> . logical_and_expression
    (16) logical_and_expression -> . logical_and_expression LOGICAL_OP_AND equality_expression
    (17) logical_and_expression -> . equality_expression
    (18) equality_expression -> . equality_expression EQUAL_OP relational_expression
    (19) equality_expression -> . equality_expression DIFFERENT_OP relational_expression
    (20) equality_expression -> . relational_expression
    (21) relational_expression -> . relational_expression LESS_OP additive_expression
    (22) relational_expression -> . relational_expression LESS_EQUAL_OP additive_expression
    (23) relational_expression -> . relational_expression GREATER_OP additive_expression
    (24) relational_expression -> . relational_expression GREATER_EQUAL_OP additive_expression
    (25) relational_expression -> . additive_expression
    (26) additive_expression -> . additive_expression PLUS_OP multiplicative_expression
    (27) additive_expression -> . additive_expression MINUS_OP multiplicative_expression
    (28) additive_expression -> . multiplicative_expression
    (29) multiplicative_expression -> . multiplicative_expression MUL_OP unary_expression
    (30) multiplicative_expression -> . multiplicative_expression DIV_OP unary_expression
    (31) multiplicative_expression -> . unary_expression
    (32) unary_expression -> . LOGICAL_OP_NOT unary_expression
    (33) unary_expression -> . primary_expression
    (34) primary_expression -> . LPAREN expression RPAREN
    (35) primary_expression -> . term
    (36) term -> . NUMBER_INTEGER
    (37) term -> . NUMBER_FLOAT
    (38) term -> . VARIABLE
    (39) term -> . TRUE
    (40) term -> . FALSE
    (41) term -> . NULL
    (42) term -> . TEXT_STRING
    (43) term -> . TEXT_CHAR

    $end            reduce using rule 1 (program -> statement_list .)
    COMMENT         shift and go to state 12
    VARIABLE        shift and go to state 14
    TYPE_BOOLEAN    shift and go to state 15
    TYPE_STRING     shift and go to state 16
    TYPE_CHAR       shift and go to state 17
    TYPE_INTEGER    shift and go to state 18
    TYPE_FLOAT      shift and go to state 19
    CONDITIONAL1    shift and go to state 20
    LOOP1           shift and go to state 22
    LOOP2           shift and go to state 23
    FUNCTION_DECLARATION shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    LOGICAL_OP_NOT  shift and go to state 33
    LPAREN          shift and go to state 21
    NUMBER_INTEGER  shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    NULL            shift and go to state 40
    TEXT_STRING     shift and go to state 41
    TEXT_CHAR       shift and go to state 42

    statement                      shift and go to state 43
    expression                     shift and go to state 4
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    function_declaration           shift and go to state 9
    return_statement               shift and go to state 10
    break_statement                shift and go to state 11
    logical_or_expression          shift and go to state 13
    logical_and_expression         shift and go to state 27
    equality_expression            shift and go to state 28
    relational_expression          shift and go to state 29
    additive_expression            shift and go to state 30
    multiplicative_expression      shift and go to state 31
    unary_expression               shift and go to state 32
    primary_expression             shift and go to state 34
    term                           shift and go to state 35

state 3

    (3) statement_list -> statement .

    COMMENT         reduce using rule 3 (statement_list -> statement .)
    VARIABLE        reduce using rule 3 (statement_list -> statement .)
    TYPE_BOOLEAN    reduce using rule 3 (statement_list -> statement .)
    TYPE_STRING     reduce using rule 3 (statement_list -> statement .)
    TYPE_CHAR       reduce using rule 3 (statement_list -> statement .)
    TYPE_INTEGER    reduce using rule 3 (statement_list -> statement .)
    TYPE_FLOAT      reduce using rule 3 (statement_list -> statement .)
    CONDITIONAL1    reduce using rule 3 (statement_list -> statement .)
    LOOP1           reduce using rule 3 (statement_list -> statement .)
    LOOP2           reduce using rule 3 (statement_list -> statement .)
    FUNCTION_DECLARATION reduce using rule 3 (statement_list -> statement .)
    RETURN          reduce using rule 3 (statement_list -> statement .)
    BREAK           reduce using rule 3 (statement_list -> statement .)
    LOGICAL_OP_NOT  reduce using rule 3 (statement_list -> statement .)
    LPAREN          reduce using rule 3 (statement_list -> statement .)
    NUMBER_INTEGER  reduce using rule 3 (statement_list -> statement .)
    NUMBER_FLOAT    reduce using rule 3 (statement_list -> statement .)
    TRUE            reduce using rule 3 (statement_list -> statement .)
    FALSE           reduce using rule 3 (statement_list -> statement .)
    NULL            reduce using rule 3 (statement_list -> statement .)
    TEXT_STRING     reduce using rule 3 (statement_list -> statement .)
    TEXT_CHAR       reduce using rule 3 (statement_list -> statement .)
    $end            reduce using rule 3 (statement_list -> statement .)
    CONDITIONAL2    reduce using rule 3 (statement_list -> statement .)
    END_LINE        reduce using rule 3 (statement_list -> statement .)


state 4

    (4) statement -> expression . END_LINE

    END_LINE        shift and go to state 44


state 5

    (5) statement -> assignment . END_LINE

    END_LINE        shift and go to state 45


state 6

    (6) statement -> declaration . END_LINE

    END_LINE        shift and go to state 46


state 7

    (7) statement -> conditional . END_LINE

    END_LINE        shift and go to state 47


state 8

    (8) statement -> loop . END_LINE

    END_LINE        shift and go to state 48


state 9

    (9) statement -> function_declaration . END_LINE

    END_LINE        shift and go to state 49


state 10

    (10) statement -> return_statement . END_LINE

    END_LINE        shift and go to state 50


state 11

    (11) statement -> break_statement . END_LINE

    END_LINE        shift and go to state 51


state 12

    (12) statement -> COMMENT .

    COMMENT         reduce using rule 12 (statement -> COMMENT .)
    VARIABLE        reduce using rule 12 (statement -> COMMENT .)
    TYPE_BOOLEAN    reduce using rule 12 (statement -> COMMENT .)
    TYPE_STRING     reduce using rule 12 (statement -> COMMENT .)
    TYPE_CHAR       reduce using rule 12 (statement -> COMMENT .)
    TYPE_INTEGER    reduce using rule 12 (statement -> COMMENT .)
    TYPE_FLOAT      reduce using rule 12 (statement -> COMMENT .)
    CONDITIONAL1    reduce using rule 12 (statement -> COMMENT .)
    LOOP1           reduce using rule 12 (statement -> COMMENT .)
    LOOP2           reduce using rule 12 (statement -> COMMENT .)
    FUNCTION_DECLARATION reduce using rule 12 (statement -> COMMENT .)
    RETURN          reduce using rule 12 (statement -> COMMENT .)
    BREAK           reduce using rule 12 (statement -> COMMENT .)
    LOGICAL_OP_NOT  reduce using rule 12 (statement -> COMMENT .)
    LPAREN          reduce using rule 12 (statement -> COMMENT .)
    NUMBER_INTEGER  reduce using rule 12 (statement -> COMMENT .)
    NUMBER_FLOAT    reduce using rule 12 (statement -> COMMENT .)
    TRUE            reduce using rule 12 (statement -> COMMENT .)
    FALSE           reduce using rule 12 (statement -> COMMENT .)
    NULL            reduce using rule 12 (statement -> COMMENT .)
    TEXT_STRING     reduce using rule 12 (statement -> COMMENT .)
    TEXT_CHAR       reduce using rule 12 (statement -> COMMENT .)
    $end            reduce using rule 12 (statement -> COMMENT .)
    CONDITIONAL2    reduce using rule 12 (statement -> COMMENT .)
    END_LINE        reduce using rule 12 (statement -> COMMENT .)


state 13

    (13) expression -> logical_or_expression .
    (14) logical_or_expression -> logical_or_expression . LOGICAL_OP_OR logical_and_expression

    END_LINE        reduce using rule 13 (expression -> logical_or_expression .)
    RPAREN          reduce using rule 13 (expression -> logical_or_expression .)
    SEPARATION      reduce using rule 13 (expression -> logical_or_expression .)
    LOGICAL_OP_OR   shift and go to state 52


state 14

    (44) assignment -> VARIABLE . ASSIGNMENT_OP expression
    (38) term -> VARIABLE .

    ASSIGNMENT_OP   shift and go to state 53
    MUL_OP          reduce using rule 38 (term -> VARIABLE .)
    DIV_OP          reduce using rule 38 (term -> VARIABLE .)
    PLUS_OP         reduce using rule 38 (term -> VARIABLE .)
    MINUS_OP        reduce using rule 38 (term -> VARIABLE .)
    LESS_OP         reduce using rule 38 (term -> VARIABLE .)
    LESS_EQUAL_OP   reduce using rule 38 (term -> VARIABLE .)
    GREATER_OP      reduce using rule 38 (term -> VARIABLE .)
    GREATER_EQUAL_OP reduce using rule 38 (term -> VARIABLE .)
    EQUAL_OP        reduce using rule 38 (term -> VARIABLE .)
    DIFFERENT_OP    reduce using rule 38 (term -> VARIABLE .)
    LOGICAL_OP_AND  reduce using rule 38 (term -> VARIABLE .)
    LOGICAL_OP_OR   reduce using rule 38 (term -> VARIABLE .)
    END_LINE        reduce using rule 38 (term -> VARIABLE .)


state 15

    (45) declaration -> TYPE_BOOLEAN . VARIABLE
    (50) declaration -> TYPE_BOOLEAN . assignment
    (44) assignment -> . VARIABLE ASSIGNMENT_OP expression

    VARIABLE        shift and go to state 54

    assignment                     shift and go to state 55

state 16

    (46) declaration -> TYPE_STRING . VARIABLE
    (51) declaration -> TYPE_STRING . assignment
    (44) assignment -> . VARIABLE ASSIGNMENT_OP expression

    VARIABLE        shift and go to state 56

    assignment                     shift and go to state 57

state 17

    (47) declaration -> TYPE_CHAR . VARIABLE
    (52) declaration -> TYPE_CHAR . assignment
    (44) assignment -> . VARIABLE ASSIGNMENT_OP expression

    VARIABLE        shift and go to state 58

    assignment                     shift and go to state 59

state 18

    (48) declaration -> TYPE_INTEGER . VARIABLE
    (53) declaration -> TYPE_INTEGER . assignment
    (44) assignment -> . VARIABLE ASSIGNMENT_OP expression

    VARIABLE        shift and go to state 60

    assignment                     shift and go to state 61

state 19

    (49) declaration -> TYPE_FLOAT . VARIABLE
    (54) declaration -> TYPE_FLOAT . assignment
    (44) assignment -> . VARIABLE ASSIGNMENT_OP expression

    VARIABLE        shift and go to state 62

    assignment                     shift and go to state 63

state 20

    (55) conditional -> CONDITIONAL1 . LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (56) conditional -> CONDITIONAL1 . LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list

    LPAREN          shift and go to state 64


state 21

    (34) primary_expression -> LPAREN . expression RPAREN
    (13) expression -> . logical_or_expression
    (14) logical_or_expression -> . logical_or_expression LOGICAL_OP_OR logical_and_expression
    (15) logical_or_expression -> . logical_and_expression
    (16) logical_and_expression -> . logical_and_expression LOGICAL_OP_AND equality_expression
    (17) logical_and_expression -> . equality_expression
    (18) equality_expression -> . equality_expression EQUAL_OP relational_expression
    (19) equality_expression -> . equality_expression DIFFERENT_OP relational_expression
    (20) equality_expression -> . relational_expression
    (21) relational_expression -> . relational_expression LESS_OP additive_expression
    (22) relational_expression -> . relational_expression LESS_EQUAL_OP additive_expression
    (23) relational_expression -> . relational_expression GREATER_OP additive_expression
    (24) relational_expression -> . relational_expression GREATER_EQUAL_OP additive_expression
    (25) relational_expression -> . additive_expression
    (26) additive_expression -> . additive_expression PLUS_OP multiplicative_expression
    (27) additive_expression -> . additive_expression MINUS_OP multiplicative_expression
    (28) additive_expression -> . multiplicative_expression
    (29) multiplicative_expression -> . multiplicative_expression MUL_OP unary_expression
    (30) multiplicative_expression -> . multiplicative_expression DIV_OP unary_expression
    (31) multiplicative_expression -> . unary_expression
    (32) unary_expression -> . LOGICAL_OP_NOT unary_expression
    (33) unary_expression -> . primary_expression
    (34) primary_expression -> . LPAREN expression RPAREN
    (35) primary_expression -> . term
    (36) term -> . NUMBER_INTEGER
    (37) term -> . NUMBER_FLOAT
    (38) term -> . VARIABLE
    (39) term -> . TRUE
    (40) term -> . FALSE
    (41) term -> . NULL
    (42) term -> . TEXT_STRING
    (43) term -> . TEXT_CHAR

    LOGICAL_OP_NOT  shift and go to state 33
    LPAREN          shift and go to state 21
    NUMBER_INTEGER  shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    VARIABLE        shift and go to state 66
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    NULL            shift and go to state 40
    TEXT_STRING     shift and go to state 41
    TEXT_CHAR       shift and go to state 42

    expression                     shift and go to state 65
    logical_or_expression          shift and go to state 13
    logical_and_expression         shift and go to state 27
    equality_expression            shift and go to state 28
    relational_expression          shift and go to state 29
    additive_expression            shift and go to state 30
    multiplicative_expression      shift and go to state 31
    unary_expression               shift and go to state 32
    primary_expression             shift and go to state 34
    term                           shift and go to state 35

state 22

    (57) loop -> LOOP1 . LPAREN expression RPAREN STRUCTURE_BODY statement_list

    LPAREN          shift and go to state 67


state 23

    (58) loop -> LOOP2 . LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list

    LPAREN          shift and go to state 68


state 24

    (59) function_declaration -> FUNCTION_DECLARATION . VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list

    VARIABLE        shift and go to state 69


state 25

    (60) return_statement -> RETURN . expression
    (61) return_statement -> RETURN .
    (13) expression -> . logical_or_expression
    (14) logical_or_expression -> . logical_or_expression LOGICAL_OP_OR logical_and_expression
    (15) logical_or_expression -> . logical_and_expression
    (16) logical_and_expression -> . logical_and_expression LOGICAL_OP_AND equality_expression
    (17) logical_and_expression -> . equality_expression
    (18) equality_expression -> . equality_expression EQUAL_OP relational_expression
    (19) equality_expression -> . equality_expression DIFFERENT_OP relational_expression
    (20) equality_expression -> . relational_expression
    (21) relational_expression -> . relational_expression LESS_OP additive_expression
    (22) relational_expression -> . relational_expression LESS_EQUAL_OP additive_expression
    (23) relational_expression -> . relational_expression GREATER_OP additive_expression
    (24) relational_expression -> . relational_expression GREATER_EQUAL_OP additive_expression
    (25) relational_expression -> . additive_expression
    (26) additive_expression -> . additive_expression PLUS_OP multiplicative_expression
    (27) additive_expression -> . additive_expression MINUS_OP multiplicative_expression
    (28) additive_expression -> . multiplicative_expression
    (29) multiplicative_expression -> . multiplicative_expression MUL_OP unary_expression
    (30) multiplicative_expression -> . multiplicative_expression DIV_OP unary_expression
    (31) multiplicative_expression -> . unary_expression
    (32) unary_expression -> . LOGICAL_OP_NOT unary_expression
    (33) unary_expression -> . primary_expression
    (34) primary_expression -> . LPAREN expression RPAREN
    (35) primary_expression -> . term
    (36) term -> . NUMBER_INTEGER
    (37) term -> . NUMBER_FLOAT
    (38) term -> . VARIABLE
    (39) term -> . TRUE
    (40) term -> . FALSE
    (41) term -> . NULL
    (42) term -> . TEXT_STRING
    (43) term -> . TEXT_CHAR

    END_LINE        reduce using rule 61 (return_statement -> RETURN .)
    LOGICAL_OP_NOT  shift and go to state 33
    LPAREN          shift and go to state 21
    NUMBER_INTEGER  shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    VARIABLE        shift and go to state 66
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    NULL            shift and go to state 40
    TEXT_STRING     shift and go to state 41
    TEXT_CHAR       shift and go to state 42

    expression                     shift and go to state 70
    logical_or_expression          shift and go to state 13
    logical_and_expression         shift and go to state 27
    equality_expression            shift and go to state 28
    relational_expression          shift and go to state 29
    additive_expression            shift and go to state 30
    multiplicative_expression      shift and go to state 31
    unary_expression               shift and go to state 32
    primary_expression             shift and go to state 34
    term                           shift and go to state 35

state 26

    (62) break_statement -> BREAK .

    END_LINE        reduce using rule 62 (break_statement -> BREAK .)


state 27

    (15) logical_or_expression -> logical_and_expression .
    (16) logical_and_expression -> logical_and_expression . LOGICAL_OP_AND equality_expression

    LOGICAL_OP_OR   reduce using rule 15 (logical_or_expression -> logical_and_expression .)
    END_LINE        reduce using rule 15 (logical_or_expression -> logical_and_expression .)
    RPAREN          reduce using rule 15 (logical_or_expression -> logical_and_expression .)
    SEPARATION      reduce using rule 15 (logical_or_expression -> logical_and_expression .)
    LOGICAL_OP_AND  shift and go to state 71


state 28

    (17) logical_and_expression -> equality_expression .
    (18) equality_expression -> equality_expression . EQUAL_OP relational_expression
    (19) equality_expression -> equality_expression . DIFFERENT_OP relational_expression

    LOGICAL_OP_AND  reduce using rule 17 (logical_and_expression -> equality_expression .)
    LOGICAL_OP_OR   reduce using rule 17 (logical_and_expression -> equality_expression .)
    END_LINE        reduce using rule 17 (logical_and_expression -> equality_expression .)
    RPAREN          reduce using rule 17 (logical_and_expression -> equality_expression .)
    SEPARATION      reduce using rule 17 (logical_and_expression -> equality_expression .)
    EQUAL_OP        shift and go to state 72
    DIFFERENT_OP    shift and go to state 73


state 29

    (20) equality_expression -> relational_expression .
    (21) relational_expression -> relational_expression . LESS_OP additive_expression
    (22) relational_expression -> relational_expression . LESS_EQUAL_OP additive_expression
    (23) relational_expression -> relational_expression . GREATER_OP additive_expression
    (24) relational_expression -> relational_expression . GREATER_EQUAL_OP additive_expression

    EQUAL_OP        reduce using rule 20 (equality_expression -> relational_expression .)
    DIFFERENT_OP    reduce using rule 20 (equality_expression -> relational_expression .)
    LOGICAL_OP_AND  reduce using rule 20 (equality_expression -> relational_expression .)
    LOGICAL_OP_OR   reduce using rule 20 (equality_expression -> relational_expression .)
    END_LINE        reduce using rule 20 (equality_expression -> relational_expression .)
    RPAREN          reduce using rule 20 (equality_expression -> relational_expression .)
    SEPARATION      reduce using rule 20 (equality_expression -> relational_expression .)
    LESS_OP         shift and go to state 74
    LESS_EQUAL_OP   shift and go to state 75
    GREATER_OP      shift and go to state 76
    GREATER_EQUAL_OP shift and go to state 77


state 30

    (25) relational_expression -> additive_expression .
    (26) additive_expression -> additive_expression . PLUS_OP multiplicative_expression
    (27) additive_expression -> additive_expression . MINUS_OP multiplicative_expression

    LESS_OP         reduce using rule 25 (relational_expression -> additive_expression .)
    LESS_EQUAL_OP   reduce using rule 25 (relational_expression -> additive_expression .)
    GREATER_OP      reduce using rule 25 (relational_expression -> additive_expression .)
    GREATER_EQUAL_OP reduce using rule 25 (relational_expression -> additive_expression .)
    EQUAL_OP        reduce using rule 25 (relational_expression -> additive_expression .)
    DIFFERENT_OP    reduce using rule 25 (relational_expression -> additive_expression .)
    LOGICAL_OP_AND  reduce using rule 25 (relational_expression -> additive_expression .)
    LOGICAL_OP_OR   reduce using rule 25 (relational_expression -> additive_expression .)
    END_LINE        reduce using rule 25 (relational_expression -> additive_expression .)
    RPAREN          reduce using rule 25 (relational_expression -> additive_expression .)
    SEPARATION      reduce using rule 25 (relational_expression -> additive_expression .)
    PLUS_OP         shift and go to state 78
    MINUS_OP        shift and go to state 79


state 31

    (28) additive_expression -> multiplicative_expression .
    (29) multiplicative_expression -> multiplicative_expression . MUL_OP unary_expression
    (30) multiplicative_expression -> multiplicative_expression . DIV_OP unary_expression

    PLUS_OP         reduce using rule 28 (additive_expression -> multiplicative_expression .)
    MINUS_OP        reduce using rule 28 (additive_expression -> multiplicative_expression .)
    LESS_OP         reduce using rule 28 (additive_expression -> multiplicative_expression .)
    LESS_EQUAL_OP   reduce using rule 28 (additive_expression -> multiplicative_expression .)
    GREATER_OP      reduce using rule 28 (additive_expression -> multiplicative_expression .)
    GREATER_EQUAL_OP reduce using rule 28 (additive_expression -> multiplicative_expression .)
    EQUAL_OP        reduce using rule 28 (additive_expression -> multiplicative_expression .)
    DIFFERENT_OP    reduce using rule 28 (additive_expression -> multiplicative_expression .)
    LOGICAL_OP_AND  reduce using rule 28 (additive_expression -> multiplicative_expression .)
    LOGICAL_OP_OR   reduce using rule 28 (additive_expression -> multiplicative_expression .)
    END_LINE        reduce using rule 28 (additive_expression -> multiplicative_expression .)
    RPAREN          reduce using rule 28 (additive_expression -> multiplicative_expression .)
    SEPARATION      reduce using rule 28 (additive_expression -> multiplicative_expression .)
    MUL_OP          shift and go to state 80
    DIV_OP          shift and go to state 81


state 32

    (31) multiplicative_expression -> unary_expression .

    MUL_OP          reduce using rule 31 (multiplicative_expression -> unary_expression .)
    DIV_OP          reduce using rule 31 (multiplicative_expression -> unary_expression .)
    PLUS_OP         reduce using rule 31 (multiplicative_expression -> unary_expression .)
    MINUS_OP        reduce using rule 31 (multiplicative_expression -> unary_expression .)
    LESS_OP         reduce using rule 31 (multiplicative_expression -> unary_expression .)
    LESS_EQUAL_OP   reduce using rule 31 (multiplicative_expression -> unary_expression .)
    GREATER_OP      reduce using rule 31 (multiplicative_expression -> unary_expression .)
    GREATER_EQUAL_OP reduce using rule 31 (multiplicative_expression -> unary_expression .)
    EQUAL_OP        reduce using rule 31 (multiplicative_expression -> unary_expression .)
    DIFFERENT_OP    reduce using rule 31 (multiplicative_expression -> unary_expression .)
    LOGICAL_OP_AND  reduce using rule 31 (multiplicative_expression -> unary_expression .)
    LOGICAL_OP_OR   reduce using rule 31 (multiplicative_expression -> unary_expression .)
    END_LINE        reduce using rule 31 (multiplicative_expression -> unary_expression .)
    RPAREN          reduce using rule 31 (multiplicative_expression -> unary_expression .)
    SEPARATION      reduce using rule 31 (multiplicative_expression -> unary_expression .)


state 33

    (32) unary_expression -> LOGICAL_OP_NOT . unary_expression
    (32) unary_expression -> . LOGICAL_OP_NOT unary_expression
    (33) unary_expression -> . primary_expression
    (34) primary_expression -> . LPAREN expression RPAREN
    (35) primary_expression -> . term
    (36) term -> . NUMBER_INTEGER
    (37) term -> . NUMBER_FLOAT
    (38) term -> . VARIABLE
    (39) term -> . TRUE
    (40) term -> . FALSE
    (41) term -> . NULL
    (42) term -> . TEXT_STRING
    (43) term -> . TEXT_CHAR

    LOGICAL_OP_NOT  shift and go to state 33
    LPAREN          shift and go to state 21
    NUMBER_INTEGER  shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    VARIABLE        shift and go to state 66
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    NULL            shift and go to state 40
    TEXT_STRING     shift and go to state 41
    TEXT_CHAR       shift and go to state 42

    unary_expression               shift and go to state 82
    primary_expression             shift and go to state 34
    term                           shift and go to state 35

state 34

    (33) unary_expression -> primary_expression .

    MUL_OP          reduce using rule 33 (unary_expression -> primary_expression .)
    DIV_OP          reduce using rule 33 (unary_expression -> primary_expression .)
    PLUS_OP         reduce using rule 33 (unary_expression -> primary_expression .)
    MINUS_OP        reduce using rule 33 (unary_expression -> primary_expression .)
    LESS_OP         reduce using rule 33 (unary_expression -> primary_expression .)
    LESS_EQUAL_OP   reduce using rule 33 (unary_expression -> primary_expression .)
    GREATER_OP      reduce using rule 33 (unary_expression -> primary_expression .)
    GREATER_EQUAL_OP reduce using rule 33 (unary_expression -> primary_expression .)
    EQUAL_OP        reduce using rule 33 (unary_expression -> primary_expression .)
    DIFFERENT_OP    reduce using rule 33 (unary_expression -> primary_expression .)
    LOGICAL_OP_AND  reduce using rule 33 (unary_expression -> primary_expression .)
    LOGICAL_OP_OR   reduce using rule 33 (unary_expression -> primary_expression .)
    END_LINE        reduce using rule 33 (unary_expression -> primary_expression .)
    RPAREN          reduce using rule 33 (unary_expression -> primary_expression .)
    SEPARATION      reduce using rule 33 (unary_expression -> primary_expression .)


state 35

    (35) primary_expression -> term .

    MUL_OP          reduce using rule 35 (primary_expression -> term .)
    DIV_OP          reduce using rule 35 (primary_expression -> term .)
    PLUS_OP         reduce using rule 35 (primary_expression -> term .)
    MINUS_OP        reduce using rule 35 (primary_expression -> term .)
    LESS_OP         reduce using rule 35 (primary_expression -> term .)
    LESS_EQUAL_OP   reduce using rule 35 (primary_expression -> term .)
    GREATER_OP      reduce using rule 35 (primary_expression -> term .)
    GREATER_EQUAL_OP reduce using rule 35 (primary_expression -> term .)
    EQUAL_OP        reduce using rule 35 (primary_expression -> term .)
    DIFFERENT_OP    reduce using rule 35 (primary_expression -> term .)
    LOGICAL_OP_AND  reduce using rule 35 (primary_expression -> term .)
    LOGICAL_OP_OR   reduce using rule 35 (primary_expression -> term .)
    END_LINE        reduce using rule 35 (primary_expression -> term .)
    RPAREN          reduce using rule 35 (primary_expression -> term .)
    SEPARATION      reduce using rule 35 (primary_expression -> term .)


state 36

    (36) term -> NUMBER_INTEGER .

    MUL_OP          reduce using rule 36 (term -> NUMBER_INTEGER .)
    DIV_OP          reduce using rule 36 (term -> NUMBER_INTEGER .)
    PLUS_OP         reduce using rule 36 (term -> NUMBER_INTEGER .)
    MINUS_OP        reduce using rule 36 (term -> NUMBER_INTEGER .)
    LESS_OP         reduce using rule 36 (term -> NUMBER_INTEGER .)
    LESS_EQUAL_OP   reduce using rule 36 (term -> NUMBER_INTEGER .)
    GREATER_OP      reduce using rule 36 (term -> NUMBER_INTEGER .)
    GREATER_EQUAL_OP reduce using rule 36 (term -> NUMBER_INTEGER .)
    EQUAL_OP        reduce using rule 36 (term -> NUMBER_INTEGER .)
    DIFFERENT_OP    reduce using rule 36 (term -> NUMBER_INTEGER .)
    LOGICAL_OP_AND  reduce using rule 36 (term -> NUMBER_INTEGER .)
    LOGICAL_OP_OR   reduce using rule 36 (term -> NUMBER_INTEGER .)
    END_LINE        reduce using rule 36 (term -> NUMBER_INTEGER .)
    RPAREN          reduce using rule 36 (term -> NUMBER_INTEGER .)
    SEPARATION      reduce using rule 36 (term -> NUMBER_INTEGER .)


state 37

    (37) term -> NUMBER_FLOAT .

    MUL_OP          reduce using rule 37 (term -> NUMBER_FLOAT .)
    DIV_OP          reduce using rule 37 (term -> NUMBER_FLOAT .)
    PLUS_OP         reduce using rule 37 (term -> NUMBER_FLOAT .)
    MINUS_OP        reduce using rule 37 (term -> NUMBER_FLOAT .)
    LESS_OP         reduce using rule 37 (term -> NUMBER_FLOAT .)
    LESS_EQUAL_OP   reduce using rule 37 (term -> NUMBER_FLOAT .)
    GREATER_OP      reduce using rule 37 (term -> NUMBER_FLOAT .)
    GREATER_EQUAL_OP reduce using rule 37 (term -> NUMBER_FLOAT .)
    EQUAL_OP        reduce using rule 37 (term -> NUMBER_FLOAT .)
    DIFFERENT_OP    reduce using rule 37 (term -> NUMBER_FLOAT .)
    LOGICAL_OP_AND  reduce using rule 37 (term -> NUMBER_FLOAT .)
    LOGICAL_OP_OR   reduce using rule 37 (term -> NUMBER_FLOAT .)
    END_LINE        reduce using rule 37 (term -> NUMBER_FLOAT .)
    RPAREN          reduce using rule 37 (term -> NUMBER_FLOAT .)
    SEPARATION      reduce using rule 37 (term -> NUMBER_FLOAT .)


state 38

    (39) term -> TRUE .

    MUL_OP          reduce using rule 39 (term -> TRUE .)
    DIV_OP          reduce using rule 39 (term -> TRUE .)
    PLUS_OP         reduce using rule 39 (term -> TRUE .)
    MINUS_OP        reduce using rule 39 (term -> TRUE .)
    LESS_OP         reduce using rule 39 (term -> TRUE .)
    LESS_EQUAL_OP   reduce using rule 39 (term -> TRUE .)
    GREATER_OP      reduce using rule 39 (term -> TRUE .)
    GREATER_EQUAL_OP reduce using rule 39 (term -> TRUE .)
    EQUAL_OP        reduce using rule 39 (term -> TRUE .)
    DIFFERENT_OP    reduce using rule 39 (term -> TRUE .)
    LOGICAL_OP_AND  reduce using rule 39 (term -> TRUE .)
    LOGICAL_OP_OR   reduce using rule 39 (term -> TRUE .)
    END_LINE        reduce using rule 39 (term -> TRUE .)
    RPAREN          reduce using rule 39 (term -> TRUE .)
    SEPARATION      reduce using rule 39 (term -> TRUE .)


state 39

    (40) term -> FALSE .

    MUL_OP          reduce using rule 40 (term -> FALSE .)
    DIV_OP          reduce using rule 40 (term -> FALSE .)
    PLUS_OP         reduce using rule 40 (term -> FALSE .)
    MINUS_OP        reduce using rule 40 (term -> FALSE .)
    LESS_OP         reduce using rule 40 (term -> FALSE .)
    LESS_EQUAL_OP   reduce using rule 40 (term -> FALSE .)
    GREATER_OP      reduce using rule 40 (term -> FALSE .)
    GREATER_EQUAL_OP reduce using rule 40 (term -> FALSE .)
    EQUAL_OP        reduce using rule 40 (term -> FALSE .)
    DIFFERENT_OP    reduce using rule 40 (term -> FALSE .)
    LOGICAL_OP_AND  reduce using rule 40 (term -> FALSE .)
    LOGICAL_OP_OR   reduce using rule 40 (term -> FALSE .)
    END_LINE        reduce using rule 40 (term -> FALSE .)
    RPAREN          reduce using rule 40 (term -> FALSE .)
    SEPARATION      reduce using rule 40 (term -> FALSE .)


state 40

    (41) term -> NULL .

    MUL_OP          reduce using rule 41 (term -> NULL .)
    DIV_OP          reduce using rule 41 (term -> NULL .)
    PLUS_OP         reduce using rule 41 (term -> NULL .)
    MINUS_OP        reduce using rule 41 (term -> NULL .)
    LESS_OP         reduce using rule 41 (term -> NULL .)
    LESS_EQUAL_OP   reduce using rule 41 (term -> NULL .)
    GREATER_OP      reduce using rule 41 (term -> NULL .)
    GREATER_EQUAL_OP reduce using rule 41 (term -> NULL .)
    EQUAL_OP        reduce using rule 41 (term -> NULL .)
    DIFFERENT_OP    reduce using rule 41 (term -> NULL .)
    LOGICAL_OP_AND  reduce using rule 41 (term -> NULL .)
    LOGICAL_OP_OR   reduce using rule 41 (term -> NULL .)
    END_LINE        reduce using rule 41 (term -> NULL .)
    RPAREN          reduce using rule 41 (term -> NULL .)
    SEPARATION      reduce using rule 41 (term -> NULL .)


state 41

    (42) term -> TEXT_STRING .

    MUL_OP          reduce using rule 42 (term -> TEXT_STRING .)
    DIV_OP          reduce using rule 42 (term -> TEXT_STRING .)
    PLUS_OP         reduce using rule 42 (term -> TEXT_STRING .)
    MINUS_OP        reduce using rule 42 (term -> TEXT_STRING .)
    LESS_OP         reduce using rule 42 (term -> TEXT_STRING .)
    LESS_EQUAL_OP   reduce using rule 42 (term -> TEXT_STRING .)
    GREATER_OP      reduce using rule 42 (term -> TEXT_STRING .)
    GREATER_EQUAL_OP reduce using rule 42 (term -> TEXT_STRING .)
    EQUAL_OP        reduce using rule 42 (term -> TEXT_STRING .)
    DIFFERENT_OP    reduce using rule 42 (term -> TEXT_STRING .)
    LOGICAL_OP_AND  reduce using rule 42 (term -> TEXT_STRING .)
    LOGICAL_OP_OR   reduce using rule 42 (term -> TEXT_STRING .)
    END_LINE        reduce using rule 42 (term -> TEXT_STRING .)
    RPAREN          reduce using rule 42 (term -> TEXT_STRING .)
    SEPARATION      reduce using rule 42 (term -> TEXT_STRING .)


state 42

    (43) term -> TEXT_CHAR .

    MUL_OP          reduce using rule 43 (term -> TEXT_CHAR .)
    DIV_OP          reduce using rule 43 (term -> TEXT_CHAR .)
    PLUS_OP         reduce using rule 43 (term -> TEXT_CHAR .)
    MINUS_OP        reduce using rule 43 (term -> TEXT_CHAR .)
    LESS_OP         reduce using rule 43 (term -> TEXT_CHAR .)
    LESS_EQUAL_OP   reduce using rule 43 (term -> TEXT_CHAR .)
    GREATER_OP      reduce using rule 43 (term -> TEXT_CHAR .)
    GREATER_EQUAL_OP reduce using rule 43 (term -> TEXT_CHAR .)
    EQUAL_OP        reduce using rule 43 (term -> TEXT_CHAR .)
    DIFFERENT_OP    reduce using rule 43 (term -> TEXT_CHAR .)
    LOGICAL_OP_AND  reduce using rule 43 (term -> TEXT_CHAR .)
    LOGICAL_OP_OR   reduce using rule 43 (term -> TEXT_CHAR .)
    END_LINE        reduce using rule 43 (term -> TEXT_CHAR .)
    RPAREN          reduce using rule 43 (term -> TEXT_CHAR .)
    SEPARATION      reduce using rule 43 (term -> TEXT_CHAR .)


state 43

    (2) statement_list -> statement_list statement .

    COMMENT         reduce using rule 2 (statement_list -> statement_list statement .)
    VARIABLE        reduce using rule 2 (statement_list -> statement_list statement .)
    TYPE_BOOLEAN    reduce using rule 2 (statement_list -> statement_list statement .)
    TYPE_STRING     reduce using rule 2 (statement_list -> statement_list statement .)
    TYPE_CHAR       reduce using rule 2 (statement_list -> statement_list statement .)
    TYPE_INTEGER    reduce using rule 2 (statement_list -> statement_list statement .)
    TYPE_FLOAT      reduce using rule 2 (statement_list -> statement_list statement .)
    CONDITIONAL1    reduce using rule 2 (statement_list -> statement_list statement .)
    LOOP1           reduce using rule 2 (statement_list -> statement_list statement .)
    LOOP2           reduce using rule 2 (statement_list -> statement_list statement .)
    FUNCTION_DECLARATION reduce using rule 2 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 2 (statement_list -> statement_list statement .)
    BREAK           reduce using rule 2 (statement_list -> statement_list statement .)
    LOGICAL_OP_NOT  reduce using rule 2 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 2 (statement_list -> statement_list statement .)
    NUMBER_INTEGER  reduce using rule 2 (statement_list -> statement_list statement .)
    NUMBER_FLOAT    reduce using rule 2 (statement_list -> statement_list statement .)
    TRUE            reduce using rule 2 (statement_list -> statement_list statement .)
    FALSE           reduce using rule 2 (statement_list -> statement_list statement .)
    NULL            reduce using rule 2 (statement_list -> statement_list statement .)
    TEXT_STRING     reduce using rule 2 (statement_list -> statement_list statement .)
    TEXT_CHAR       reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)
    CONDITIONAL2    reduce using rule 2 (statement_list -> statement_list statement .)
    END_LINE        reduce using rule 2 (statement_list -> statement_list statement .)


state 44

    (4) statement -> expression END_LINE .

    COMMENT         reduce using rule 4 (statement -> expression END_LINE .)
    VARIABLE        reduce using rule 4 (statement -> expression END_LINE .)
    TYPE_BOOLEAN    reduce using rule 4 (statement -> expression END_LINE .)
    TYPE_STRING     reduce using rule 4 (statement -> expression END_LINE .)
    TYPE_CHAR       reduce using rule 4 (statement -> expression END_LINE .)
    TYPE_INTEGER    reduce using rule 4 (statement -> expression END_LINE .)
    TYPE_FLOAT      reduce using rule 4 (statement -> expression END_LINE .)
    CONDITIONAL1    reduce using rule 4 (statement -> expression END_LINE .)
    LOOP1           reduce using rule 4 (statement -> expression END_LINE .)
    LOOP2           reduce using rule 4 (statement -> expression END_LINE .)
    FUNCTION_DECLARATION reduce using rule 4 (statement -> expression END_LINE .)
    RETURN          reduce using rule 4 (statement -> expression END_LINE .)
    BREAK           reduce using rule 4 (statement -> expression END_LINE .)
    LOGICAL_OP_NOT  reduce using rule 4 (statement -> expression END_LINE .)
    LPAREN          reduce using rule 4 (statement -> expression END_LINE .)
    NUMBER_INTEGER  reduce using rule 4 (statement -> expression END_LINE .)
    NUMBER_FLOAT    reduce using rule 4 (statement -> expression END_LINE .)
    TRUE            reduce using rule 4 (statement -> expression END_LINE .)
    FALSE           reduce using rule 4 (statement -> expression END_LINE .)
    NULL            reduce using rule 4 (statement -> expression END_LINE .)
    TEXT_STRING     reduce using rule 4 (statement -> expression END_LINE .)
    TEXT_CHAR       reduce using rule 4 (statement -> expression END_LINE .)
    $end            reduce using rule 4 (statement -> expression END_LINE .)
    CONDITIONAL2    reduce using rule 4 (statement -> expression END_LINE .)
    END_LINE        reduce using rule 4 (statement -> expression END_LINE .)


state 45

    (5) statement -> assignment END_LINE .

    COMMENT         reduce using rule 5 (statement -> assignment END_LINE .)
    VARIABLE        reduce using rule 5 (statement -> assignment END_LINE .)
    TYPE_BOOLEAN    reduce using rule 5 (statement -> assignment END_LINE .)
    TYPE_STRING     reduce using rule 5 (statement -> assignment END_LINE .)
    TYPE_CHAR       reduce using rule 5 (statement -> assignment END_LINE .)
    TYPE_INTEGER    reduce using rule 5 (statement -> assignment END_LINE .)
    TYPE_FLOAT      reduce using rule 5 (statement -> assignment END_LINE .)
    CONDITIONAL1    reduce using rule 5 (statement -> assignment END_LINE .)
    LOOP1           reduce using rule 5 (statement -> assignment END_LINE .)
    LOOP2           reduce using rule 5 (statement -> assignment END_LINE .)
    FUNCTION_DECLARATION reduce using rule 5 (statement -> assignment END_LINE .)
    RETURN          reduce using rule 5 (statement -> assignment END_LINE .)
    BREAK           reduce using rule 5 (statement -> assignment END_LINE .)
    LOGICAL_OP_NOT  reduce using rule 5 (statement -> assignment END_LINE .)
    LPAREN          reduce using rule 5 (statement -> assignment END_LINE .)
    NUMBER_INTEGER  reduce using rule 5 (statement -> assignment END_LINE .)
    NUMBER_FLOAT    reduce using rule 5 (statement -> assignment END_LINE .)
    TRUE            reduce using rule 5 (statement -> assignment END_LINE .)
    FALSE           reduce using rule 5 (statement -> assignment END_LINE .)
    NULL            reduce using rule 5 (statement -> assignment END_LINE .)
    TEXT_STRING     reduce using rule 5 (statement -> assignment END_LINE .)
    TEXT_CHAR       reduce using rule 5 (statement -> assignment END_LINE .)
    $end            reduce using rule 5 (statement -> assignment END_LINE .)
    CONDITIONAL2    reduce using rule 5 (statement -> assignment END_LINE .)
    END_LINE        reduce using rule 5 (statement -> assignment END_LINE .)


state 46

    (6) statement -> declaration END_LINE .

    COMMENT         reduce using rule 6 (statement -> declaration END_LINE .)
    VARIABLE        reduce using rule 6 (statement -> declaration END_LINE .)
    TYPE_BOOLEAN    reduce using rule 6 (statement -> declaration END_LINE .)
    TYPE_STRING     reduce using rule 6 (statement -> declaration END_LINE .)
    TYPE_CHAR       reduce using rule 6 (statement -> declaration END_LINE .)
    TYPE_INTEGER    reduce using rule 6 (statement -> declaration END_LINE .)
    TYPE_FLOAT      reduce using rule 6 (statement -> declaration END_LINE .)
    CONDITIONAL1    reduce using rule 6 (statement -> declaration END_LINE .)
    LOOP1           reduce using rule 6 (statement -> declaration END_LINE .)
    LOOP2           reduce using rule 6 (statement -> declaration END_LINE .)
    FUNCTION_DECLARATION reduce using rule 6 (statement -> declaration END_LINE .)
    RETURN          reduce using rule 6 (statement -> declaration END_LINE .)
    BREAK           reduce using rule 6 (statement -> declaration END_LINE .)
    LOGICAL_OP_NOT  reduce using rule 6 (statement -> declaration END_LINE .)
    LPAREN          reduce using rule 6 (statement -> declaration END_LINE .)
    NUMBER_INTEGER  reduce using rule 6 (statement -> declaration END_LINE .)
    NUMBER_FLOAT    reduce using rule 6 (statement -> declaration END_LINE .)
    TRUE            reduce using rule 6 (statement -> declaration END_LINE .)
    FALSE           reduce using rule 6 (statement -> declaration END_LINE .)
    NULL            reduce using rule 6 (statement -> declaration END_LINE .)
    TEXT_STRING     reduce using rule 6 (statement -> declaration END_LINE .)
    TEXT_CHAR       reduce using rule 6 (statement -> declaration END_LINE .)
    $end            reduce using rule 6 (statement -> declaration END_LINE .)
    CONDITIONAL2    reduce using rule 6 (statement -> declaration END_LINE .)
    END_LINE        reduce using rule 6 (statement -> declaration END_LINE .)


state 47

    (7) statement -> conditional END_LINE .

    COMMENT         reduce using rule 7 (statement -> conditional END_LINE .)
    VARIABLE        reduce using rule 7 (statement -> conditional END_LINE .)
    TYPE_BOOLEAN    reduce using rule 7 (statement -> conditional END_LINE .)
    TYPE_STRING     reduce using rule 7 (statement -> conditional END_LINE .)
    TYPE_CHAR       reduce using rule 7 (statement -> conditional END_LINE .)
    TYPE_INTEGER    reduce using rule 7 (statement -> conditional END_LINE .)
    TYPE_FLOAT      reduce using rule 7 (statement -> conditional END_LINE .)
    CONDITIONAL1    reduce using rule 7 (statement -> conditional END_LINE .)
    LOOP1           reduce using rule 7 (statement -> conditional END_LINE .)
    LOOP2           reduce using rule 7 (statement -> conditional END_LINE .)
    FUNCTION_DECLARATION reduce using rule 7 (statement -> conditional END_LINE .)
    RETURN          reduce using rule 7 (statement -> conditional END_LINE .)
    BREAK           reduce using rule 7 (statement -> conditional END_LINE .)
    LOGICAL_OP_NOT  reduce using rule 7 (statement -> conditional END_LINE .)
    LPAREN          reduce using rule 7 (statement -> conditional END_LINE .)
    NUMBER_INTEGER  reduce using rule 7 (statement -> conditional END_LINE .)
    NUMBER_FLOAT    reduce using rule 7 (statement -> conditional END_LINE .)
    TRUE            reduce using rule 7 (statement -> conditional END_LINE .)
    FALSE           reduce using rule 7 (statement -> conditional END_LINE .)
    NULL            reduce using rule 7 (statement -> conditional END_LINE .)
    TEXT_STRING     reduce using rule 7 (statement -> conditional END_LINE .)
    TEXT_CHAR       reduce using rule 7 (statement -> conditional END_LINE .)
    $end            reduce using rule 7 (statement -> conditional END_LINE .)
    CONDITIONAL2    reduce using rule 7 (statement -> conditional END_LINE .)
    END_LINE        reduce using rule 7 (statement -> conditional END_LINE .)


state 48

    (8) statement -> loop END_LINE .

    COMMENT         reduce using rule 8 (statement -> loop END_LINE .)
    VARIABLE        reduce using rule 8 (statement -> loop END_LINE .)
    TYPE_BOOLEAN    reduce using rule 8 (statement -> loop END_LINE .)
    TYPE_STRING     reduce using rule 8 (statement -> loop END_LINE .)
    TYPE_CHAR       reduce using rule 8 (statement -> loop END_LINE .)
    TYPE_INTEGER    reduce using rule 8 (statement -> loop END_LINE .)
    TYPE_FLOAT      reduce using rule 8 (statement -> loop END_LINE .)
    CONDITIONAL1    reduce using rule 8 (statement -> loop END_LINE .)
    LOOP1           reduce using rule 8 (statement -> loop END_LINE .)
    LOOP2           reduce using rule 8 (statement -> loop END_LINE .)
    FUNCTION_DECLARATION reduce using rule 8 (statement -> loop END_LINE .)
    RETURN          reduce using rule 8 (statement -> loop END_LINE .)
    BREAK           reduce using rule 8 (statement -> loop END_LINE .)
    LOGICAL_OP_NOT  reduce using rule 8 (statement -> loop END_LINE .)
    LPAREN          reduce using rule 8 (statement -> loop END_LINE .)
    NUMBER_INTEGER  reduce using rule 8 (statement -> loop END_LINE .)
    NUMBER_FLOAT    reduce using rule 8 (statement -> loop END_LINE .)
    TRUE            reduce using rule 8 (statement -> loop END_LINE .)
    FALSE           reduce using rule 8 (statement -> loop END_LINE .)
    NULL            reduce using rule 8 (statement -> loop END_LINE .)
    TEXT_STRING     reduce using rule 8 (statement -> loop END_LINE .)
    TEXT_CHAR       reduce using rule 8 (statement -> loop END_LINE .)
    $end            reduce using rule 8 (statement -> loop END_LINE .)
    CONDITIONAL2    reduce using rule 8 (statement -> loop END_LINE .)
    END_LINE        reduce using rule 8 (statement -> loop END_LINE .)


state 49

    (9) statement -> function_declaration END_LINE .

    COMMENT         reduce using rule 9 (statement -> function_declaration END_LINE .)
    VARIABLE        reduce using rule 9 (statement -> function_declaration END_LINE .)
    TYPE_BOOLEAN    reduce using rule 9 (statement -> function_declaration END_LINE .)
    TYPE_STRING     reduce using rule 9 (statement -> function_declaration END_LINE .)
    TYPE_CHAR       reduce using rule 9 (statement -> function_declaration END_LINE .)
    TYPE_INTEGER    reduce using rule 9 (statement -> function_declaration END_LINE .)
    TYPE_FLOAT      reduce using rule 9 (statement -> function_declaration END_LINE .)
    CONDITIONAL1    reduce using rule 9 (statement -> function_declaration END_LINE .)
    LOOP1           reduce using rule 9 (statement -> function_declaration END_LINE .)
    LOOP2           reduce using rule 9 (statement -> function_declaration END_LINE .)
    FUNCTION_DECLARATION reduce using rule 9 (statement -> function_declaration END_LINE .)
    RETURN          reduce using rule 9 (statement -> function_declaration END_LINE .)
    BREAK           reduce using rule 9 (statement -> function_declaration END_LINE .)
    LOGICAL_OP_NOT  reduce using rule 9 (statement -> function_declaration END_LINE .)
    LPAREN          reduce using rule 9 (statement -> function_declaration END_LINE .)
    NUMBER_INTEGER  reduce using rule 9 (statement -> function_declaration END_LINE .)
    NUMBER_FLOAT    reduce using rule 9 (statement -> function_declaration END_LINE .)
    TRUE            reduce using rule 9 (statement -> function_declaration END_LINE .)
    FALSE           reduce using rule 9 (statement -> function_declaration END_LINE .)
    NULL            reduce using rule 9 (statement -> function_declaration END_LINE .)
    TEXT_STRING     reduce using rule 9 (statement -> function_declaration END_LINE .)
    TEXT_CHAR       reduce using rule 9 (statement -> function_declaration END_LINE .)
    $end            reduce using rule 9 (statement -> function_declaration END_LINE .)
    CONDITIONAL2    reduce using rule 9 (statement -> function_declaration END_LINE .)
    END_LINE        reduce using rule 9 (statement -> function_declaration END_LINE .)


state 50

    (10) statement -> return_statement END_LINE .

    COMMENT         reduce using rule 10 (statement -> return_statement END_LINE .)
    VARIABLE        reduce using rule 10 (statement -> return_statement END_LINE .)
    TYPE_BOOLEAN    reduce using rule 10 (statement -> return_statement END_LINE .)
    TYPE_STRING     reduce using rule 10 (statement -> return_statement END_LINE .)
    TYPE_CHAR       reduce using rule 10 (statement -> return_statement END_LINE .)
    TYPE_INTEGER    reduce using rule 10 (statement -> return_statement END_LINE .)
    TYPE_FLOAT      reduce using rule 10 (statement -> return_statement END_LINE .)
    CONDITIONAL1    reduce using rule 10 (statement -> return_statement END_LINE .)
    LOOP1           reduce using rule 10 (statement -> return_statement END_LINE .)
    LOOP2           reduce using rule 10 (statement -> return_statement END_LINE .)
    FUNCTION_DECLARATION reduce using rule 10 (statement -> return_statement END_LINE .)
    RETURN          reduce using rule 10 (statement -> return_statement END_LINE .)
    BREAK           reduce using rule 10 (statement -> return_statement END_LINE .)
    LOGICAL_OP_NOT  reduce using rule 10 (statement -> return_statement END_LINE .)
    LPAREN          reduce using rule 10 (statement -> return_statement END_LINE .)
    NUMBER_INTEGER  reduce using rule 10 (statement -> return_statement END_LINE .)
    NUMBER_FLOAT    reduce using rule 10 (statement -> return_statement END_LINE .)
    TRUE            reduce using rule 10 (statement -> return_statement END_LINE .)
    FALSE           reduce using rule 10 (statement -> return_statement END_LINE .)
    NULL            reduce using rule 10 (statement -> return_statement END_LINE .)
    TEXT_STRING     reduce using rule 10 (statement -> return_statement END_LINE .)
    TEXT_CHAR       reduce using rule 10 (statement -> return_statement END_LINE .)
    $end            reduce using rule 10 (statement -> return_statement END_LINE .)
    CONDITIONAL2    reduce using rule 10 (statement -> return_statement END_LINE .)
    END_LINE        reduce using rule 10 (statement -> return_statement END_LINE .)


state 51

    (11) statement -> break_statement END_LINE .

    COMMENT         reduce using rule 11 (statement -> break_statement END_LINE .)
    VARIABLE        reduce using rule 11 (statement -> break_statement END_LINE .)
    TYPE_BOOLEAN    reduce using rule 11 (statement -> break_statement END_LINE .)
    TYPE_STRING     reduce using rule 11 (statement -> break_statement END_LINE .)
    TYPE_CHAR       reduce using rule 11 (statement -> break_statement END_LINE .)
    TYPE_INTEGER    reduce using rule 11 (statement -> break_statement END_LINE .)
    TYPE_FLOAT      reduce using rule 11 (statement -> break_statement END_LINE .)
    CONDITIONAL1    reduce using rule 11 (statement -> break_statement END_LINE .)
    LOOP1           reduce using rule 11 (statement -> break_statement END_LINE .)
    LOOP2           reduce using rule 11 (statement -> break_statement END_LINE .)
    FUNCTION_DECLARATION reduce using rule 11 (statement -> break_statement END_LINE .)
    RETURN          reduce using rule 11 (statement -> break_statement END_LINE .)
    BREAK           reduce using rule 11 (statement -> break_statement END_LINE .)
    LOGICAL_OP_NOT  reduce using rule 11 (statement -> break_statement END_LINE .)
    LPAREN          reduce using rule 11 (statement -> break_statement END_LINE .)
    NUMBER_INTEGER  reduce using rule 11 (statement -> break_statement END_LINE .)
    NUMBER_FLOAT    reduce using rule 11 (statement -> break_statement END_LINE .)
    TRUE            reduce using rule 11 (statement -> break_statement END_LINE .)
    FALSE           reduce using rule 11 (statement -> break_statement END_LINE .)
    NULL            reduce using rule 11 (statement -> break_statement END_LINE .)
    TEXT_STRING     reduce using rule 11 (statement -> break_statement END_LINE .)
    TEXT_CHAR       reduce using rule 11 (statement -> break_statement END_LINE .)
    $end            reduce using rule 11 (statement -> break_statement END_LINE .)
    CONDITIONAL2    reduce using rule 11 (statement -> break_statement END_LINE .)
    END_LINE        reduce using rule 11 (statement -> break_statement END_LINE .)


state 52

    (14) logical_or_expression -> logical_or_expression LOGICAL_OP_OR . logical_and_expression
    (16) logical_and_expression -> . logical_and_expression LOGICAL_OP_AND equality_expression
    (17) logical_and_expression -> . equality_expression
    (18) equality_expression -> . equality_expression EQUAL_OP relational_expression
    (19) equality_expression -> . equality_expression DIFFERENT_OP relational_expression
    (20) equality_expression -> . relational_expression
    (21) relational_expression -> . relational_expression LESS_OP additive_expression
    (22) relational_expression -> . relational_expression LESS_EQUAL_OP additive_expression
    (23) relational_expression -> . relational_expression GREATER_OP additive_expression
    (24) relational_expression -> . relational_expression GREATER_EQUAL_OP additive_expression
    (25) relational_expression -> . additive_expression
    (26) additive_expression -> . additive_expression PLUS_OP multiplicative_expression
    (27) additive_expression -> . additive_expression MINUS_OP multiplicative_expression
    (28) additive_expression -> . multiplicative_expression
    (29) multiplicative_expression -> . multiplicative_expression MUL_OP unary_expression
    (30) multiplicative_expression -> . multiplicative_expression DIV_OP unary_expression
    (31) multiplicative_expression -> . unary_expression
    (32) unary_expression -> . LOGICAL_OP_NOT unary_expression
    (33) unary_expression -> . primary_expression
    (34) primary_expression -> . LPAREN expression RPAREN
    (35) primary_expression -> . term
    (36) term -> . NUMBER_INTEGER
    (37) term -> . NUMBER_FLOAT
    (38) term -> . VARIABLE
    (39) term -> . TRUE
    (40) term -> . FALSE
    (41) term -> . NULL
    (42) term -> . TEXT_STRING
    (43) term -> . TEXT_CHAR

    LOGICAL_OP_NOT  shift and go to state 33
    LPAREN          shift and go to state 21
    NUMBER_INTEGER  shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    VARIABLE        shift and go to state 66
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    NULL            shift and go to state 40
    TEXT_STRING     shift and go to state 41
    TEXT_CHAR       shift and go to state 42

    logical_and_expression         shift and go to state 83
    equality_expression            shift and go to state 28
    relational_expression          shift and go to state 29
    additive_expression            shift and go to state 30
    multiplicative_expression      shift and go to state 31
    unary_expression               shift and go to state 32
    primary_expression             shift and go to state 34
    term                           shift and go to state 35

state 53

    (44) assignment -> VARIABLE ASSIGNMENT_OP . expression
    (13) expression -> . logical_or_expression
    (14) logical_or_expression -> . logical_or_expression LOGICAL_OP_OR logical_and_expression
    (15) logical_or_expression -> . logical_and_expression
    (16) logical_and_expression -> . logical_and_expression LOGICAL_OP_AND equality_expression
    (17) logical_and_expression -> . equality_expression
    (18) equality_expression -> . equality_expression EQUAL_OP relational_expression
    (19) equality_expression -> . equality_expression DIFFERENT_OP relational_expression
    (20) equality_expression -> . relational_expression
    (21) relational_expression -> . relational_expression LESS_OP additive_expression
    (22) relational_expression -> . relational_expression LESS_EQUAL_OP additive_expression
    (23) relational_expression -> . relational_expression GREATER_OP additive_expression
    (24) relational_expression -> . relational_expression GREATER_EQUAL_OP additive_expression
    (25) relational_expression -> . additive_expression
    (26) additive_expression -> . additive_expression PLUS_OP multiplicative_expression
    (27) additive_expression -> . additive_expression MINUS_OP multiplicative_expression
    (28) additive_expression -> . multiplicative_expression
    (29) multiplicative_expression -> . multiplicative_expression MUL_OP unary_expression
    (30) multiplicative_expression -> . multiplicative_expression DIV_OP unary_expression
    (31) multiplicative_expression -> . unary_expression
    (32) unary_expression -> . LOGICAL_OP_NOT unary_expression
    (33) unary_expression -> . primary_expression
    (34) primary_expression -> . LPAREN expression RPAREN
    (35) primary_expression -> . term
    (36) term -> . NUMBER_INTEGER
    (37) term -> . NUMBER_FLOAT
    (38) term -> . VARIABLE
    (39) term -> . TRUE
    (40) term -> . FALSE
    (41) term -> . NULL
    (42) term -> . TEXT_STRING
    (43) term -> . TEXT_CHAR

    LOGICAL_OP_NOT  shift and go to state 33
    LPAREN          shift and go to state 21
    NUMBER_INTEGER  shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    VARIABLE        shift and go to state 66
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    NULL            shift and go to state 40
    TEXT_STRING     shift and go to state 41
    TEXT_CHAR       shift and go to state 42

    expression                     shift and go to state 84
    logical_or_expression          shift and go to state 13
    logical_and_expression         shift and go to state 27
    equality_expression            shift and go to state 28
    relational_expression          shift and go to state 29
    additive_expression            shift and go to state 30
    multiplicative_expression      shift and go to state 31
    unary_expression               shift and go to state 32
    primary_expression             shift and go to state 34
    term                           shift and go to state 35

state 54

    (45) declaration -> TYPE_BOOLEAN VARIABLE .
    (44) assignment -> VARIABLE . ASSIGNMENT_OP expression

    END_LINE        reduce using rule 45 (declaration -> TYPE_BOOLEAN VARIABLE .)
    ASSIGNMENT_OP   shift and go to state 53


state 55

    (50) declaration -> TYPE_BOOLEAN assignment .

    END_LINE        reduce using rule 50 (declaration -> TYPE_BOOLEAN assignment .)


state 56

    (46) declaration -> TYPE_STRING VARIABLE .
    (44) assignment -> VARIABLE . ASSIGNMENT_OP expression

    END_LINE        reduce using rule 46 (declaration -> TYPE_STRING VARIABLE .)
    ASSIGNMENT_OP   shift and go to state 53


state 57

    (51) declaration -> TYPE_STRING assignment .

    END_LINE        reduce using rule 51 (declaration -> TYPE_STRING assignment .)


state 58

    (47) declaration -> TYPE_CHAR VARIABLE .
    (44) assignment -> VARIABLE . ASSIGNMENT_OP expression

    END_LINE        reduce using rule 47 (declaration -> TYPE_CHAR VARIABLE .)
    ASSIGNMENT_OP   shift and go to state 53


state 59

    (52) declaration -> TYPE_CHAR assignment .

    END_LINE        reduce using rule 52 (declaration -> TYPE_CHAR assignment .)


state 60

    (48) declaration -> TYPE_INTEGER VARIABLE .
    (44) assignment -> VARIABLE . ASSIGNMENT_OP expression

    END_LINE        reduce using rule 48 (declaration -> TYPE_INTEGER VARIABLE .)
    ASSIGNMENT_OP   shift and go to state 53


state 61

    (53) declaration -> TYPE_INTEGER assignment .

    END_LINE        reduce using rule 53 (declaration -> TYPE_INTEGER assignment .)


state 62

    (49) declaration -> TYPE_FLOAT VARIABLE .
    (44) assignment -> VARIABLE . ASSIGNMENT_OP expression

    END_LINE        reduce using rule 49 (declaration -> TYPE_FLOAT VARIABLE .)
    ASSIGNMENT_OP   shift and go to state 53


state 63

    (54) declaration -> TYPE_FLOAT assignment .

    END_LINE        reduce using rule 54 (declaration -> TYPE_FLOAT assignment .)


state 64

    (55) conditional -> CONDITIONAL1 LPAREN . expression RPAREN STRUCTURE_BODY statement_list
    (56) conditional -> CONDITIONAL1 LPAREN . expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (13) expression -> . logical_or_expression
    (14) logical_or_expression -> . logical_or_expression LOGICAL_OP_OR logical_and_expression
    (15) logical_or_expression -> . logical_and_expression
    (16) logical_and_expression -> . logical_and_expression LOGICAL_OP_AND equality_expression
    (17) logical_and_expression -> . equality_expression
    (18) equality_expression -> . equality_expression EQUAL_OP relational_expression
    (19) equality_expression -> . equality_expression DIFFERENT_OP relational_expression
    (20) equality_expression -> . relational_expression
    (21) relational_expression -> . relational_expression LESS_OP additive_expression
    (22) relational_expression -> . relational_expression LESS_EQUAL_OP additive_expression
    (23) relational_expression -> . relational_expression GREATER_OP additive_expression
    (24) relational_expression -> . relational_expression GREATER_EQUAL_OP additive_expression
    (25) relational_expression -> . additive_expression
    (26) additive_expression -> . additive_expression PLUS_OP multiplicative_expression
    (27) additive_expression -> . additive_expression MINUS_OP multiplicative_expression
    (28) additive_expression -> . multiplicative_expression
    (29) multiplicative_expression -> . multiplicative_expression MUL_OP unary_expression
    (30) multiplicative_expression -> . multiplicative_expression DIV_OP unary_expression
    (31) multiplicative_expression -> . unary_expression
    (32) unary_expression -> . LOGICAL_OP_NOT unary_expression
    (33) unary_expression -> . primary_expression
    (34) primary_expression -> . LPAREN expression RPAREN
    (35) primary_expression -> . term
    (36) term -> . NUMBER_INTEGER
    (37) term -> . NUMBER_FLOAT
    (38) term -> . VARIABLE
    (39) term -> . TRUE
    (40) term -> . FALSE
    (41) term -> . NULL
    (42) term -> . TEXT_STRING
    (43) term -> . TEXT_CHAR

    LOGICAL_OP_NOT  shift and go to state 33
    LPAREN          shift and go to state 21
    NUMBER_INTEGER  shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    VARIABLE        shift and go to state 66
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    NULL            shift and go to state 40
    TEXT_STRING     shift and go to state 41
    TEXT_CHAR       shift and go to state 42

    expression                     shift and go to state 85
    logical_or_expression          shift and go to state 13
    logical_and_expression         shift and go to state 27
    equality_expression            shift and go to state 28
    relational_expression          shift and go to state 29
    additive_expression            shift and go to state 30
    multiplicative_expression      shift and go to state 31
    unary_expression               shift and go to state 32
    primary_expression             shift and go to state 34
    term                           shift and go to state 35

state 65

    (34) primary_expression -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 86


state 66

    (38) term -> VARIABLE .

    MUL_OP          reduce using rule 38 (term -> VARIABLE .)
    DIV_OP          reduce using rule 38 (term -> VARIABLE .)
    PLUS_OP         reduce using rule 38 (term -> VARIABLE .)
    MINUS_OP        reduce using rule 38 (term -> VARIABLE .)
    LESS_OP         reduce using rule 38 (term -> VARIABLE .)
    LESS_EQUAL_OP   reduce using rule 38 (term -> VARIABLE .)
    GREATER_OP      reduce using rule 38 (term -> VARIABLE .)
    GREATER_EQUAL_OP reduce using rule 38 (term -> VARIABLE .)
    EQUAL_OP        reduce using rule 38 (term -> VARIABLE .)
    DIFFERENT_OP    reduce using rule 38 (term -> VARIABLE .)
    LOGICAL_OP_AND  reduce using rule 38 (term -> VARIABLE .)
    LOGICAL_OP_OR   reduce using rule 38 (term -> VARIABLE .)
    RPAREN          reduce using rule 38 (term -> VARIABLE .)
    END_LINE        reduce using rule 38 (term -> VARIABLE .)
    SEPARATION      reduce using rule 38 (term -> VARIABLE .)


state 67

    (57) loop -> LOOP1 LPAREN . expression RPAREN STRUCTURE_BODY statement_list
    (13) expression -> . logical_or_expression
    (14) logical_or_expression -> . logical_or_expression LOGICAL_OP_OR logical_and_expression
    (15) logical_or_expression -> . logical_and_expression
    (16) logical_and_expression -> . logical_and_expression LOGICAL_OP_AND equality_expression
    (17) logical_and_expression -> . equality_expression
    (18) equality_expression -> . equality_expression EQUAL_OP relational_expression
    (19) equality_expression -> . equality_expression DIFFERENT_OP relational_expression
    (20) equality_expression -> . relational_expression
    (21) relational_expression -> . relational_expression LESS_OP additive_expression
    (22) relational_expression -> . relational_expression LESS_EQUAL_OP additive_expression
    (23) relational_expression -> . relational_expression GREATER_OP additive_expression
    (24) relational_expression -> . relational_expression GREATER_EQUAL_OP additive_expression
    (25) relational_expression -> . additive_expression
    (26) additive_expression -> . additive_expression PLUS_OP multiplicative_expression
    (27) additive_expression -> . additive_expression MINUS_OP multiplicative_expression
    (28) additive_expression -> . multiplicative_expression
    (29) multiplicative_expression -> . multiplicative_expression MUL_OP unary_expression
    (30) multiplicative_expression -> . multiplicative_expression DIV_OP unary_expression
    (31) multiplicative_expression -> . unary_expression
    (32) unary_expression -> . LOGICAL_OP_NOT unary_expression
    (33) unary_expression -> . primary_expression
    (34) primary_expression -> . LPAREN expression RPAREN
    (35) primary_expression -> . term
    (36) term -> . NUMBER_INTEGER
    (37) term -> . NUMBER_FLOAT
    (38) term -> . VARIABLE
    (39) term -> . TRUE
    (40) term -> . FALSE
    (41) term -> . NULL
    (42) term -> . TEXT_STRING
    (43) term -> . TEXT_CHAR

    LOGICAL_OP_NOT  shift and go to state 33
    LPAREN          shift and go to state 21
    NUMBER_INTEGER  shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    VARIABLE        shift and go to state 66
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    NULL            shift and go to state 40
    TEXT_STRING     shift and go to state 41
    TEXT_CHAR       shift and go to state 42

    expression                     shift and go to state 87
    logical_or_expression          shift and go to state 13
    logical_and_expression         shift and go to state 27
    equality_expression            shift and go to state 28
    relational_expression          shift and go to state 29
    additive_expression            shift and go to state 30
    multiplicative_expression      shift and go to state 31
    unary_expression               shift and go to state 32
    primary_expression             shift and go to state 34
    term                           shift and go to state 35

state 68

    (58) loop -> LOOP2 LPAREN . expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (13) expression -> . logical_or_expression
    (14) logical_or_expression -> . logical_or_expression LOGICAL_OP_OR logical_and_expression
    (15) logical_or_expression -> . logical_and_expression
    (16) logical_and_expression -> . logical_and_expression LOGICAL_OP_AND equality_expression
    (17) logical_and_expression -> . equality_expression
    (18) equality_expression -> . equality_expression EQUAL_OP relational_expression
    (19) equality_expression -> . equality_expression DIFFERENT_OP relational_expression
    (20) equality_expression -> . relational_expression
    (21) relational_expression -> . relational_expression LESS_OP additive_expression
    (22) relational_expression -> . relational_expression LESS_EQUAL_OP additive_expression
    (23) relational_expression -> . relational_expression GREATER_OP additive_expression
    (24) relational_expression -> . relational_expression GREATER_EQUAL_OP additive_expression
    (25) relational_expression -> . additive_expression
    (26) additive_expression -> . additive_expression PLUS_OP multiplicative_expression
    (27) additive_expression -> . additive_expression MINUS_OP multiplicative_expression
    (28) additive_expression -> . multiplicative_expression
    (29) multiplicative_expression -> . multiplicative_expression MUL_OP unary_expression
    (30) multiplicative_expression -> . multiplicative_expression DIV_OP unary_expression
    (31) multiplicative_expression -> . unary_expression
    (32) unary_expression -> . LOGICAL_OP_NOT unary_expression
    (33) unary_expression -> . primary_expression
    (34) primary_expression -> . LPAREN expression RPAREN
    (35) primary_expression -> . term
    (36) term -> . NUMBER_INTEGER
    (37) term -> . NUMBER_FLOAT
    (38) term -> . VARIABLE
    (39) term -> . TRUE
    (40) term -> . FALSE
    (41) term -> . NULL
    (42) term -> . TEXT_STRING
    (43) term -> . TEXT_CHAR

    LOGICAL_OP_NOT  shift and go to state 33
    LPAREN          shift and go to state 21
    NUMBER_INTEGER  shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    VARIABLE        shift and go to state 66
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    NULL            shift and go to state 40
    TEXT_STRING     shift and go to state 41
    TEXT_CHAR       shift and go to state 42

    expression                     shift and go to state 88
    logical_or_expression          shift and go to state 13
    logical_and_expression         shift and go to state 27
    equality_expression            shift and go to state 28
    relational_expression          shift and go to state 29
    additive_expression            shift and go to state 30
    multiplicative_expression      shift and go to state 31
    unary_expression               shift and go to state 32
    primary_expression             shift and go to state 34
    term                           shift and go to state 35

state 69

    (59) function_declaration -> FUNCTION_DECLARATION VARIABLE . LPAREN RPAREN STRUCTURE_BODY statement_list

    LPAREN          shift and go to state 89


state 70

    (60) return_statement -> RETURN expression .

    END_LINE        reduce using rule 60 (return_statement -> RETURN expression .)


state 71

    (16) logical_and_expression -> logical_and_expression LOGICAL_OP_AND . equality_expression
    (18) equality_expression -> . equality_expression EQUAL_OP relational_expression
    (19) equality_expression -> . equality_expression DIFFERENT_OP relational_expression
    (20) equality_expression -> . relational_expression
    (21) relational_expression -> . relational_expression LESS_OP additive_expression
    (22) relational_expression -> . relational_expression LESS_EQUAL_OP additive_expression
    (23) relational_expression -> . relational_expression GREATER_OP additive_expression
    (24) relational_expression -> . relational_expression GREATER_EQUAL_OP additive_expression
    (25) relational_expression -> . additive_expression
    (26) additive_expression -> . additive_expression PLUS_OP multiplicative_expression
    (27) additive_expression -> . additive_expression MINUS_OP multiplicative_expression
    (28) additive_expression -> . multiplicative_expression
    (29) multiplicative_expression -> . multiplicative_expression MUL_OP unary_expression
    (30) multiplicative_expression -> . multiplicative_expression DIV_OP unary_expression
    (31) multiplicative_expression -> . unary_expression
    (32) unary_expression -> . LOGICAL_OP_NOT unary_expression
    (33) unary_expression -> . primary_expression
    (34) primary_expression -> . LPAREN expression RPAREN
    (35) primary_expression -> . term
    (36) term -> . NUMBER_INTEGER
    (37) term -> . NUMBER_FLOAT
    (38) term -> . VARIABLE
    (39) term -> . TRUE
    (40) term -> . FALSE
    (41) term -> . NULL
    (42) term -> . TEXT_STRING
    (43) term -> . TEXT_CHAR

    LOGICAL_OP_NOT  shift and go to state 33
    LPAREN          shift and go to state 21
    NUMBER_INTEGER  shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    VARIABLE        shift and go to state 66
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    NULL            shift and go to state 40
    TEXT_STRING     shift and go to state 41
    TEXT_CHAR       shift and go to state 42

    equality_expression            shift and go to state 90
    relational_expression          shift and go to state 29
    additive_expression            shift and go to state 30
    multiplicative_expression      shift and go to state 31
    unary_expression               shift and go to state 32
    primary_expression             shift and go to state 34
    term                           shift and go to state 35

state 72

    (18) equality_expression -> equality_expression EQUAL_OP . relational_expression
    (21) relational_expression -> . relational_expression LESS_OP additive_expression
    (22) relational_expression -> . relational_expression LESS_EQUAL_OP additive_expression
    (23) relational_expression -> . relational_expression GREATER_OP additive_expression
    (24) relational_expression -> . relational_expression GREATER_EQUAL_OP additive_expression
    (25) relational_expression -> . additive_expression
    (26) additive_expression -> . additive_expression PLUS_OP multiplicative_expression
    (27) additive_expression -> . additive_expression MINUS_OP multiplicative_expression
    (28) additive_expression -> . multiplicative_expression
    (29) multiplicative_expression -> . multiplicative_expression MUL_OP unary_expression
    (30) multiplicative_expression -> . multiplicative_expression DIV_OP unary_expression
    (31) multiplicative_expression -> . unary_expression
    (32) unary_expression -> . LOGICAL_OP_NOT unary_expression
    (33) unary_expression -> . primary_expression
    (34) primary_expression -> . LPAREN expression RPAREN
    (35) primary_expression -> . term
    (36) term -> . NUMBER_INTEGER
    (37) term -> . NUMBER_FLOAT
    (38) term -> . VARIABLE
    (39) term -> . TRUE
    (40) term -> . FALSE
    (41) term -> . NULL
    (42) term -> . TEXT_STRING
    (43) term -> . TEXT_CHAR

    LOGICAL_OP_NOT  shift and go to state 33
    LPAREN          shift and go to state 21
    NUMBER_INTEGER  shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    VARIABLE        shift and go to state 66
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    NULL            shift and go to state 40
    TEXT_STRING     shift and go to state 41
    TEXT_CHAR       shift and go to state 42

    relational_expression          shift and go to state 91
    additive_expression            shift and go to state 30
    multiplicative_expression      shift and go to state 31
    unary_expression               shift and go to state 32
    primary_expression             shift and go to state 34
    term                           shift and go to state 35

state 73

    (19) equality_expression -> equality_expression DIFFERENT_OP . relational_expression
    (21) relational_expression -> . relational_expression LESS_OP additive_expression
    (22) relational_expression -> . relational_expression LESS_EQUAL_OP additive_expression
    (23) relational_expression -> . relational_expression GREATER_OP additive_expression
    (24) relational_expression -> . relational_expression GREATER_EQUAL_OP additive_expression
    (25) relational_expression -> . additive_expression
    (26) additive_expression -> . additive_expression PLUS_OP multiplicative_expression
    (27) additive_expression -> . additive_expression MINUS_OP multiplicative_expression
    (28) additive_expression -> . multiplicative_expression
    (29) multiplicative_expression -> . multiplicative_expression MUL_OP unary_expression
    (30) multiplicative_expression -> . multiplicative_expression DIV_OP unary_expression
    (31) multiplicative_expression -> . unary_expression
    (32) unary_expression -> . LOGICAL_OP_NOT unary_expression
    (33) unary_expression -> . primary_expression
    (34) primary_expression -> . LPAREN expression RPAREN
    (35) primary_expression -> . term
    (36) term -> . NUMBER_INTEGER
    (37) term -> . NUMBER_FLOAT
    (38) term -> . VARIABLE
    (39) term -> . TRUE
    (40) term -> . FALSE
    (41) term -> . NULL
    (42) term -> . TEXT_STRING
    (43) term -> . TEXT_CHAR

    LOGICAL_OP_NOT  shift and go to state 33
    LPAREN          shift and go to state 21
    NUMBER_INTEGER  shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    VARIABLE        shift and go to state 66
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    NULL            shift and go to state 40
    TEXT_STRING     shift and go to state 41
    TEXT_CHAR       shift and go to state 42

    relational_expression          shift and go to state 92
    additive_expression            shift and go to state 30
    multiplicative_expression      shift and go to state 31
    unary_expression               shift and go to state 32
    primary_expression             shift and go to state 34
    term                           shift and go to state 35

state 74

    (21) relational_expression -> relational_expression LESS_OP . additive_expression
    (26) additive_expression -> . additive_expression PLUS_OP multiplicative_expression
    (27) additive_expression -> . additive_expression MINUS_OP multiplicative_expression
    (28) additive_expression -> . multiplicative_expression
    (29) multiplicative_expression -> . multiplicative_expression MUL_OP unary_expression
    (30) multiplicative_expression -> . multiplicative_expression DIV_OP unary_expression
    (31) multiplicative_expression -> . unary_expression
    (32) unary_expression -> . LOGICAL_OP_NOT unary_expression
    (33) unary_expression -> . primary_expression
    (34) primary_expression -> . LPAREN expression RPAREN
    (35) primary_expression -> . term
    (36) term -> . NUMBER_INTEGER
    (37) term -> . NUMBER_FLOAT
    (38) term -> . VARIABLE
    (39) term -> . TRUE
    (40) term -> . FALSE
    (41) term -> . NULL
    (42) term -> . TEXT_STRING
    (43) term -> . TEXT_CHAR

    LOGICAL_OP_NOT  shift and go to state 33
    LPAREN          shift and go to state 21
    NUMBER_INTEGER  shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    VARIABLE        shift and go to state 66
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    NULL            shift and go to state 40
    TEXT_STRING     shift and go to state 41
    TEXT_CHAR       shift and go to state 42

    additive_expression            shift and go to state 93
    multiplicative_expression      shift and go to state 31
    unary_expression               shift and go to state 32
    primary_expression             shift and go to state 34
    term                           shift and go to state 35

state 75

    (22) relational_expression -> relational_expression LESS_EQUAL_OP . additive_expression
    (26) additive_expression -> . additive_expression PLUS_OP multiplicative_expression
    (27) additive_expression -> . additive_expression MINUS_OP multiplicative_expression
    (28) additive_expression -> . multiplicative_expression
    (29) multiplicative_expression -> . multiplicative_expression MUL_OP unary_expression
    (30) multiplicative_expression -> . multiplicative_expression DIV_OP unary_expression
    (31) multiplicative_expression -> . unary_expression
    (32) unary_expression -> . LOGICAL_OP_NOT unary_expression
    (33) unary_expression -> . primary_expression
    (34) primary_expression -> . LPAREN expression RPAREN
    (35) primary_expression -> . term
    (36) term -> . NUMBER_INTEGER
    (37) term -> . NUMBER_FLOAT
    (38) term -> . VARIABLE
    (39) term -> . TRUE
    (40) term -> . FALSE
    (41) term -> . NULL
    (42) term -> . TEXT_STRING
    (43) term -> . TEXT_CHAR

    LOGICAL_OP_NOT  shift and go to state 33
    LPAREN          shift and go to state 21
    NUMBER_INTEGER  shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    VARIABLE        shift and go to state 66
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    NULL            shift and go to state 40
    TEXT_STRING     shift and go to state 41
    TEXT_CHAR       shift and go to state 42

    additive_expression            shift and go to state 94
    multiplicative_expression      shift and go to state 31
    unary_expression               shift and go to state 32
    primary_expression             shift and go to state 34
    term                           shift and go to state 35

state 76

    (23) relational_expression -> relational_expression GREATER_OP . additive_expression
    (26) additive_expression -> . additive_expression PLUS_OP multiplicative_expression
    (27) additive_expression -> . additive_expression MINUS_OP multiplicative_expression
    (28) additive_expression -> . multiplicative_expression
    (29) multiplicative_expression -> . multiplicative_expression MUL_OP unary_expression
    (30) multiplicative_expression -> . multiplicative_expression DIV_OP unary_expression
    (31) multiplicative_expression -> . unary_expression
    (32) unary_expression -> . LOGICAL_OP_NOT unary_expression
    (33) unary_expression -> . primary_expression
    (34) primary_expression -> . LPAREN expression RPAREN
    (35) primary_expression -> . term
    (36) term -> . NUMBER_INTEGER
    (37) term -> . NUMBER_FLOAT
    (38) term -> . VARIABLE
    (39) term -> . TRUE
    (40) term -> . FALSE
    (41) term -> . NULL
    (42) term -> . TEXT_STRING
    (43) term -> . TEXT_CHAR

    LOGICAL_OP_NOT  shift and go to state 33
    LPAREN          shift and go to state 21
    NUMBER_INTEGER  shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    VARIABLE        shift and go to state 66
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    NULL            shift and go to state 40
    TEXT_STRING     shift and go to state 41
    TEXT_CHAR       shift and go to state 42

    additive_expression            shift and go to state 95
    multiplicative_expression      shift and go to state 31
    unary_expression               shift and go to state 32
    primary_expression             shift and go to state 34
    term                           shift and go to state 35

state 77

    (24) relational_expression -> relational_expression GREATER_EQUAL_OP . additive_expression
    (26) additive_expression -> . additive_expression PLUS_OP multiplicative_expression
    (27) additive_expression -> . additive_expression MINUS_OP multiplicative_expression
    (28) additive_expression -> . multiplicative_expression
    (29) multiplicative_expression -> . multiplicative_expression MUL_OP unary_expression
    (30) multiplicative_expression -> . multiplicative_expression DIV_OP unary_expression
    (31) multiplicative_expression -> . unary_expression
    (32) unary_expression -> . LOGICAL_OP_NOT unary_expression
    (33) unary_expression -> . primary_expression
    (34) primary_expression -> . LPAREN expression RPAREN
    (35) primary_expression -> . term
    (36) term -> . NUMBER_INTEGER
    (37) term -> . NUMBER_FLOAT
    (38) term -> . VARIABLE
    (39) term -> . TRUE
    (40) term -> . FALSE
    (41) term -> . NULL
    (42) term -> . TEXT_STRING
    (43) term -> . TEXT_CHAR

    LOGICAL_OP_NOT  shift and go to state 33
    LPAREN          shift and go to state 21
    NUMBER_INTEGER  shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    VARIABLE        shift and go to state 66
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    NULL            shift and go to state 40
    TEXT_STRING     shift and go to state 41
    TEXT_CHAR       shift and go to state 42

    additive_expression            shift and go to state 96
    multiplicative_expression      shift and go to state 31
    unary_expression               shift and go to state 32
    primary_expression             shift and go to state 34
    term                           shift and go to state 35

state 78

    (26) additive_expression -> additive_expression PLUS_OP . multiplicative_expression
    (29) multiplicative_expression -> . multiplicative_expression MUL_OP unary_expression
    (30) multiplicative_expression -> . multiplicative_expression DIV_OP unary_expression
    (31) multiplicative_expression -> . unary_expression
    (32) unary_expression -> . LOGICAL_OP_NOT unary_expression
    (33) unary_expression -> . primary_expression
    (34) primary_expression -> . LPAREN expression RPAREN
    (35) primary_expression -> . term
    (36) term -> . NUMBER_INTEGER
    (37) term -> . NUMBER_FLOAT
    (38) term -> . VARIABLE
    (39) term -> . TRUE
    (40) term -> . FALSE
    (41) term -> . NULL
    (42) term -> . TEXT_STRING
    (43) term -> . TEXT_CHAR

    LOGICAL_OP_NOT  shift and go to state 33
    LPAREN          shift and go to state 21
    NUMBER_INTEGER  shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    VARIABLE        shift and go to state 66
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    NULL            shift and go to state 40
    TEXT_STRING     shift and go to state 41
    TEXT_CHAR       shift and go to state 42

    multiplicative_expression      shift and go to state 97
    unary_expression               shift and go to state 32
    primary_expression             shift and go to state 34
    term                           shift and go to state 35

state 79

    (27) additive_expression -> additive_expression MINUS_OP . multiplicative_expression
    (29) multiplicative_expression -> . multiplicative_expression MUL_OP unary_expression
    (30) multiplicative_expression -> . multiplicative_expression DIV_OP unary_expression
    (31) multiplicative_expression -> . unary_expression
    (32) unary_expression -> . LOGICAL_OP_NOT unary_expression
    (33) unary_expression -> . primary_expression
    (34) primary_expression -> . LPAREN expression RPAREN
    (35) primary_expression -> . term
    (36) term -> . NUMBER_INTEGER
    (37) term -> . NUMBER_FLOAT
    (38) term -> . VARIABLE
    (39) term -> . TRUE
    (40) term -> . FALSE
    (41) term -> . NULL
    (42) term -> . TEXT_STRING
    (43) term -> . TEXT_CHAR

    LOGICAL_OP_NOT  shift and go to state 33
    LPAREN          shift and go to state 21
    NUMBER_INTEGER  shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    VARIABLE        shift and go to state 66
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    NULL            shift and go to state 40
    TEXT_STRING     shift and go to state 41
    TEXT_CHAR       shift and go to state 42

    multiplicative_expression      shift and go to state 98
    unary_expression               shift and go to state 32
    primary_expression             shift and go to state 34
    term                           shift and go to state 35

state 80

    (29) multiplicative_expression -> multiplicative_expression MUL_OP . unary_expression
    (32) unary_expression -> . LOGICAL_OP_NOT unary_expression
    (33) unary_expression -> . primary_expression
    (34) primary_expression -> . LPAREN expression RPAREN
    (35) primary_expression -> . term
    (36) term -> . NUMBER_INTEGER
    (37) term -> . NUMBER_FLOAT
    (38) term -> . VARIABLE
    (39) term -> . TRUE
    (40) term -> . FALSE
    (41) term -> . NULL
    (42) term -> . TEXT_STRING
    (43) term -> . TEXT_CHAR

    LOGICAL_OP_NOT  shift and go to state 33
    LPAREN          shift and go to state 21
    NUMBER_INTEGER  shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    VARIABLE        shift and go to state 66
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    NULL            shift and go to state 40
    TEXT_STRING     shift and go to state 41
    TEXT_CHAR       shift and go to state 42

    unary_expression               shift and go to state 99
    primary_expression             shift and go to state 34
    term                           shift and go to state 35

state 81

    (30) multiplicative_expression -> multiplicative_expression DIV_OP . unary_expression
    (32) unary_expression -> . LOGICAL_OP_NOT unary_expression
    (33) unary_expression -> . primary_expression
    (34) primary_expression -> . LPAREN expression RPAREN
    (35) primary_expression -> . term
    (36) term -> . NUMBER_INTEGER
    (37) term -> . NUMBER_FLOAT
    (38) term -> . VARIABLE
    (39) term -> . TRUE
    (40) term -> . FALSE
    (41) term -> . NULL
    (42) term -> . TEXT_STRING
    (43) term -> . TEXT_CHAR

    LOGICAL_OP_NOT  shift and go to state 33
    LPAREN          shift and go to state 21
    NUMBER_INTEGER  shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    VARIABLE        shift and go to state 66
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    NULL            shift and go to state 40
    TEXT_STRING     shift and go to state 41
    TEXT_CHAR       shift and go to state 42

    unary_expression               shift and go to state 100
    primary_expression             shift and go to state 34
    term                           shift and go to state 35

state 82

    (32) unary_expression -> LOGICAL_OP_NOT unary_expression .

    MUL_OP          reduce using rule 32 (unary_expression -> LOGICAL_OP_NOT unary_expression .)
    DIV_OP          reduce using rule 32 (unary_expression -> LOGICAL_OP_NOT unary_expression .)
    PLUS_OP         reduce using rule 32 (unary_expression -> LOGICAL_OP_NOT unary_expression .)
    MINUS_OP        reduce using rule 32 (unary_expression -> LOGICAL_OP_NOT unary_expression .)
    LESS_OP         reduce using rule 32 (unary_expression -> LOGICAL_OP_NOT unary_expression .)
    LESS_EQUAL_OP   reduce using rule 32 (unary_expression -> LOGICAL_OP_NOT unary_expression .)
    GREATER_OP      reduce using rule 32 (unary_expression -> LOGICAL_OP_NOT unary_expression .)
    GREATER_EQUAL_OP reduce using rule 32 (unary_expression -> LOGICAL_OP_NOT unary_expression .)
    EQUAL_OP        reduce using rule 32 (unary_expression -> LOGICAL_OP_NOT unary_expression .)
    DIFFERENT_OP    reduce using rule 32 (unary_expression -> LOGICAL_OP_NOT unary_expression .)
    LOGICAL_OP_AND  reduce using rule 32 (unary_expression -> LOGICAL_OP_NOT unary_expression .)
    LOGICAL_OP_OR   reduce using rule 32 (unary_expression -> LOGICAL_OP_NOT unary_expression .)
    END_LINE        reduce using rule 32 (unary_expression -> LOGICAL_OP_NOT unary_expression .)
    RPAREN          reduce using rule 32 (unary_expression -> LOGICAL_OP_NOT unary_expression .)
    SEPARATION      reduce using rule 32 (unary_expression -> LOGICAL_OP_NOT unary_expression .)


state 83

    (14) logical_or_expression -> logical_or_expression LOGICAL_OP_OR logical_and_expression .
    (16) logical_and_expression -> logical_and_expression . LOGICAL_OP_AND equality_expression

    LOGICAL_OP_OR   reduce using rule 14 (logical_or_expression -> logical_or_expression LOGICAL_OP_OR logical_and_expression .)
    END_LINE        reduce using rule 14 (logical_or_expression -> logical_or_expression LOGICAL_OP_OR logical_and_expression .)
    RPAREN          reduce using rule 14 (logical_or_expression -> logical_or_expression LOGICAL_OP_OR logical_and_expression .)
    SEPARATION      reduce using rule 14 (logical_or_expression -> logical_or_expression LOGICAL_OP_OR logical_and_expression .)
    LOGICAL_OP_AND  shift and go to state 71


state 84

    (44) assignment -> VARIABLE ASSIGNMENT_OP expression .

    END_LINE        reduce using rule 44 (assignment -> VARIABLE ASSIGNMENT_OP expression .)


state 85

    (55) conditional -> CONDITIONAL1 LPAREN expression . RPAREN STRUCTURE_BODY statement_list
    (56) conditional -> CONDITIONAL1 LPAREN expression . RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list

    RPAREN          shift and go to state 101


state 86

    (34) primary_expression -> LPAREN expression RPAREN .

    MUL_OP          reduce using rule 34 (primary_expression -> LPAREN expression RPAREN .)
    DIV_OP          reduce using rule 34 (primary_expression -> LPAREN expression RPAREN .)
    PLUS_OP         reduce using rule 34 (primary_expression -> LPAREN expression RPAREN .)
    MINUS_OP        reduce using rule 34 (primary_expression -> LPAREN expression RPAREN .)
    LESS_OP         reduce using rule 34 (primary_expression -> LPAREN expression RPAREN .)
    LESS_EQUAL_OP   reduce using rule 34 (primary_expression -> LPAREN expression RPAREN .)
    GREATER_OP      reduce using rule 34 (primary_expression -> LPAREN expression RPAREN .)
    GREATER_EQUAL_OP reduce using rule 34 (primary_expression -> LPAREN expression RPAREN .)
    EQUAL_OP        reduce using rule 34 (primary_expression -> LPAREN expression RPAREN .)
    DIFFERENT_OP    reduce using rule 34 (primary_expression -> LPAREN expression RPAREN .)
    LOGICAL_OP_AND  reduce using rule 34 (primary_expression -> LPAREN expression RPAREN .)
    LOGICAL_OP_OR   reduce using rule 34 (primary_expression -> LPAREN expression RPAREN .)
    END_LINE        reduce using rule 34 (primary_expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 34 (primary_expression -> LPAREN expression RPAREN .)
    SEPARATION      reduce using rule 34 (primary_expression -> LPAREN expression RPAREN .)


state 87

    (57) loop -> LOOP1 LPAREN expression . RPAREN STRUCTURE_BODY statement_list

    RPAREN          shift and go to state 102


state 88

    (58) loop -> LOOP2 LPAREN expression . SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list

    SEPARATION      shift and go to state 103


state 89

    (59) function_declaration -> FUNCTION_DECLARATION VARIABLE LPAREN . RPAREN STRUCTURE_BODY statement_list

    RPAREN          shift and go to state 104


state 90

    (16) logical_and_expression -> logical_and_expression LOGICAL_OP_AND equality_expression .
    (18) equality_expression -> equality_expression . EQUAL_OP relational_expression
    (19) equality_expression -> equality_expression . DIFFERENT_OP relational_expression

    LOGICAL_OP_AND  reduce using rule 16 (logical_and_expression -> logical_and_expression LOGICAL_OP_AND equality_expression .)
    LOGICAL_OP_OR   reduce using rule 16 (logical_and_expression -> logical_and_expression LOGICAL_OP_AND equality_expression .)
    END_LINE        reduce using rule 16 (logical_and_expression -> logical_and_expression LOGICAL_OP_AND equality_expression .)
    RPAREN          reduce using rule 16 (logical_and_expression -> logical_and_expression LOGICAL_OP_AND equality_expression .)
    SEPARATION      reduce using rule 16 (logical_and_expression -> logical_and_expression LOGICAL_OP_AND equality_expression .)
    EQUAL_OP        shift and go to state 72
    DIFFERENT_OP    shift and go to state 73


state 91

    (18) equality_expression -> equality_expression EQUAL_OP relational_expression .
    (21) relational_expression -> relational_expression . LESS_OP additive_expression
    (22) relational_expression -> relational_expression . LESS_EQUAL_OP additive_expression
    (23) relational_expression -> relational_expression . GREATER_OP additive_expression
    (24) relational_expression -> relational_expression . GREATER_EQUAL_OP additive_expression

    EQUAL_OP        reduce using rule 18 (equality_expression -> equality_expression EQUAL_OP relational_expression .)
    DIFFERENT_OP    reduce using rule 18 (equality_expression -> equality_expression EQUAL_OP relational_expression .)
    LOGICAL_OP_AND  reduce using rule 18 (equality_expression -> equality_expression EQUAL_OP relational_expression .)
    LOGICAL_OP_OR   reduce using rule 18 (equality_expression -> equality_expression EQUAL_OP relational_expression .)
    END_LINE        reduce using rule 18 (equality_expression -> equality_expression EQUAL_OP relational_expression .)
    RPAREN          reduce using rule 18 (equality_expression -> equality_expression EQUAL_OP relational_expression .)
    SEPARATION      reduce using rule 18 (equality_expression -> equality_expression EQUAL_OP relational_expression .)
    LESS_OP         shift and go to state 74
    LESS_EQUAL_OP   shift and go to state 75
    GREATER_OP      shift and go to state 76
    GREATER_EQUAL_OP shift and go to state 77


state 92

    (19) equality_expression -> equality_expression DIFFERENT_OP relational_expression .
    (21) relational_expression -> relational_expression . LESS_OP additive_expression
    (22) relational_expression -> relational_expression . LESS_EQUAL_OP additive_expression
    (23) relational_expression -> relational_expression . GREATER_OP additive_expression
    (24) relational_expression -> relational_expression . GREATER_EQUAL_OP additive_expression

    EQUAL_OP        reduce using rule 19 (equality_expression -> equality_expression DIFFERENT_OP relational_expression .)
    DIFFERENT_OP    reduce using rule 19 (equality_expression -> equality_expression DIFFERENT_OP relational_expression .)
    LOGICAL_OP_AND  reduce using rule 19 (equality_expression -> equality_expression DIFFERENT_OP relational_expression .)
    LOGICAL_OP_OR   reduce using rule 19 (equality_expression -> equality_expression DIFFERENT_OP relational_expression .)
    END_LINE        reduce using rule 19 (equality_expression -> equality_expression DIFFERENT_OP relational_expression .)
    RPAREN          reduce using rule 19 (equality_expression -> equality_expression DIFFERENT_OP relational_expression .)
    SEPARATION      reduce using rule 19 (equality_expression -> equality_expression DIFFERENT_OP relational_expression .)
    LESS_OP         shift and go to state 74
    LESS_EQUAL_OP   shift and go to state 75
    GREATER_OP      shift and go to state 76
    GREATER_EQUAL_OP shift and go to state 77


state 93

    (21) relational_expression -> relational_expression LESS_OP additive_expression .
    (26) additive_expression -> additive_expression . PLUS_OP multiplicative_expression
    (27) additive_expression -> additive_expression . MINUS_OP multiplicative_expression

    LESS_OP         reduce using rule 21 (relational_expression -> relational_expression LESS_OP additive_expression .)
    LESS_EQUAL_OP   reduce using rule 21 (relational_expression -> relational_expression LESS_OP additive_expression .)
    GREATER_OP      reduce using rule 21 (relational_expression -> relational_expression LESS_OP additive_expression .)
    GREATER_EQUAL_OP reduce using rule 21 (relational_expression -> relational_expression LESS_OP additive_expression .)
    EQUAL_OP        reduce using rule 21 (relational_expression -> relational_expression LESS_OP additive_expression .)
    DIFFERENT_OP    reduce using rule 21 (relational_expression -> relational_expression LESS_OP additive_expression .)
    LOGICAL_OP_AND  reduce using rule 21 (relational_expression -> relational_expression LESS_OP additive_expression .)
    LOGICAL_OP_OR   reduce using rule 21 (relational_expression -> relational_expression LESS_OP additive_expression .)
    END_LINE        reduce using rule 21 (relational_expression -> relational_expression LESS_OP additive_expression .)
    RPAREN          reduce using rule 21 (relational_expression -> relational_expression LESS_OP additive_expression .)
    SEPARATION      reduce using rule 21 (relational_expression -> relational_expression LESS_OP additive_expression .)
    PLUS_OP         shift and go to state 78
    MINUS_OP        shift and go to state 79


state 94

    (22) relational_expression -> relational_expression LESS_EQUAL_OP additive_expression .
    (26) additive_expression -> additive_expression . PLUS_OP multiplicative_expression
    (27) additive_expression -> additive_expression . MINUS_OP multiplicative_expression

    LESS_OP         reduce using rule 22 (relational_expression -> relational_expression LESS_EQUAL_OP additive_expression .)
    LESS_EQUAL_OP   reduce using rule 22 (relational_expression -> relational_expression LESS_EQUAL_OP additive_expression .)
    GREATER_OP      reduce using rule 22 (relational_expression -> relational_expression LESS_EQUAL_OP additive_expression .)
    GREATER_EQUAL_OP reduce using rule 22 (relational_expression -> relational_expression LESS_EQUAL_OP additive_expression .)
    EQUAL_OP        reduce using rule 22 (relational_expression -> relational_expression LESS_EQUAL_OP additive_expression .)
    DIFFERENT_OP    reduce using rule 22 (relational_expression -> relational_expression LESS_EQUAL_OP additive_expression .)
    LOGICAL_OP_AND  reduce using rule 22 (relational_expression -> relational_expression LESS_EQUAL_OP additive_expression .)
    LOGICAL_OP_OR   reduce using rule 22 (relational_expression -> relational_expression LESS_EQUAL_OP additive_expression .)
    END_LINE        reduce using rule 22 (relational_expression -> relational_expression LESS_EQUAL_OP additive_expression .)
    RPAREN          reduce using rule 22 (relational_expression -> relational_expression LESS_EQUAL_OP additive_expression .)
    SEPARATION      reduce using rule 22 (relational_expression -> relational_expression LESS_EQUAL_OP additive_expression .)
    PLUS_OP         shift and go to state 78
    MINUS_OP        shift and go to state 79


state 95

    (23) relational_expression -> relational_expression GREATER_OP additive_expression .
    (26) additive_expression -> additive_expression . PLUS_OP multiplicative_expression
    (27) additive_expression -> additive_expression . MINUS_OP multiplicative_expression

    LESS_OP         reduce using rule 23 (relational_expression -> relational_expression GREATER_OP additive_expression .)
    LESS_EQUAL_OP   reduce using rule 23 (relational_expression -> relational_expression GREATER_OP additive_expression .)
    GREATER_OP      reduce using rule 23 (relational_expression -> relational_expression GREATER_OP additive_expression .)
    GREATER_EQUAL_OP reduce using rule 23 (relational_expression -> relational_expression GREATER_OP additive_expression .)
    EQUAL_OP        reduce using rule 23 (relational_expression -> relational_expression GREATER_OP additive_expression .)
    DIFFERENT_OP    reduce using rule 23 (relational_expression -> relational_expression GREATER_OP additive_expression .)
    LOGICAL_OP_AND  reduce using rule 23 (relational_expression -> relational_expression GREATER_OP additive_expression .)
    LOGICAL_OP_OR   reduce using rule 23 (relational_expression -> relational_expression GREATER_OP additive_expression .)
    END_LINE        reduce using rule 23 (relational_expression -> relational_expression GREATER_OP additive_expression .)
    RPAREN          reduce using rule 23 (relational_expression -> relational_expression GREATER_OP additive_expression .)
    SEPARATION      reduce using rule 23 (relational_expression -> relational_expression GREATER_OP additive_expression .)
    PLUS_OP         shift and go to state 78
    MINUS_OP        shift and go to state 79


state 96

    (24) relational_expression -> relational_expression GREATER_EQUAL_OP additive_expression .
    (26) additive_expression -> additive_expression . PLUS_OP multiplicative_expression
    (27) additive_expression -> additive_expression . MINUS_OP multiplicative_expression

    LESS_OP         reduce using rule 24 (relational_expression -> relational_expression GREATER_EQUAL_OP additive_expression .)
    LESS_EQUAL_OP   reduce using rule 24 (relational_expression -> relational_expression GREATER_EQUAL_OP additive_expression .)
    GREATER_OP      reduce using rule 24 (relational_expression -> relational_expression GREATER_EQUAL_OP additive_expression .)
    GREATER_EQUAL_OP reduce using rule 24 (relational_expression -> relational_expression GREATER_EQUAL_OP additive_expression .)
    EQUAL_OP        reduce using rule 24 (relational_expression -> relational_expression GREATER_EQUAL_OP additive_expression .)
    DIFFERENT_OP    reduce using rule 24 (relational_expression -> relational_expression GREATER_EQUAL_OP additive_expression .)
    LOGICAL_OP_AND  reduce using rule 24 (relational_expression -> relational_expression GREATER_EQUAL_OP additive_expression .)
    LOGICAL_OP_OR   reduce using rule 24 (relational_expression -> relational_expression GREATER_EQUAL_OP additive_expression .)
    END_LINE        reduce using rule 24 (relational_expression -> relational_expression GREATER_EQUAL_OP additive_expression .)
    RPAREN          reduce using rule 24 (relational_expression -> relational_expression GREATER_EQUAL_OP additive_expression .)
    SEPARATION      reduce using rule 24 (relational_expression -> relational_expression GREATER_EQUAL_OP additive_expression .)
    PLUS_OP         shift and go to state 78
    MINUS_OP        shift and go to state 79


state 97

    (26) additive_expression -> additive_expression PLUS_OP multiplicative_expression .
    (29) multiplicative_expression -> multiplicative_expression . MUL_OP unary_expression
    (30) multiplicative_expression -> multiplicative_expression . DIV_OP unary_expression

    PLUS_OP         reduce using rule 26 (additive_expression -> additive_expression PLUS_OP multiplicative_expression .)
    MINUS_OP        reduce using rule 26 (additive_expression -> additive_expression PLUS_OP multiplicative_expression .)
    LESS_OP         reduce using rule 26 (additive_expression -> additive_expression PLUS_OP multiplicative_expression .)
    LESS_EQUAL_OP   reduce using rule 26 (additive_expression -> additive_expression PLUS_OP multiplicative_expression .)
    GREATER_OP      reduce using rule 26 (additive_expression -> additive_expression PLUS_OP multiplicative_expression .)
    GREATER_EQUAL_OP reduce using rule 26 (additive_expression -> additive_expression PLUS_OP multiplicative_expression .)
    EQUAL_OP        reduce using rule 26 (additive_expression -> additive_expression PLUS_OP multiplicative_expression .)
    DIFFERENT_OP    reduce using rule 26 (additive_expression -> additive_expression PLUS_OP multiplicative_expression .)
    LOGICAL_OP_AND  reduce using rule 26 (additive_expression -> additive_expression PLUS_OP multiplicative_expression .)
    LOGICAL_OP_OR   reduce using rule 26 (additive_expression -> additive_expression PLUS_OP multiplicative_expression .)
    END_LINE        reduce using rule 26 (additive_expression -> additive_expression PLUS_OP multiplicative_expression .)
    RPAREN          reduce using rule 26 (additive_expression -> additive_expression PLUS_OP multiplicative_expression .)
    SEPARATION      reduce using rule 26 (additive_expression -> additive_expression PLUS_OP multiplicative_expression .)
    MUL_OP          shift and go to state 80
    DIV_OP          shift and go to state 81


state 98

    (27) additive_expression -> additive_expression MINUS_OP multiplicative_expression .
    (29) multiplicative_expression -> multiplicative_expression . MUL_OP unary_expression
    (30) multiplicative_expression -> multiplicative_expression . DIV_OP unary_expression

    PLUS_OP         reduce using rule 27 (additive_expression -> additive_expression MINUS_OP multiplicative_expression .)
    MINUS_OP        reduce using rule 27 (additive_expression -> additive_expression MINUS_OP multiplicative_expression .)
    LESS_OP         reduce using rule 27 (additive_expression -> additive_expression MINUS_OP multiplicative_expression .)
    LESS_EQUAL_OP   reduce using rule 27 (additive_expression -> additive_expression MINUS_OP multiplicative_expression .)
    GREATER_OP      reduce using rule 27 (additive_expression -> additive_expression MINUS_OP multiplicative_expression .)
    GREATER_EQUAL_OP reduce using rule 27 (additive_expression -> additive_expression MINUS_OP multiplicative_expression .)
    EQUAL_OP        reduce using rule 27 (additive_expression -> additive_expression MINUS_OP multiplicative_expression .)
    DIFFERENT_OP    reduce using rule 27 (additive_expression -> additive_expression MINUS_OP multiplicative_expression .)
    LOGICAL_OP_AND  reduce using rule 27 (additive_expression -> additive_expression MINUS_OP multiplicative_expression .)
    LOGICAL_OP_OR   reduce using rule 27 (additive_expression -> additive_expression MINUS_OP multiplicative_expression .)
    END_LINE        reduce using rule 27 (additive_expression -> additive_expression MINUS_OP multiplicative_expression .)
    RPAREN          reduce using rule 27 (additive_expression -> additive_expression MINUS_OP multiplicative_expression .)
    SEPARATION      reduce using rule 27 (additive_expression -> additive_expression MINUS_OP multiplicative_expression .)
    MUL_OP          shift and go to state 80
    DIV_OP          shift and go to state 81


state 99

    (29) multiplicative_expression -> multiplicative_expression MUL_OP unary_expression .

    MUL_OP          reduce using rule 29 (multiplicative_expression -> multiplicative_expression MUL_OP unary_expression .)
    DIV_OP          reduce using rule 29 (multiplicative_expression -> multiplicative_expression MUL_OP unary_expression .)
    PLUS_OP         reduce using rule 29 (multiplicative_expression -> multiplicative_expression MUL_OP unary_expression .)
    MINUS_OP        reduce using rule 29 (multiplicative_expression -> multiplicative_expression MUL_OP unary_expression .)
    LESS_OP         reduce using rule 29 (multiplicative_expression -> multiplicative_expression MUL_OP unary_expression .)
    LESS_EQUAL_OP   reduce using rule 29 (multiplicative_expression -> multiplicative_expression MUL_OP unary_expression .)
    GREATER_OP      reduce using rule 29 (multiplicative_expression -> multiplicative_expression MUL_OP unary_expression .)
    GREATER_EQUAL_OP reduce using rule 29 (multiplicative_expression -> multiplicative_expression MUL_OP unary_expression .)
    EQUAL_OP        reduce using rule 29 (multiplicative_expression -> multiplicative_expression MUL_OP unary_expression .)
    DIFFERENT_OP    reduce using rule 29 (multiplicative_expression -> multiplicative_expression MUL_OP unary_expression .)
    LOGICAL_OP_AND  reduce using rule 29 (multiplicative_expression -> multiplicative_expression MUL_OP unary_expression .)
    LOGICAL_OP_OR   reduce using rule 29 (multiplicative_expression -> multiplicative_expression MUL_OP unary_expression .)
    END_LINE        reduce using rule 29 (multiplicative_expression -> multiplicative_expression MUL_OP unary_expression .)
    RPAREN          reduce using rule 29 (multiplicative_expression -> multiplicative_expression MUL_OP unary_expression .)
    SEPARATION      reduce using rule 29 (multiplicative_expression -> multiplicative_expression MUL_OP unary_expression .)


state 100

    (30) multiplicative_expression -> multiplicative_expression DIV_OP unary_expression .

    MUL_OP          reduce using rule 30 (multiplicative_expression -> multiplicative_expression DIV_OP unary_expression .)
    DIV_OP          reduce using rule 30 (multiplicative_expression -> multiplicative_expression DIV_OP unary_expression .)
    PLUS_OP         reduce using rule 30 (multiplicative_expression -> multiplicative_expression DIV_OP unary_expression .)
    MINUS_OP        reduce using rule 30 (multiplicative_expression -> multiplicative_expression DIV_OP unary_expression .)
    LESS_OP         reduce using rule 30 (multiplicative_expression -> multiplicative_expression DIV_OP unary_expression .)
    LESS_EQUAL_OP   reduce using rule 30 (multiplicative_expression -> multiplicative_expression DIV_OP unary_expression .)
    GREATER_OP      reduce using rule 30 (multiplicative_expression -> multiplicative_expression DIV_OP unary_expression .)
    GREATER_EQUAL_OP reduce using rule 30 (multiplicative_expression -> multiplicative_expression DIV_OP unary_expression .)
    EQUAL_OP        reduce using rule 30 (multiplicative_expression -> multiplicative_expression DIV_OP unary_expression .)
    DIFFERENT_OP    reduce using rule 30 (multiplicative_expression -> multiplicative_expression DIV_OP unary_expression .)
    LOGICAL_OP_AND  reduce using rule 30 (multiplicative_expression -> multiplicative_expression DIV_OP unary_expression .)
    LOGICAL_OP_OR   reduce using rule 30 (multiplicative_expression -> multiplicative_expression DIV_OP unary_expression .)
    END_LINE        reduce using rule 30 (multiplicative_expression -> multiplicative_expression DIV_OP unary_expression .)
    RPAREN          reduce using rule 30 (multiplicative_expression -> multiplicative_expression DIV_OP unary_expression .)
    SEPARATION      reduce using rule 30 (multiplicative_expression -> multiplicative_expression DIV_OP unary_expression .)


state 101

    (55) conditional -> CONDITIONAL1 LPAREN expression RPAREN . STRUCTURE_BODY statement_list
    (56) conditional -> CONDITIONAL1 LPAREN expression RPAREN . STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list

    STRUCTURE_BODY  shift and go to state 105


state 102

    (57) loop -> LOOP1 LPAREN expression RPAREN . STRUCTURE_BODY statement_list

    STRUCTURE_BODY  shift and go to state 106


state 103

    (58) loop -> LOOP2 LPAREN expression SEPARATION . expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (13) expression -> . logical_or_expression
    (14) logical_or_expression -> . logical_or_expression LOGICAL_OP_OR logical_and_expression
    (15) logical_or_expression -> . logical_and_expression
    (16) logical_and_expression -> . logical_and_expression LOGICAL_OP_AND equality_expression
    (17) logical_and_expression -> . equality_expression
    (18) equality_expression -> . equality_expression EQUAL_OP relational_expression
    (19) equality_expression -> . equality_expression DIFFERENT_OP relational_expression
    (20) equality_expression -> . relational_expression
    (21) relational_expression -> . relational_expression LESS_OP additive_expression
    (22) relational_expression -> . relational_expression LESS_EQUAL_OP additive_expression
    (23) relational_expression -> . relational_expression GREATER_OP additive_expression
    (24) relational_expression -> . relational_expression GREATER_EQUAL_OP additive_expression
    (25) relational_expression -> . additive_expression
    (26) additive_expression -> . additive_expression PLUS_OP multiplicative_expression
    (27) additive_expression -> . additive_expression MINUS_OP multiplicative_expression
    (28) additive_expression -> . multiplicative_expression
    (29) multiplicative_expression -> . multiplicative_expression MUL_OP unary_expression
    (30) multiplicative_expression -> . multiplicative_expression DIV_OP unary_expression
    (31) multiplicative_expression -> . unary_expression
    (32) unary_expression -> . LOGICAL_OP_NOT unary_expression
    (33) unary_expression -> . primary_expression
    (34) primary_expression -> . LPAREN expression RPAREN
    (35) primary_expression -> . term
    (36) term -> . NUMBER_INTEGER
    (37) term -> . NUMBER_FLOAT
    (38) term -> . VARIABLE
    (39) term -> . TRUE
    (40) term -> . FALSE
    (41) term -> . NULL
    (42) term -> . TEXT_STRING
    (43) term -> . TEXT_CHAR

    LOGICAL_OP_NOT  shift and go to state 33
    LPAREN          shift and go to state 21
    NUMBER_INTEGER  shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    VARIABLE        shift and go to state 66
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    NULL            shift and go to state 40
    TEXT_STRING     shift and go to state 41
    TEXT_CHAR       shift and go to state 42

    expression                     shift and go to state 107
    logical_or_expression          shift and go to state 13
    logical_and_expression         shift and go to state 27
    equality_expression            shift and go to state 28
    relational_expression          shift and go to state 29
    additive_expression            shift and go to state 30
    multiplicative_expression      shift and go to state 31
    unary_expression               shift and go to state 32
    primary_expression             shift and go to state 34
    term                           shift and go to state 35

state 104

    (59) function_declaration -> FUNCTION_DECLARATION VARIABLE LPAREN RPAREN . STRUCTURE_BODY statement_list

    STRUCTURE_BODY  shift and go to state 108


state 105

    (55) conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY . statement_list
    (56) conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY . statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . function_declaration END_LINE
    (10) statement -> . return_statement END_LINE
    (11) statement -> . break_statement END_LINE
    (12) statement -> . COMMENT
    (13) expression -> . logical_or_expression
    (44) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (45) declaration -> . TYPE_BOOLEAN VARIABLE
    (46) declaration -> . TYPE_STRING VARIABLE
    (47) declaration -> . TYPE_CHAR VARIABLE
    (48) declaration -> . TYPE_INTEGER VARIABLE
    (49) declaration -> . TYPE_FLOAT VARIABLE
    (50) declaration -> . TYPE_BOOLEAN assignment
    (51) declaration -> . TYPE_STRING assignment
    (52) declaration -> . TYPE_CHAR assignment
    (53) declaration -> . TYPE_INTEGER assignment
    (54) declaration -> . TYPE_FLOAT assignment
    (55) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (56) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (57) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (58) loop -> . LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (59) function_declaration -> . FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list
    (60) return_statement -> . RETURN expression
    (61) return_statement -> . RETURN
    (62) break_statement -> . BREAK
    (14) logical_or_expression -> . logical_or_expression LOGICAL_OP_OR logical_and_expression
    (15) logical_or_expression -> . logical_and_expression
    (16) logical_and_expression -> . logical_and_expression LOGICAL_OP_AND equality_expression
    (17) logical_and_expression -> . equality_expression
    (18) equality_expression -> . equality_expression EQUAL_OP relational_expression
    (19) equality_expression -> . equality_expression DIFFERENT_OP relational_expression
    (20) equality_expression -> . relational_expression
    (21) relational_expression -> . relational_expression LESS_OP additive_expression
    (22) relational_expression -> . relational_expression LESS_EQUAL_OP additive_expression
    (23) relational_expression -> . relational_expression GREATER_OP additive_expression
    (24) relational_expression -> . relational_expression GREATER_EQUAL_OP additive_expression
    (25) relational_expression -> . additive_expression
    (26) additive_expression -> . additive_expression PLUS_OP multiplicative_expression
    (27) additive_expression -> . additive_expression MINUS_OP multiplicative_expression
    (28) additive_expression -> . multiplicative_expression
    (29) multiplicative_expression -> . multiplicative_expression MUL_OP unary_expression
    (30) multiplicative_expression -> . multiplicative_expression DIV_OP unary_expression
    (31) multiplicative_expression -> . unary_expression
    (32) unary_expression -> . LOGICAL_OP_NOT unary_expression
    (33) unary_expression -> . primary_expression
    (34) primary_expression -> . LPAREN expression RPAREN
    (35) primary_expression -> . term
    (36) term -> . NUMBER_INTEGER
    (37) term -> . NUMBER_FLOAT
    (38) term -> . VARIABLE
    (39) term -> . TRUE
    (40) term -> . FALSE
    (41) term -> . NULL
    (42) term -> . TEXT_STRING
    (43) term -> . TEXT_CHAR

    COMMENT         shift and go to state 12
    VARIABLE        shift and go to state 14
    TYPE_BOOLEAN    shift and go to state 15
    TYPE_STRING     shift and go to state 16
    TYPE_CHAR       shift and go to state 17
    TYPE_INTEGER    shift and go to state 18
    TYPE_FLOAT      shift and go to state 19
    CONDITIONAL1    shift and go to state 20
    LOOP1           shift and go to state 22
    LOOP2           shift and go to state 23
    FUNCTION_DECLARATION shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    LOGICAL_OP_NOT  shift and go to state 33
    LPAREN          shift and go to state 21
    NUMBER_INTEGER  shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    NULL            shift and go to state 40
    TEXT_STRING     shift and go to state 41
    TEXT_CHAR       shift and go to state 42

    expression                     shift and go to state 4
    statement_list                 shift and go to state 109
    statement                      shift and go to state 3
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    function_declaration           shift and go to state 9
    return_statement               shift and go to state 10
    break_statement                shift and go to state 11
    logical_or_expression          shift and go to state 13
    logical_and_expression         shift and go to state 27
    equality_expression            shift and go to state 28
    relational_expression          shift and go to state 29
    additive_expression            shift and go to state 30
    multiplicative_expression      shift and go to state 31
    unary_expression               shift and go to state 32
    primary_expression             shift and go to state 34
    term                           shift and go to state 35

state 106

    (57) loop -> LOOP1 LPAREN expression RPAREN STRUCTURE_BODY . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . function_declaration END_LINE
    (10) statement -> . return_statement END_LINE
    (11) statement -> . break_statement END_LINE
    (12) statement -> . COMMENT
    (13) expression -> . logical_or_expression
    (44) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (45) declaration -> . TYPE_BOOLEAN VARIABLE
    (46) declaration -> . TYPE_STRING VARIABLE
    (47) declaration -> . TYPE_CHAR VARIABLE
    (48) declaration -> . TYPE_INTEGER VARIABLE
    (49) declaration -> . TYPE_FLOAT VARIABLE
    (50) declaration -> . TYPE_BOOLEAN assignment
    (51) declaration -> . TYPE_STRING assignment
    (52) declaration -> . TYPE_CHAR assignment
    (53) declaration -> . TYPE_INTEGER assignment
    (54) declaration -> . TYPE_FLOAT assignment
    (55) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (56) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (57) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (58) loop -> . LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (59) function_declaration -> . FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list
    (60) return_statement -> . RETURN expression
    (61) return_statement -> . RETURN
    (62) break_statement -> . BREAK
    (14) logical_or_expression -> . logical_or_expression LOGICAL_OP_OR logical_and_expression
    (15) logical_or_expression -> . logical_and_expression
    (16) logical_and_expression -> . logical_and_expression LOGICAL_OP_AND equality_expression
    (17) logical_and_expression -> . equality_expression
    (18) equality_expression -> . equality_expression EQUAL_OP relational_expression
    (19) equality_expression -> . equality_expression DIFFERENT_OP relational_expression
    (20) equality_expression -> . relational_expression
    (21) relational_expression -> . relational_expression LESS_OP additive_expression
    (22) relational_expression -> . relational_expression LESS_EQUAL_OP additive_expression
    (23) relational_expression -> . relational_expression GREATER_OP additive_expression
    (24) relational_expression -> . relational_expression GREATER_EQUAL_OP additive_expression
    (25) relational_expression -> . additive_expression
    (26) additive_expression -> . additive_expression PLUS_OP multiplicative_expression
    (27) additive_expression -> . additive_expression MINUS_OP multiplicative_expression
    (28) additive_expression -> . multiplicative_expression
    (29) multiplicative_expression -> . multiplicative_expression MUL_OP unary_expression
    (30) multiplicative_expression -> . multiplicative_expression DIV_OP unary_expression
    (31) multiplicative_expression -> . unary_expression
    (32) unary_expression -> . LOGICAL_OP_NOT unary_expression
    (33) unary_expression -> . primary_expression
    (34) primary_expression -> . LPAREN expression RPAREN
    (35) primary_expression -> . term
    (36) term -> . NUMBER_INTEGER
    (37) term -> . NUMBER_FLOAT
    (38) term -> . VARIABLE
    (39) term -> . TRUE
    (40) term -> . FALSE
    (41) term -> . NULL
    (42) term -> . TEXT_STRING
    (43) term -> . TEXT_CHAR

    COMMENT         shift and go to state 12
    VARIABLE        shift and go to state 14
    TYPE_BOOLEAN    shift and go to state 15
    TYPE_STRING     shift and go to state 16
    TYPE_CHAR       shift and go to state 17
    TYPE_INTEGER    shift and go to state 18
    TYPE_FLOAT      shift and go to state 19
    CONDITIONAL1    shift and go to state 20
    LOOP1           shift and go to state 22
    LOOP2           shift and go to state 23
    FUNCTION_DECLARATION shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    LOGICAL_OP_NOT  shift and go to state 33
    LPAREN          shift and go to state 21
    NUMBER_INTEGER  shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    NULL            shift and go to state 40
    TEXT_STRING     shift and go to state 41
    TEXT_CHAR       shift and go to state 42

    expression                     shift and go to state 4
    statement_list                 shift and go to state 110
    statement                      shift and go to state 3
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    function_declaration           shift and go to state 9
    return_statement               shift and go to state 10
    break_statement                shift and go to state 11
    logical_or_expression          shift and go to state 13
    logical_and_expression         shift and go to state 27
    equality_expression            shift and go to state 28
    relational_expression          shift and go to state 29
    additive_expression            shift and go to state 30
    multiplicative_expression      shift and go to state 31
    unary_expression               shift and go to state 32
    primary_expression             shift and go to state 34
    term                           shift and go to state 35

state 107

    (58) loop -> LOOP2 LPAREN expression SEPARATION expression . SEPARATION expression RPAREN STRUCTURE_BODY statement_list

    SEPARATION      shift and go to state 111


state 108

    (59) function_declaration -> FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . function_declaration END_LINE
    (10) statement -> . return_statement END_LINE
    (11) statement -> . break_statement END_LINE
    (12) statement -> . COMMENT
    (13) expression -> . logical_or_expression
    (44) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (45) declaration -> . TYPE_BOOLEAN VARIABLE
    (46) declaration -> . TYPE_STRING VARIABLE
    (47) declaration -> . TYPE_CHAR VARIABLE
    (48) declaration -> . TYPE_INTEGER VARIABLE
    (49) declaration -> . TYPE_FLOAT VARIABLE
    (50) declaration -> . TYPE_BOOLEAN assignment
    (51) declaration -> . TYPE_STRING assignment
    (52) declaration -> . TYPE_CHAR assignment
    (53) declaration -> . TYPE_INTEGER assignment
    (54) declaration -> . TYPE_FLOAT assignment
    (55) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (56) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (57) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (58) loop -> . LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (59) function_declaration -> . FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list
    (60) return_statement -> . RETURN expression
    (61) return_statement -> . RETURN
    (62) break_statement -> . BREAK
    (14) logical_or_expression -> . logical_or_expression LOGICAL_OP_OR logical_and_expression
    (15) logical_or_expression -> . logical_and_expression
    (16) logical_and_expression -> . logical_and_expression LOGICAL_OP_AND equality_expression
    (17) logical_and_expression -> . equality_expression
    (18) equality_expression -> . equality_expression EQUAL_OP relational_expression
    (19) equality_expression -> . equality_expression DIFFERENT_OP relational_expression
    (20) equality_expression -> . relational_expression
    (21) relational_expression -> . relational_expression LESS_OP additive_expression
    (22) relational_expression -> . relational_expression LESS_EQUAL_OP additive_expression
    (23) relational_expression -> . relational_expression GREATER_OP additive_expression
    (24) relational_expression -> . relational_expression GREATER_EQUAL_OP additive_expression
    (25) relational_expression -> . additive_expression
    (26) additive_expression -> . additive_expression PLUS_OP multiplicative_expression
    (27) additive_expression -> . additive_expression MINUS_OP multiplicative_expression
    (28) additive_expression -> . multiplicative_expression
    (29) multiplicative_expression -> . multiplicative_expression MUL_OP unary_expression
    (30) multiplicative_expression -> . multiplicative_expression DIV_OP unary_expression
    (31) multiplicative_expression -> . unary_expression
    (32) unary_expression -> . LOGICAL_OP_NOT unary_expression
    (33) unary_expression -> . primary_expression
    (34) primary_expression -> . LPAREN expression RPAREN
    (35) primary_expression -> . term
    (36) term -> . NUMBER_INTEGER
    (37) term -> . NUMBER_FLOAT
    (38) term -> . VARIABLE
    (39) term -> . TRUE
    (40) term -> . FALSE
    (41) term -> . NULL
    (42) term -> . TEXT_STRING
    (43) term -> . TEXT_CHAR

    COMMENT         shift and go to state 12
    VARIABLE        shift and go to state 14
    TYPE_BOOLEAN    shift and go to state 15
    TYPE_STRING     shift and go to state 16
    TYPE_CHAR       shift and go to state 17
    TYPE_INTEGER    shift and go to state 18
    TYPE_FLOAT      shift and go to state 19
    CONDITIONAL1    shift and go to state 20
    LOOP1           shift and go to state 22
    LOOP2           shift and go to state 23
    FUNCTION_DECLARATION shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    LOGICAL_OP_NOT  shift and go to state 33
    LPAREN          shift and go to state 21
    NUMBER_INTEGER  shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    NULL            shift and go to state 40
    TEXT_STRING     shift and go to state 41
    TEXT_CHAR       shift and go to state 42

    statement_list                 shift and go to state 112
    statement                      shift and go to state 3
    expression                     shift and go to state 4
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    function_declaration           shift and go to state 9
    return_statement               shift and go to state 10
    break_statement                shift and go to state 11
    logical_or_expression          shift and go to state 13
    logical_and_expression         shift and go to state 27
    equality_expression            shift and go to state 28
    relational_expression          shift and go to state 29
    additive_expression            shift and go to state 30
    multiplicative_expression      shift and go to state 31
    unary_expression               shift and go to state 32
    primary_expression             shift and go to state 34
    term                           shift and go to state 35

state 109

    (55) conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list .
    (56) conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list . CONDITIONAL2 STRUCTURE_BODY statement_list
    (2) statement_list -> statement_list . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . function_declaration END_LINE
    (10) statement -> . return_statement END_LINE
    (11) statement -> . break_statement END_LINE
    (12) statement -> . COMMENT
    (13) expression -> . logical_or_expression
    (44) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (45) declaration -> . TYPE_BOOLEAN VARIABLE
    (46) declaration -> . TYPE_STRING VARIABLE
    (47) declaration -> . TYPE_CHAR VARIABLE
    (48) declaration -> . TYPE_INTEGER VARIABLE
    (49) declaration -> . TYPE_FLOAT VARIABLE
    (50) declaration -> . TYPE_BOOLEAN assignment
    (51) declaration -> . TYPE_STRING assignment
    (52) declaration -> . TYPE_CHAR assignment
    (53) declaration -> . TYPE_INTEGER assignment
    (54) declaration -> . TYPE_FLOAT assignment
    (55) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (56) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (57) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (58) loop -> . LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (59) function_declaration -> . FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list
    (60) return_statement -> . RETURN expression
    (61) return_statement -> . RETURN
    (62) break_statement -> . BREAK
    (14) logical_or_expression -> . logical_or_expression LOGICAL_OP_OR logical_and_expression
    (15) logical_or_expression -> . logical_and_expression
    (16) logical_and_expression -> . logical_and_expression LOGICAL_OP_AND equality_expression
    (17) logical_and_expression -> . equality_expression
    (18) equality_expression -> . equality_expression EQUAL_OP relational_expression
    (19) equality_expression -> . equality_expression DIFFERENT_OP relational_expression
    (20) equality_expression -> . relational_expression
    (21) relational_expression -> . relational_expression LESS_OP additive_expression
    (22) relational_expression -> . relational_expression LESS_EQUAL_OP additive_expression
    (23) relational_expression -> . relational_expression GREATER_OP additive_expression
    (24) relational_expression -> . relational_expression GREATER_EQUAL_OP additive_expression
    (25) relational_expression -> . additive_expression
    (26) additive_expression -> . additive_expression PLUS_OP multiplicative_expression
    (27) additive_expression -> . additive_expression MINUS_OP multiplicative_expression
    (28) additive_expression -> . multiplicative_expression
    (29) multiplicative_expression -> . multiplicative_expression MUL_OP unary_expression
    (30) multiplicative_expression -> . multiplicative_expression DIV_OP unary_expression
    (31) multiplicative_expression -> . unary_expression
    (32) unary_expression -> . LOGICAL_OP_NOT unary_expression
    (33) unary_expression -> . primary_expression
    (34) primary_expression -> . LPAREN expression RPAREN
    (35) primary_expression -> . term
    (36) term -> . NUMBER_INTEGER
    (37) term -> . NUMBER_FLOAT
    (38) term -> . VARIABLE
    (39) term -> . TRUE
    (40) term -> . FALSE
    (41) term -> . NULL
    (42) term -> . TEXT_STRING
    (43) term -> . TEXT_CHAR

    END_LINE        reduce using rule 55 (conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list .)
    CONDITIONAL2    shift and go to state 113
    COMMENT         shift and go to state 12
    VARIABLE        shift and go to state 14
    TYPE_BOOLEAN    shift and go to state 15
    TYPE_STRING     shift and go to state 16
    TYPE_CHAR       shift and go to state 17
    TYPE_INTEGER    shift and go to state 18
    TYPE_FLOAT      shift and go to state 19
    CONDITIONAL1    shift and go to state 20
    LOOP1           shift and go to state 22
    LOOP2           shift and go to state 23
    FUNCTION_DECLARATION shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    LOGICAL_OP_NOT  shift and go to state 33
    LPAREN          shift and go to state 21
    NUMBER_INTEGER  shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    NULL            shift and go to state 40
    TEXT_STRING     shift and go to state 41
    TEXT_CHAR       shift and go to state 42

    expression                     shift and go to state 4
    statement                      shift and go to state 43
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    function_declaration           shift and go to state 9
    return_statement               shift and go to state 10
    break_statement                shift and go to state 11
    logical_or_expression          shift and go to state 13
    logical_and_expression         shift and go to state 27
    equality_expression            shift and go to state 28
    relational_expression          shift and go to state 29
    additive_expression            shift and go to state 30
    multiplicative_expression      shift and go to state 31
    unary_expression               shift and go to state 32
    primary_expression             shift and go to state 34
    term                           shift and go to state 35

state 110

    (57) loop -> LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . function_declaration END_LINE
    (10) statement -> . return_statement END_LINE
    (11) statement -> . break_statement END_LINE
    (12) statement -> . COMMENT
    (13) expression -> . logical_or_expression
    (44) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (45) declaration -> . TYPE_BOOLEAN VARIABLE
    (46) declaration -> . TYPE_STRING VARIABLE
    (47) declaration -> . TYPE_CHAR VARIABLE
    (48) declaration -> . TYPE_INTEGER VARIABLE
    (49) declaration -> . TYPE_FLOAT VARIABLE
    (50) declaration -> . TYPE_BOOLEAN assignment
    (51) declaration -> . TYPE_STRING assignment
    (52) declaration -> . TYPE_CHAR assignment
    (53) declaration -> . TYPE_INTEGER assignment
    (54) declaration -> . TYPE_FLOAT assignment
    (55) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (56) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (57) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (58) loop -> . LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (59) function_declaration -> . FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list
    (60) return_statement -> . RETURN expression
    (61) return_statement -> . RETURN
    (62) break_statement -> . BREAK
    (14) logical_or_expression -> . logical_or_expression LOGICAL_OP_OR logical_and_expression
    (15) logical_or_expression -> . logical_and_expression
    (16) logical_and_expression -> . logical_and_expression LOGICAL_OP_AND equality_expression
    (17) logical_and_expression -> . equality_expression
    (18) equality_expression -> . equality_expression EQUAL_OP relational_expression
    (19) equality_expression -> . equality_expression DIFFERENT_OP relational_expression
    (20) equality_expression -> . relational_expression
    (21) relational_expression -> . relational_expression LESS_OP additive_expression
    (22) relational_expression -> . relational_expression LESS_EQUAL_OP additive_expression
    (23) relational_expression -> . relational_expression GREATER_OP additive_expression
    (24) relational_expression -> . relational_expression GREATER_EQUAL_OP additive_expression
    (25) relational_expression -> . additive_expression
    (26) additive_expression -> . additive_expression PLUS_OP multiplicative_expression
    (27) additive_expression -> . additive_expression MINUS_OP multiplicative_expression
    (28) additive_expression -> . multiplicative_expression
    (29) multiplicative_expression -> . multiplicative_expression MUL_OP unary_expression
    (30) multiplicative_expression -> . multiplicative_expression DIV_OP unary_expression
    (31) multiplicative_expression -> . unary_expression
    (32) unary_expression -> . LOGICAL_OP_NOT unary_expression
    (33) unary_expression -> . primary_expression
    (34) primary_expression -> . LPAREN expression RPAREN
    (35) primary_expression -> . term
    (36) term -> . NUMBER_INTEGER
    (37) term -> . NUMBER_FLOAT
    (38) term -> . VARIABLE
    (39) term -> . TRUE
    (40) term -> . FALSE
    (41) term -> . NULL
    (42) term -> . TEXT_STRING
    (43) term -> . TEXT_CHAR

    END_LINE        reduce using rule 57 (loop -> LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list .)
    COMMENT         shift and go to state 12
    VARIABLE        shift and go to state 14
    TYPE_BOOLEAN    shift and go to state 15
    TYPE_STRING     shift and go to state 16
    TYPE_CHAR       shift and go to state 17
    TYPE_INTEGER    shift and go to state 18
    TYPE_FLOAT      shift and go to state 19
    CONDITIONAL1    shift and go to state 20
    LOOP1           shift and go to state 22
    LOOP2           shift and go to state 23
    FUNCTION_DECLARATION shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    LOGICAL_OP_NOT  shift and go to state 33
    LPAREN          shift and go to state 21
    NUMBER_INTEGER  shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    NULL            shift and go to state 40
    TEXT_STRING     shift and go to state 41
    TEXT_CHAR       shift and go to state 42

    expression                     shift and go to state 4
    statement                      shift and go to state 43
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    function_declaration           shift and go to state 9
    return_statement               shift and go to state 10
    break_statement                shift and go to state 11
    logical_or_expression          shift and go to state 13
    logical_and_expression         shift and go to state 27
    equality_expression            shift and go to state 28
    relational_expression          shift and go to state 29
    additive_expression            shift and go to state 30
    multiplicative_expression      shift and go to state 31
    unary_expression               shift and go to state 32
    primary_expression             shift and go to state 34
    term                           shift and go to state 35

state 111

    (58) loop -> LOOP2 LPAREN expression SEPARATION expression SEPARATION . expression RPAREN STRUCTURE_BODY statement_list
    (13) expression -> . logical_or_expression
    (14) logical_or_expression -> . logical_or_expression LOGICAL_OP_OR logical_and_expression
    (15) logical_or_expression -> . logical_and_expression
    (16) logical_and_expression -> . logical_and_expression LOGICAL_OP_AND equality_expression
    (17) logical_and_expression -> . equality_expression
    (18) equality_expression -> . equality_expression EQUAL_OP relational_expression
    (19) equality_expression -> . equality_expression DIFFERENT_OP relational_expression
    (20) equality_expression -> . relational_expression
    (21) relational_expression -> . relational_expression LESS_OP additive_expression
    (22) relational_expression -> . relational_expression LESS_EQUAL_OP additive_expression
    (23) relational_expression -> . relational_expression GREATER_OP additive_expression
    (24) relational_expression -> . relational_expression GREATER_EQUAL_OP additive_expression
    (25) relational_expression -> . additive_expression
    (26) additive_expression -> . additive_expression PLUS_OP multiplicative_expression
    (27) additive_expression -> . additive_expression MINUS_OP multiplicative_expression
    (28) additive_expression -> . multiplicative_expression
    (29) multiplicative_expression -> . multiplicative_expression MUL_OP unary_expression
    (30) multiplicative_expression -> . multiplicative_expression DIV_OP unary_expression
    (31) multiplicative_expression -> . unary_expression
    (32) unary_expression -> . LOGICAL_OP_NOT unary_expression
    (33) unary_expression -> . primary_expression
    (34) primary_expression -> . LPAREN expression RPAREN
    (35) primary_expression -> . term
    (36) term -> . NUMBER_INTEGER
    (37) term -> . NUMBER_FLOAT
    (38) term -> . VARIABLE
    (39) term -> . TRUE
    (40) term -> . FALSE
    (41) term -> . NULL
    (42) term -> . TEXT_STRING
    (43) term -> . TEXT_CHAR

    LOGICAL_OP_NOT  shift and go to state 33
    LPAREN          shift and go to state 21
    NUMBER_INTEGER  shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    VARIABLE        shift and go to state 66
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    NULL            shift and go to state 40
    TEXT_STRING     shift and go to state 41
    TEXT_CHAR       shift and go to state 42

    expression                     shift and go to state 114
    logical_or_expression          shift and go to state 13
    logical_and_expression         shift and go to state 27
    equality_expression            shift and go to state 28
    relational_expression          shift and go to state 29
    additive_expression            shift and go to state 30
    multiplicative_expression      shift and go to state 31
    unary_expression               shift and go to state 32
    primary_expression             shift and go to state 34
    term                           shift and go to state 35

state 112

    (59) function_declaration -> FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . function_declaration END_LINE
    (10) statement -> . return_statement END_LINE
    (11) statement -> . break_statement END_LINE
    (12) statement -> . COMMENT
    (13) expression -> . logical_or_expression
    (44) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (45) declaration -> . TYPE_BOOLEAN VARIABLE
    (46) declaration -> . TYPE_STRING VARIABLE
    (47) declaration -> . TYPE_CHAR VARIABLE
    (48) declaration -> . TYPE_INTEGER VARIABLE
    (49) declaration -> . TYPE_FLOAT VARIABLE
    (50) declaration -> . TYPE_BOOLEAN assignment
    (51) declaration -> . TYPE_STRING assignment
    (52) declaration -> . TYPE_CHAR assignment
    (53) declaration -> . TYPE_INTEGER assignment
    (54) declaration -> . TYPE_FLOAT assignment
    (55) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (56) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (57) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (58) loop -> . LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (59) function_declaration -> . FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list
    (60) return_statement -> . RETURN expression
    (61) return_statement -> . RETURN
    (62) break_statement -> . BREAK
    (14) logical_or_expression -> . logical_or_expression LOGICAL_OP_OR logical_and_expression
    (15) logical_or_expression -> . logical_and_expression
    (16) logical_and_expression -> . logical_and_expression LOGICAL_OP_AND equality_expression
    (17) logical_and_expression -> . equality_expression
    (18) equality_expression -> . equality_expression EQUAL_OP relational_expression
    (19) equality_expression -> . equality_expression DIFFERENT_OP relational_expression
    (20) equality_expression -> . relational_expression
    (21) relational_expression -> . relational_expression LESS_OP additive_expression
    (22) relational_expression -> . relational_expression LESS_EQUAL_OP additive_expression
    (23) relational_expression -> . relational_expression GREATER_OP additive_expression
    (24) relational_expression -> . relational_expression GREATER_EQUAL_OP additive_expression
    (25) relational_expression -> . additive_expression
    (26) additive_expression -> . additive_expression PLUS_OP multiplicative_expression
    (27) additive_expression -> . additive_expression MINUS_OP multiplicative_expression
    (28) additive_expression -> . multiplicative_expression
    (29) multiplicative_expression -> . multiplicative_expression MUL_OP unary_expression
    (30) multiplicative_expression -> . multiplicative_expression DIV_OP unary_expression
    (31) multiplicative_expression -> . unary_expression
    (32) unary_expression -> . LOGICAL_OP_NOT unary_expression
    (33) unary_expression -> . primary_expression
    (34) primary_expression -> . LPAREN expression RPAREN
    (35) primary_expression -> . term
    (36) term -> . NUMBER_INTEGER
    (37) term -> . NUMBER_FLOAT
    (38) term -> . VARIABLE
    (39) term -> . TRUE
    (40) term -> . FALSE
    (41) term -> . NULL
    (42) term -> . TEXT_STRING
    (43) term -> . TEXT_CHAR

    END_LINE        reduce using rule 59 (function_declaration -> FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list .)
    COMMENT         shift and go to state 12
    VARIABLE        shift and go to state 14
    TYPE_BOOLEAN    shift and go to state 15
    TYPE_STRING     shift and go to state 16
    TYPE_CHAR       shift and go to state 17
    TYPE_INTEGER    shift and go to state 18
    TYPE_FLOAT      shift and go to state 19
    CONDITIONAL1    shift and go to state 20
    LOOP1           shift and go to state 22
    LOOP2           shift and go to state 23
    FUNCTION_DECLARATION shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    LOGICAL_OP_NOT  shift and go to state 33
    LPAREN          shift and go to state 21
    NUMBER_INTEGER  shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    NULL            shift and go to state 40
    TEXT_STRING     shift and go to state 41
    TEXT_CHAR       shift and go to state 42

    statement                      shift and go to state 43
    expression                     shift and go to state 4
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    function_declaration           shift and go to state 9
    return_statement               shift and go to state 10
    break_statement                shift and go to state 11
    logical_or_expression          shift and go to state 13
    logical_and_expression         shift and go to state 27
    equality_expression            shift and go to state 28
    relational_expression          shift and go to state 29
    additive_expression            shift and go to state 30
    multiplicative_expression      shift and go to state 31
    unary_expression               shift and go to state 32
    primary_expression             shift and go to state 34
    term                           shift and go to state 35

state 113

    (56) conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 . STRUCTURE_BODY statement_list

    STRUCTURE_BODY  shift and go to state 115


state 114

    (58) loop -> LOOP2 LPAREN expression SEPARATION expression SEPARATION expression . RPAREN STRUCTURE_BODY statement_list

    RPAREN          shift and go to state 116


state 115

    (56) conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . function_declaration END_LINE
    (10) statement -> . return_statement END_LINE
    (11) statement -> . break_statement END_LINE
    (12) statement -> . COMMENT
    (13) expression -> . logical_or_expression
    (44) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (45) declaration -> . TYPE_BOOLEAN VARIABLE
    (46) declaration -> . TYPE_STRING VARIABLE
    (47) declaration -> . TYPE_CHAR VARIABLE
    (48) declaration -> . TYPE_INTEGER VARIABLE
    (49) declaration -> . TYPE_FLOAT VARIABLE
    (50) declaration -> . TYPE_BOOLEAN assignment
    (51) declaration -> . TYPE_STRING assignment
    (52) declaration -> . TYPE_CHAR assignment
    (53) declaration -> . TYPE_INTEGER assignment
    (54) declaration -> . TYPE_FLOAT assignment
    (55) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (56) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (57) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (58) loop -> . LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (59) function_declaration -> . FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list
    (60) return_statement -> . RETURN expression
    (61) return_statement -> . RETURN
    (62) break_statement -> . BREAK
    (14) logical_or_expression -> . logical_or_expression LOGICAL_OP_OR logical_and_expression
    (15) logical_or_expression -> . logical_and_expression
    (16) logical_and_expression -> . logical_and_expression LOGICAL_OP_AND equality_expression
    (17) logical_and_expression -> . equality_expression
    (18) equality_expression -> . equality_expression EQUAL_OP relational_expression
    (19) equality_expression -> . equality_expression DIFFERENT_OP relational_expression
    (20) equality_expression -> . relational_expression
    (21) relational_expression -> . relational_expression LESS_OP additive_expression
    (22) relational_expression -> . relational_expression LESS_EQUAL_OP additive_expression
    (23) relational_expression -> . relational_expression GREATER_OP additive_expression
    (24) relational_expression -> . relational_expression GREATER_EQUAL_OP additive_expression
    (25) relational_expression -> . additive_expression
    (26) additive_expression -> . additive_expression PLUS_OP multiplicative_expression
    (27) additive_expression -> . additive_expression MINUS_OP multiplicative_expression
    (28) additive_expression -> . multiplicative_expression
    (29) multiplicative_expression -> . multiplicative_expression MUL_OP unary_expression
    (30) multiplicative_expression -> . multiplicative_expression DIV_OP unary_expression
    (31) multiplicative_expression -> . unary_expression
    (32) unary_expression -> . LOGICAL_OP_NOT unary_expression
    (33) unary_expression -> . primary_expression
    (34) primary_expression -> . LPAREN expression RPAREN
    (35) primary_expression -> . term
    (36) term -> . NUMBER_INTEGER
    (37) term -> . NUMBER_FLOAT
    (38) term -> . VARIABLE
    (39) term -> . TRUE
    (40) term -> . FALSE
    (41) term -> . NULL
    (42) term -> . TEXT_STRING
    (43) term -> . TEXT_CHAR

    COMMENT         shift and go to state 12
    VARIABLE        shift and go to state 14
    TYPE_BOOLEAN    shift and go to state 15
    TYPE_STRING     shift and go to state 16
    TYPE_CHAR       shift and go to state 17
    TYPE_INTEGER    shift and go to state 18
    TYPE_FLOAT      shift and go to state 19
    CONDITIONAL1    shift and go to state 20
    LOOP1           shift and go to state 22
    LOOP2           shift and go to state 23
    FUNCTION_DECLARATION shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    LOGICAL_OP_NOT  shift and go to state 33
    LPAREN          shift and go to state 21
    NUMBER_INTEGER  shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    NULL            shift and go to state 40
    TEXT_STRING     shift and go to state 41
    TEXT_CHAR       shift and go to state 42

    expression                     shift and go to state 4
    statement_list                 shift and go to state 117
    statement                      shift and go to state 3
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    function_declaration           shift and go to state 9
    return_statement               shift and go to state 10
    break_statement                shift and go to state 11
    logical_or_expression          shift and go to state 13
    logical_and_expression         shift and go to state 27
    equality_expression            shift and go to state 28
    relational_expression          shift and go to state 29
    additive_expression            shift and go to state 30
    multiplicative_expression      shift and go to state 31
    unary_expression               shift and go to state 32
    primary_expression             shift and go to state 34
    term                           shift and go to state 35

state 116

    (58) loop -> LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN . STRUCTURE_BODY statement_list

    STRUCTURE_BODY  shift and go to state 118


state 117

    (56) conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . function_declaration END_LINE
    (10) statement -> . return_statement END_LINE
    (11) statement -> . break_statement END_LINE
    (12) statement -> . COMMENT
    (13) expression -> . logical_or_expression
    (44) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (45) declaration -> . TYPE_BOOLEAN VARIABLE
    (46) declaration -> . TYPE_STRING VARIABLE
    (47) declaration -> . TYPE_CHAR VARIABLE
    (48) declaration -> . TYPE_INTEGER VARIABLE
    (49) declaration -> . TYPE_FLOAT VARIABLE
    (50) declaration -> . TYPE_BOOLEAN assignment
    (51) declaration -> . TYPE_STRING assignment
    (52) declaration -> . TYPE_CHAR assignment
    (53) declaration -> . TYPE_INTEGER assignment
    (54) declaration -> . TYPE_FLOAT assignment
    (55) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (56) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (57) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (58) loop -> . LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (59) function_declaration -> . FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list
    (60) return_statement -> . RETURN expression
    (61) return_statement -> . RETURN
    (62) break_statement -> . BREAK
    (14) logical_or_expression -> . logical_or_expression LOGICAL_OP_OR logical_and_expression
    (15) logical_or_expression -> . logical_and_expression
    (16) logical_and_expression -> . logical_and_expression LOGICAL_OP_AND equality_expression
    (17) logical_and_expression -> . equality_expression
    (18) equality_expression -> . equality_expression EQUAL_OP relational_expression
    (19) equality_expression -> . equality_expression DIFFERENT_OP relational_expression
    (20) equality_expression -> . relational_expression
    (21) relational_expression -> . relational_expression LESS_OP additive_expression
    (22) relational_expression -> . relational_expression LESS_EQUAL_OP additive_expression
    (23) relational_expression -> . relational_expression GREATER_OP additive_expression
    (24) relational_expression -> . relational_expression GREATER_EQUAL_OP additive_expression
    (25) relational_expression -> . additive_expression
    (26) additive_expression -> . additive_expression PLUS_OP multiplicative_expression
    (27) additive_expression -> . additive_expression MINUS_OP multiplicative_expression
    (28) additive_expression -> . multiplicative_expression
    (29) multiplicative_expression -> . multiplicative_expression MUL_OP unary_expression
    (30) multiplicative_expression -> . multiplicative_expression DIV_OP unary_expression
    (31) multiplicative_expression -> . unary_expression
    (32) unary_expression -> . LOGICAL_OP_NOT unary_expression
    (33) unary_expression -> . primary_expression
    (34) primary_expression -> . LPAREN expression RPAREN
    (35) primary_expression -> . term
    (36) term -> . NUMBER_INTEGER
    (37) term -> . NUMBER_FLOAT
    (38) term -> . VARIABLE
    (39) term -> . TRUE
    (40) term -> . FALSE
    (41) term -> . NULL
    (42) term -> . TEXT_STRING
    (43) term -> . TEXT_CHAR

    END_LINE        reduce using rule 56 (conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list .)
    COMMENT         shift and go to state 12
    VARIABLE        shift and go to state 14
    TYPE_BOOLEAN    shift and go to state 15
    TYPE_STRING     shift and go to state 16
    TYPE_CHAR       shift and go to state 17
    TYPE_INTEGER    shift and go to state 18
    TYPE_FLOAT      shift and go to state 19
    CONDITIONAL1    shift and go to state 20
    LOOP1           shift and go to state 22
    LOOP2           shift and go to state 23
    FUNCTION_DECLARATION shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    LOGICAL_OP_NOT  shift and go to state 33
    LPAREN          shift and go to state 21
    NUMBER_INTEGER  shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    NULL            shift and go to state 40
    TEXT_STRING     shift and go to state 41
    TEXT_CHAR       shift and go to state 42

    expression                     shift and go to state 4
    statement                      shift and go to state 43
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    function_declaration           shift and go to state 9
    return_statement               shift and go to state 10
    break_statement                shift and go to state 11
    logical_or_expression          shift and go to state 13
    logical_and_expression         shift and go to state 27
    equality_expression            shift and go to state 28
    relational_expression          shift and go to state 29
    additive_expression            shift and go to state 30
    multiplicative_expression      shift and go to state 31
    unary_expression               shift and go to state 32
    primary_expression             shift and go to state 34
    term                           shift and go to state 35

state 118

    (58) loop -> LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . function_declaration END_LINE
    (10) statement -> . return_statement END_LINE
    (11) statement -> . break_statement END_LINE
    (12) statement -> . COMMENT
    (13) expression -> . logical_or_expression
    (44) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (45) declaration -> . TYPE_BOOLEAN VARIABLE
    (46) declaration -> . TYPE_STRING VARIABLE
    (47) declaration -> . TYPE_CHAR VARIABLE
    (48) declaration -> . TYPE_INTEGER VARIABLE
    (49) declaration -> . TYPE_FLOAT VARIABLE
    (50) declaration -> . TYPE_BOOLEAN assignment
    (51) declaration -> . TYPE_STRING assignment
    (52) declaration -> . TYPE_CHAR assignment
    (53) declaration -> . TYPE_INTEGER assignment
    (54) declaration -> . TYPE_FLOAT assignment
    (55) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (56) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (57) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (58) loop -> . LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (59) function_declaration -> . FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list
    (60) return_statement -> . RETURN expression
    (61) return_statement -> . RETURN
    (62) break_statement -> . BREAK
    (14) logical_or_expression -> . logical_or_expression LOGICAL_OP_OR logical_and_expression
    (15) logical_or_expression -> . logical_and_expression
    (16) logical_and_expression -> . logical_and_expression LOGICAL_OP_AND equality_expression
    (17) logical_and_expression -> . equality_expression
    (18) equality_expression -> . equality_expression EQUAL_OP relational_expression
    (19) equality_expression -> . equality_expression DIFFERENT_OP relational_expression
    (20) equality_expression -> . relational_expression
    (21) relational_expression -> . relational_expression LESS_OP additive_expression
    (22) relational_expression -> . relational_expression LESS_EQUAL_OP additive_expression
    (23) relational_expression -> . relational_expression GREATER_OP additive_expression
    (24) relational_expression -> . relational_expression GREATER_EQUAL_OP additive_expression
    (25) relational_expression -> . additive_expression
    (26) additive_expression -> . additive_expression PLUS_OP multiplicative_expression
    (27) additive_expression -> . additive_expression MINUS_OP multiplicative_expression
    (28) additive_expression -> . multiplicative_expression
    (29) multiplicative_expression -> . multiplicative_expression MUL_OP unary_expression
    (30) multiplicative_expression -> . multiplicative_expression DIV_OP unary_expression
    (31) multiplicative_expression -> . unary_expression
    (32) unary_expression -> . LOGICAL_OP_NOT unary_expression
    (33) unary_expression -> . primary_expression
    (34) primary_expression -> . LPAREN expression RPAREN
    (35) primary_expression -> . term
    (36) term -> . NUMBER_INTEGER
    (37) term -> . NUMBER_FLOAT
    (38) term -> . VARIABLE
    (39) term -> . TRUE
    (40) term -> . FALSE
    (41) term -> . NULL
    (42) term -> . TEXT_STRING
    (43) term -> . TEXT_CHAR

    COMMENT         shift and go to state 12
    VARIABLE        shift and go to state 14
    TYPE_BOOLEAN    shift and go to state 15
    TYPE_STRING     shift and go to state 16
    TYPE_CHAR       shift and go to state 17
    TYPE_INTEGER    shift and go to state 18
    TYPE_FLOAT      shift and go to state 19
    CONDITIONAL1    shift and go to state 20
    LOOP1           shift and go to state 22
    LOOP2           shift and go to state 23
    FUNCTION_DECLARATION shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    LOGICAL_OP_NOT  shift and go to state 33
    LPAREN          shift and go to state 21
    NUMBER_INTEGER  shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    NULL            shift and go to state 40
    TEXT_STRING     shift and go to state 41
    TEXT_CHAR       shift and go to state 42

    expression                     shift and go to state 4
    statement_list                 shift and go to state 119
    statement                      shift and go to state 3
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    function_declaration           shift and go to state 9
    return_statement               shift and go to state 10
    break_statement                shift and go to state 11
    logical_or_expression          shift and go to state 13
    logical_and_expression         shift and go to state 27
    equality_expression            shift and go to state 28
    relational_expression          shift and go to state 29
    additive_expression            shift and go to state 30
    multiplicative_expression      shift and go to state 31
    unary_expression               shift and go to state 32
    primary_expression             shift and go to state 34
    term                           shift and go to state 35

state 119

    (58) loop -> LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . function_declaration END_LINE
    (10) statement -> . return_statement END_LINE
    (11) statement -> . break_statement END_LINE
    (12) statement -> . COMMENT
    (13) expression -> . logical_or_expression
    (44) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (45) declaration -> . TYPE_BOOLEAN VARIABLE
    (46) declaration -> . TYPE_STRING VARIABLE
    (47) declaration -> . TYPE_CHAR VARIABLE
    (48) declaration -> . TYPE_INTEGER VARIABLE
    (49) declaration -> . TYPE_FLOAT VARIABLE
    (50) declaration -> . TYPE_BOOLEAN assignment
    (51) declaration -> . TYPE_STRING assignment
    (52) declaration -> . TYPE_CHAR assignment
    (53) declaration -> . TYPE_INTEGER assignment
    (54) declaration -> . TYPE_FLOAT assignment
    (55) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (56) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (57) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (58) loop -> . LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (59) function_declaration -> . FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list
    (60) return_statement -> . RETURN expression
    (61) return_statement -> . RETURN
    (62) break_statement -> . BREAK
    (14) logical_or_expression -> . logical_or_expression LOGICAL_OP_OR logical_and_expression
    (15) logical_or_expression -> . logical_and_expression
    (16) logical_and_expression -> . logical_and_expression LOGICAL_OP_AND equality_expression
    (17) logical_and_expression -> . equality_expression
    (18) equality_expression -> . equality_expression EQUAL_OP relational_expression
    (19) equality_expression -> . equality_expression DIFFERENT_OP relational_expression
    (20) equality_expression -> . relational_expression
    (21) relational_expression -> . relational_expression LESS_OP additive_expression
    (22) relational_expression -> . relational_expression LESS_EQUAL_OP additive_expression
    (23) relational_expression -> . relational_expression GREATER_OP additive_expression
    (24) relational_expression -> . relational_expression GREATER_EQUAL_OP additive_expression
    (25) relational_expression -> . additive_expression
    (26) additive_expression -> . additive_expression PLUS_OP multiplicative_expression
    (27) additive_expression -> . additive_expression MINUS_OP multiplicative_expression
    (28) additive_expression -> . multiplicative_expression
    (29) multiplicative_expression -> . multiplicative_expression MUL_OP unary_expression
    (30) multiplicative_expression -> . multiplicative_expression DIV_OP unary_expression
    (31) multiplicative_expression -> . unary_expression
    (32) unary_expression -> . LOGICAL_OP_NOT unary_expression
    (33) unary_expression -> . primary_expression
    (34) primary_expression -> . LPAREN expression RPAREN
    (35) primary_expression -> . term
    (36) term -> . NUMBER_INTEGER
    (37) term -> . NUMBER_FLOAT
    (38) term -> . VARIABLE
    (39) term -> . TRUE
    (40) term -> . FALSE
    (41) term -> . NULL
    (42) term -> . TEXT_STRING
    (43) term -> . TEXT_CHAR

    END_LINE        reduce using rule 58 (loop -> LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list .)
    COMMENT         shift and go to state 12
    VARIABLE        shift and go to state 14
    TYPE_BOOLEAN    shift and go to state 15
    TYPE_STRING     shift and go to state 16
    TYPE_CHAR       shift and go to state 17
    TYPE_INTEGER    shift and go to state 18
    TYPE_FLOAT      shift and go to state 19
    CONDITIONAL1    shift and go to state 20
    LOOP1           shift and go to state 22
    LOOP2           shift and go to state 23
    FUNCTION_DECLARATION shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    LOGICAL_OP_NOT  shift and go to state 33
    LPAREN          shift and go to state 21
    NUMBER_INTEGER  shift and go to state 36
    NUMBER_FLOAT    shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    NULL            shift and go to state 40
    TEXT_STRING     shift and go to state 41
    TEXT_CHAR       shift and go to state 42

    expression                     shift and go to state 4
    statement                      shift and go to state 43
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    function_declaration           shift and go to state 9
    return_statement               shift and go to state 10
    break_statement                shift and go to state 11
    logical_or_expression          shift and go to state 13
    logical_and_expression         shift and go to state 27
    equality_expression            shift and go to state 28
    relational_expression          shift and go to state 29
    additive_expression            shift and go to state 30
    multiplicative_expression      shift and go to state 31
    unary_expression               shift and go to state 32
    primary_expression             shift and go to state 34
    term                           shift and go to state 35
