
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftLOGICAL_OP_ORleftLOGICAL_OP_ANDrightLOGICAL_OP_NOTleftLESS_OPLESS_EQUAL_OPGREATER_OPGREATER_EQUAL_OPEQUAL_OPDIFFERENT_OPleftPLUS_OPMINUS_OPleftMUL_OPDIV_OPnonassocLPARENRPARENASSIGNMENT_OP BREAK COMMENT CONDITIONAL1 CONDITIONAL2 DIFFERENT_OP DIV_OP END_LINE EQUAL_OP FALSE FUNCTION_DECLARATION GREATER_EQUAL_OP GREATER_OP LESS_EQUAL_OP LESS_OP LOGICAL_OP_AND LOGICAL_OP_NOT LOGICAL_OP_OR LOOP1 LOOP2 LPAREN MINUS_OP MUL_OP NULL NUMBER_FLOAT NUMBER_INTEGER PLUS_OP PRINT_DECLARATION RETURN RPAREN SEPARATION STRUCTURE_BODY TEXT_CHAR TEXT_STRING TRUE TYPE_BOOLEAN TYPE_CHAR TYPE_FLOAT TYPE_INTEGER TYPE_STRING VARIABLEprogram : statement_liststatement_list : statement_list statement\n                      | statementstatement : expression END_LINE\n                 | assignment END_LINE\n                 | declaration END_LINE\n                 | conditional END_LINE\n                 | loop END_LINE\n                 | return_statement END_LINE\n                 | break_statement END_LINE\n                 | function_declaration END_LINE\n                 | function_call END_LINE\n                 | print_statement END_LINE\n                 | comment\n                 function_declaration : type FUNCTION_DECLARATION LPAREN parameter_list RPAREN STRUCTURE_BODY statement_list END_LINE\n                            | FUNCTION_DECLARATION LPAREN parameter_list RPAREN STRUCTURE_BODY statement_list END_LINEparameter_list : parameter_list SEPARATION parameter\n                      | parameter\n                      | emptyparameter : type VARIABLEfunction_call : VARIABLE LPAREN argument_list RPARENargument_list : argument_list SEPARATION expression\n                     | expression\n                     | emptyprint_statement : PRINT_DECLARATION LPAREN expression RPARENexpression : binary_expression\n                  | unitary_expression\n                  | primary_expression\n                  binary_expression : expression PLUS_OP expression\n                         | expression MINUS_OP expression\n                         | expression MUL_OP expression\n                         | expression DIV_OP expression\n                         | expression LESS_OP expression\n                         | expression GREATER_OP expression\n                         | expression LESS_EQUAL_OP expression\n                         | expression GREATER_EQUAL_OP expression\n                         | expression EQUAL_OP expression\n                         | expression DIFFERENT_OP expression\n                         | expression LOGICAL_OP_AND expression\n                         | expression LOGICAL_OP_OR expressionunitary_expression : MINUS_OP expression\n                          | LOGICAL_OP_NOT expressionprimary_expression : VARIABLE\n                          | NUMBER_INTEGER\n                          | NUMBER_FLOAT\n                          | TRUE\n                          | FALSE\n                          | TEXT_CHAR\n                          | TEXT_STRING\n                          | function_callassignment : VARIABLE ASSIGNMENT_OP expressiondeclaration : type VARIABLE ASSIGNMENT_OP expression\n                   | type VARIABLEconditional : CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list\n                   | CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_listloop : LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list\n            | LOOP2 LPAREN assignment SEPARATION expression SEPARATION assignment RPAREN STRUCTURE_BODY statement_listreturn_statement : RETURN expression\n                        | RETURNbreak_statement : BREAKcomment : COMMENTtype : TYPE_INTEGER\n            | TYPE_FLOAT\n            | TYPE_BOOLEAN\n            | TYPE_CHAR\n            | TYPE_STRING\n            | NULLempty :'
    
_lr_action_items = {'VARIABLE':([0,2,3,14,19,23,27,28,29,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,71,76,95,104,107,112,119,120,122,124,125,126,127,128,129,134,136,137,138,],[18,18,-3,-14,67,73,-61,73,73,-62,-63,-64,-65,-66,-67,-2,-4,73,73,73,73,73,73,73,73,73,73,73,73,-5,-6,-7,-8,-9,-10,-11,-12,-13,73,73,73,73,100,73,73,115,73,73,18,18,18,18,18,18,100,18,18,18,18,18,18,]),'CONDITIONAL1':([0,2,3,14,27,42,43,56,57,58,59,60,61,62,63,64,119,120,122,124,125,126,128,129,134,136,137,138,],[20,20,-3,-14,-61,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,20,20,20,20,20,20,20,20,20,20,20,20,]),'LOOP1':([0,2,3,14,27,42,43,56,57,58,59,60,61,62,63,64,119,120,122,124,125,126,128,129,134,136,137,138,],[21,21,-3,-14,-61,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,21,21,21,21,21,21,21,21,21,21,21,21,]),'LOOP2':([0,2,3,14,27,42,43,56,57,58,59,60,61,62,63,64,119,120,122,124,125,126,128,129,134,136,137,138,],[22,22,-3,-14,-61,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,22,22,22,22,22,22,22,22,22,22,22,22,]),'RETURN':([0,2,3,14,27,42,43,56,57,58,59,60,61,62,63,64,119,120,122,124,125,126,128,129,134,136,137,138,],[23,23,-3,-14,-61,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,23,23,23,23,23,23,23,23,23,23,23,23,]),'BREAK':([0,2,3,14,27,42,43,56,57,58,59,60,61,62,63,64,119,120,122,124,125,126,128,129,134,136,137,138,],[24,24,-3,-14,-61,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,24,24,24,24,24,24,24,24,24,24,24,24,]),'FUNCTION_DECLARATION':([0,2,3,14,19,27,36,37,38,39,40,41,42,43,56,57,58,59,60,61,62,63,64,119,120,122,124,125,126,128,129,134,136,137,138,],[25,25,-3,-14,68,-61,-62,-63,-64,-65,-66,-67,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,25,25,25,25,25,25,25,25,25,25,25,25,]),'PRINT_DECLARATION':([0,2,3,14,27,42,43,56,57,58,59,60,61,62,63,64,119,120,122,124,125,126,128,129,134,136,137,138,],[26,26,-3,-14,-61,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,26,26,26,26,26,26,26,26,26,26,26,26,]),'COMMENT':([0,2,3,14,27,42,43,56,57,58,59,60,61,62,63,64,119,120,122,124,125,126,128,129,134,136,137,138,],[27,27,-3,-14,-61,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,27,27,27,27,27,27,27,27,27,27,27,27,]),'MINUS_OP':([0,2,3,4,12,14,15,16,17,18,23,27,28,29,30,31,32,33,34,35,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,95,97,98,105,106,107,108,112,117,119,120,121,122,124,125,126,128,129,134,136,137,138,],[28,28,-3,45,-50,-14,-26,-27,-28,-43,28,-61,28,28,-44,-45,-46,-47,-48,-49,-2,-4,28,28,28,28,28,28,28,28,28,28,28,28,-5,-6,-7,-8,-9,-10,-11,-12,-13,28,28,28,28,45,-43,-50,28,-41,45,-29,-30,-31,-32,45,45,45,45,45,45,45,45,45,45,28,45,45,45,-21,28,45,28,45,28,28,45,28,28,28,28,28,28,28,28,28,28,]),'LOGICAL_OP_NOT':([0,2,3,14,23,27,28,29,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,76,95,107,112,119,120,122,124,125,126,128,129,134,136,137,138,],[29,29,-3,-14,29,-61,29,29,-2,-4,29,29,29,29,29,29,29,29,29,29,29,29,-5,-6,-7,-8,-9,-10,-11,-12,-13,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'NUMBER_INTEGER':([0,2,3,14,23,27,28,29,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,76,95,107,112,119,120,122,124,125,126,128,129,134,136,137,138,],[30,30,-3,-14,30,-61,30,30,-2,-4,30,30,30,30,30,30,30,30,30,30,30,30,-5,-6,-7,-8,-9,-10,-11,-12,-13,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'NUMBER_FLOAT':([0,2,3,14,23,27,28,29,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,76,95,107,112,119,120,122,124,125,126,128,129,134,136,137,138,],[31,31,-3,-14,31,-61,31,31,-2,-4,31,31,31,31,31,31,31,31,31,31,31,31,-5,-6,-7,-8,-9,-10,-11,-12,-13,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'TRUE':([0,2,3,14,23,27,28,29,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,76,95,107,112,119,120,122,124,125,126,128,129,134,136,137,138,],[32,32,-3,-14,32,-61,32,32,-2,-4,32,32,32,32,32,32,32,32,32,32,32,32,-5,-6,-7,-8,-9,-10,-11,-12,-13,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'FALSE':([0,2,3,14,23,27,28,29,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,76,95,107,112,119,120,122,124,125,126,128,129,134,136,137,138,],[33,33,-3,-14,33,-61,33,33,-2,-4,33,33,33,33,33,33,33,33,33,33,33,33,-5,-6,-7,-8,-9,-10,-11,-12,-13,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'TEXT_CHAR':([0,2,3,14,23,27,28,29,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,76,95,107,112,119,120,122,124,125,126,128,129,134,136,137,138,],[34,34,-3,-14,34,-61,34,34,-2,-4,34,34,34,34,34,34,34,34,34,34,34,34,-5,-6,-7,-8,-9,-10,-11,-12,-13,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'TEXT_STRING':([0,2,3,14,23,27,28,29,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,76,95,107,112,119,120,122,124,125,126,128,129,134,136,137,138,],[35,35,-3,-14,35,-61,35,35,-2,-4,35,35,35,35,35,35,35,35,35,35,35,35,-5,-6,-7,-8,-9,-10,-11,-12,-13,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'TYPE_INTEGER':([0,2,3,14,27,42,43,56,57,58,59,60,61,62,63,64,75,96,114,119,120,122,124,125,126,128,129,134,136,137,138,],[36,36,-3,-14,-61,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'TYPE_FLOAT':([0,2,3,14,27,42,43,56,57,58,59,60,61,62,63,64,75,96,114,119,120,122,124,125,126,128,129,134,136,137,138,],[37,37,-3,-14,-61,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'TYPE_BOOLEAN':([0,2,3,14,27,42,43,56,57,58,59,60,61,62,63,64,75,96,114,119,120,122,124,125,126,128,129,134,136,137,138,],[38,38,-3,-14,-61,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'TYPE_CHAR':([0,2,3,14,27,42,43,56,57,58,59,60,61,62,63,64,75,96,114,119,120,122,124,125,126,128,129,134,136,137,138,],[39,39,-3,-14,-61,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'TYPE_STRING':([0,2,3,14,27,42,43,56,57,58,59,60,61,62,63,64,75,96,114,119,120,122,124,125,126,128,129,134,136,137,138,],[40,40,-3,-14,-61,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'NULL':([0,2,3,14,27,42,43,56,57,58,59,60,61,62,63,64,75,96,114,119,120,122,124,125,126,128,129,134,136,137,138,],[41,41,-3,-14,-61,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'$end':([1,2,3,14,27,42,43,56,57,58,59,60,61,62,63,64,],[0,-1,-3,-14,-61,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,]),'CONDITIONAL2':([3,14,27,42,43,56,57,58,59,60,61,62,63,64,125,],[-3,-14,-61,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,130,]),'END_LINE':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,23,24,27,30,31,32,33,34,35,42,43,56,57,58,59,60,61,62,63,64,67,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,106,108,116,125,126,128,129,132,133,136,138,],[-3,43,56,57,58,59,60,61,62,63,64,-14,-26,-27,-28,-43,-59,-60,-61,-44,-45,-46,-47,-48,-49,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-53,-58,-43,-50,-41,-42,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-51,-21,-52,-25,-54,-56,132,133,-16,-15,-55,-57,]),'PLUS_OP':([4,12,15,16,17,18,30,31,32,33,34,35,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,97,98,105,106,108,117,121,],[44,-50,-26,-27,-28,-43,-44,-45,-46,-47,-48,-49,44,-43,-50,-41,44,-29,-30,-31,-32,44,44,44,44,44,44,44,44,44,44,44,44,44,-21,44,44,44,]),'MUL_OP':([4,12,15,16,17,18,30,31,32,33,34,35,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,97,98,105,106,108,117,121,],[46,-50,-26,-27,-28,-43,-44,-45,-46,-47,-48,-49,46,-43,-50,46,46,46,46,-31,-32,46,46,46,46,46,46,46,46,46,46,46,46,46,-21,46,46,46,]),'DIV_OP':([4,12,15,16,17,18,30,31,32,33,34,35,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,97,98,105,106,108,117,121,],[47,-50,-26,-27,-28,-43,-44,-45,-46,-47,-48,-49,47,-43,-50,47,47,47,47,-31,-32,47,47,47,47,47,47,47,47,47,47,47,47,47,-21,47,47,47,]),'LESS_OP':([4,12,15,16,17,18,30,31,32,33,34,35,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,97,98,105,106,108,117,121,],[48,-50,-26,-27,-28,-43,-44,-45,-46,-47,-48,-49,48,-43,-50,-41,48,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,48,48,48,48,48,48,48,-21,48,48,48,]),'GREATER_OP':([4,12,15,16,17,18,30,31,32,33,34,35,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,97,98,105,106,108,117,121,],[49,-50,-26,-27,-28,-43,-44,-45,-46,-47,-48,-49,49,-43,-50,-41,49,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,49,49,49,49,49,49,49,-21,49,49,49,]),'LESS_EQUAL_OP':([4,12,15,16,17,18,30,31,32,33,34,35,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,97,98,105,106,108,117,121,],[50,-50,-26,-27,-28,-43,-44,-45,-46,-47,-48,-49,50,-43,-50,-41,50,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,50,50,50,50,50,50,50,-21,50,50,50,]),'GREATER_EQUAL_OP':([4,12,15,16,17,18,30,31,32,33,34,35,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,97,98,105,106,108,117,121,],[51,-50,-26,-27,-28,-43,-44,-45,-46,-47,-48,-49,51,-43,-50,-41,51,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,51,51,51,51,51,51,51,-21,51,51,51,]),'EQUAL_OP':([4,12,15,16,17,18,30,31,32,33,34,35,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,97,98,105,106,108,117,121,],[52,-50,-26,-27,-28,-43,-44,-45,-46,-47,-48,-49,52,-43,-50,-41,52,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,52,52,52,52,52,52,52,-21,52,52,52,]),'DIFFERENT_OP':([4,12,15,16,17,18,30,31,32,33,34,35,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,97,98,105,106,108,117,121,],[53,-50,-26,-27,-28,-43,-44,-45,-46,-47,-48,-49,53,-43,-50,-41,53,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,53,53,53,53,53,53,53,-21,53,53,53,]),'LOGICAL_OP_AND':([4,12,15,16,17,18,30,31,32,33,34,35,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,97,98,105,106,108,117,121,],[54,-50,-26,-27,-28,-43,-44,-45,-46,-47,-48,-49,54,-43,-50,-41,-42,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,54,54,54,54,54,54,-21,54,54,54,]),'LOGICAL_OP_OR':([4,12,15,16,17,18,30,31,32,33,34,35,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,97,98,105,106,108,117,121,],[55,-50,-26,-27,-28,-43,-44,-45,-46,-47,-48,-49,55,-43,-50,-41,-42,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,55,55,55,55,55,-21,55,55,55,]),'SEPARATION':([15,16,17,30,31,32,33,34,35,66,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,99,101,102,103,106,109,115,117,121,123,],[-26,-27,-28,-44,-45,-46,-47,-48,-49,-68,-43,-50,-68,-41,-42,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-51,107,-23,-24,-68,112,114,-18,-19,-21,114,-20,-22,127,-17,]),'RPAREN':([15,16,17,30,31,32,33,34,35,66,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,101,102,103,105,106,109,115,117,123,131,],[-26,-27,-28,-44,-45,-46,-47,-48,-49,-68,-43,-50,-68,-41,-42,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-51,106,-23,-24,-68,110,111,113,-18,-19,116,-21,118,-20,-22,-17,135,]),'ASSIGNMENT_OP':([18,67,100,],[65,95,65,]),'LPAREN':([18,20,21,22,25,26,68,73,],[66,69,70,71,75,76,96,66,]),'STRUCTURE_BODY':([110,111,113,118,130,135,],[119,120,122,124,134,137,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,119,120,122,124,134,137,],[2,125,126,128,129,136,138,]),'statement':([0,2,119,120,122,124,125,126,128,129,134,136,137,138,],[3,42,3,3,3,3,42,42,42,42,3,42,3,42,]),'expression':([0,2,23,28,29,44,45,46,47,48,49,50,51,52,53,54,55,65,66,69,70,76,95,107,112,119,120,122,124,125,126,128,129,134,136,137,138,],[4,4,72,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,97,98,105,108,117,121,4,4,4,4,4,4,4,4,4,4,4,4,]),'assignment':([0,2,71,119,120,122,124,125,126,127,128,129,134,136,137,138,],[5,5,99,5,5,5,5,5,5,131,5,5,5,5,5,5,]),'declaration':([0,2,119,120,122,124,125,126,128,129,134,136,137,138,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'conditional':([0,2,119,120,122,124,125,126,128,129,134,136,137,138,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'loop':([0,2,119,120,122,124,125,126,128,129,134,136,137,138,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'return_statement':([0,2,119,120,122,124,125,126,128,129,134,136,137,138,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'break_statement':([0,2,119,120,122,124,125,126,128,129,134,136,137,138,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'function_declaration':([0,2,119,120,122,124,125,126,128,129,134,136,137,138,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'function_call':([0,2,23,28,29,44,45,46,47,48,49,50,51,52,53,54,55,65,66,69,70,76,95,107,112,119,120,122,124,125,126,128,129,134,136,137,138,],[12,12,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,12,12,12,12,12,12,12,12,12,12,12,12,]),'print_statement':([0,2,119,120,122,124,125,126,128,129,134,136,137,138,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'comment':([0,2,119,120,122,124,125,126,128,129,134,136,137,138,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'binary_expression':([0,2,23,28,29,44,45,46,47,48,49,50,51,52,53,54,55,65,66,69,70,76,95,107,112,119,120,122,124,125,126,128,129,134,136,137,138,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'unitary_expression':([0,2,23,28,29,44,45,46,47,48,49,50,51,52,53,54,55,65,66,69,70,76,95,107,112,119,120,122,124,125,126,128,129,134,136,137,138,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'primary_expression':([0,2,23,28,29,44,45,46,47,48,49,50,51,52,53,54,55,65,66,69,70,76,95,107,112,119,120,122,124,125,126,128,129,134,136,137,138,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'type':([0,2,75,96,114,119,120,122,124,125,126,128,129,134,136,137,138,],[19,19,104,104,104,19,19,19,19,19,19,19,19,19,19,19,19,]),'argument_list':([66,],[92,]),'empty':([66,75,96,],[94,103,103,]),'parameter_list':([75,96,],[101,109,]),'parameter':([75,96,114,],[102,102,123,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',28),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',32),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',33),
  ('statement -> expression END_LINE','statement',2,'p_statement','parser.py',43),
  ('statement -> assignment END_LINE','statement',2,'p_statement','parser.py',44),
  ('statement -> declaration END_LINE','statement',2,'p_statement','parser.py',45),
  ('statement -> conditional END_LINE','statement',2,'p_statement','parser.py',46),
  ('statement -> loop END_LINE','statement',2,'p_statement','parser.py',47),
  ('statement -> return_statement END_LINE','statement',2,'p_statement','parser.py',48),
  ('statement -> break_statement END_LINE','statement',2,'p_statement','parser.py',49),
  ('statement -> function_declaration END_LINE','statement',2,'p_statement','parser.py',50),
  ('statement -> function_call END_LINE','statement',2,'p_statement','parser.py',51),
  ('statement -> print_statement END_LINE','statement',2,'p_statement','parser.py',52),
  ('statement -> comment','statement',1,'p_statement','parser.py',53),
  ('function_declaration -> type FUNCTION_DECLARATION LPAREN parameter_list RPAREN STRUCTURE_BODY statement_list END_LINE','function_declaration',8,'p_function_declaration','parser.py',58),
  ('function_declaration -> FUNCTION_DECLARATION LPAREN parameter_list RPAREN STRUCTURE_BODY statement_list END_LINE','function_declaration',7,'p_function_declaration','parser.py',59),
  ('parameter_list -> parameter_list SEPARATION parameter','parameter_list',3,'p_parameter_list','parser.py',75),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','parser.py',76),
  ('parameter_list -> empty','parameter_list',1,'p_parameter_list','parser.py',77),
  ('parameter -> type VARIABLE','parameter',2,'p_parameter','parser.py',86),
  ('function_call -> VARIABLE LPAREN argument_list RPAREN','function_call',4,'p_function_call','parser.py',90),
  ('argument_list -> argument_list SEPARATION expression','argument_list',3,'p_argument_list','parser.py',102),
  ('argument_list -> expression','argument_list',1,'p_argument_list','parser.py',103),
  ('argument_list -> empty','argument_list',1,'p_argument_list','parser.py',104),
  ('print_statement -> PRINT_DECLARATION LPAREN expression RPAREN','print_statement',4,'p_print_statement','parser.py',113),
  ('expression -> binary_expression','expression',1,'p_expression','parser.py',117),
  ('expression -> unitary_expression','expression',1,'p_expression','parser.py',118),
  ('expression -> primary_expression','expression',1,'p_expression','parser.py',119),
  ('binary_expression -> expression PLUS_OP expression','binary_expression',3,'p_binary_expression','parser.py',124),
  ('binary_expression -> expression MINUS_OP expression','binary_expression',3,'p_binary_expression','parser.py',125),
  ('binary_expression -> expression MUL_OP expression','binary_expression',3,'p_binary_expression','parser.py',126),
  ('binary_expression -> expression DIV_OP expression','binary_expression',3,'p_binary_expression','parser.py',127),
  ('binary_expression -> expression LESS_OP expression','binary_expression',3,'p_binary_expression','parser.py',128),
  ('binary_expression -> expression GREATER_OP expression','binary_expression',3,'p_binary_expression','parser.py',129),
  ('binary_expression -> expression LESS_EQUAL_OP expression','binary_expression',3,'p_binary_expression','parser.py',130),
  ('binary_expression -> expression GREATER_EQUAL_OP expression','binary_expression',3,'p_binary_expression','parser.py',131),
  ('binary_expression -> expression EQUAL_OP expression','binary_expression',3,'p_binary_expression','parser.py',132),
  ('binary_expression -> expression DIFFERENT_OP expression','binary_expression',3,'p_binary_expression','parser.py',133),
  ('binary_expression -> expression LOGICAL_OP_AND expression','binary_expression',3,'p_binary_expression','parser.py',134),
  ('binary_expression -> expression LOGICAL_OP_OR expression','binary_expression',3,'p_binary_expression','parser.py',135),
  ('unitary_expression -> MINUS_OP expression','unitary_expression',2,'p_unitary_expression','parser.py',165),
  ('unitary_expression -> LOGICAL_OP_NOT expression','unitary_expression',2,'p_unitary_expression','parser.py',166),
  ('primary_expression -> VARIABLE','primary_expression',1,'p_primary_expression','parser.py',174),
  ('primary_expression -> NUMBER_INTEGER','primary_expression',1,'p_primary_expression','parser.py',175),
  ('primary_expression -> NUMBER_FLOAT','primary_expression',1,'p_primary_expression','parser.py',176),
  ('primary_expression -> TRUE','primary_expression',1,'p_primary_expression','parser.py',177),
  ('primary_expression -> FALSE','primary_expression',1,'p_primary_expression','parser.py',178),
  ('primary_expression -> TEXT_CHAR','primary_expression',1,'p_primary_expression','parser.py',179),
  ('primary_expression -> TEXT_STRING','primary_expression',1,'p_primary_expression','parser.py',180),
  ('primary_expression -> function_call','primary_expression',1,'p_primary_expression','parser.py',181),
  ('assignment -> VARIABLE ASSIGNMENT_OP expression','assignment',3,'p_assignment','parser.py',191),
  ('declaration -> type VARIABLE ASSIGNMENT_OP expression','declaration',4,'p_declaration','parser.py',196),
  ('declaration -> type VARIABLE','declaration',2,'p_declaration','parser.py',197),
  ('conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list','conditional',6,'p_conditional','parser.py',206),
  ('conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list','conditional',9,'p_conditional','parser.py',207),
  ('loop -> LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list','loop',6,'p_loop','parser.py',214),
  ('loop -> LOOP2 LPAREN assignment SEPARATION expression SEPARATION assignment RPAREN STRUCTURE_BODY statement_list','loop',10,'p_loop','parser.py',215),
  ('return_statement -> RETURN expression','return_statement',2,'p_return_statement','parser.py',222),
  ('return_statement -> RETURN','return_statement',1,'p_return_statement','parser.py',223),
  ('break_statement -> BREAK','break_statement',1,'p_break_statement','parser.py',232),
  ('comment -> COMMENT','comment',1,'p_comment','parser.py',237),
  ('type -> TYPE_INTEGER','type',1,'p_type','parser.py',241),
  ('type -> TYPE_FLOAT','type',1,'p_type','parser.py',242),
  ('type -> TYPE_BOOLEAN','type',1,'p_type','parser.py',243),
  ('type -> TYPE_CHAR','type',1,'p_type','parser.py',244),
  ('type -> TYPE_STRING','type',1,'p_type','parser.py',245),
  ('type -> NULL','type',1,'p_type','parser.py',246),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',250),
]
