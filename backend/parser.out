Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    FUNCTION_DECLARATION
    LOGICAL_OP_AND
    LOGICAL_OP_OR

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement_list statement
Rule 3     statement_list -> statement
Rule 4     statement -> expression END_LINE
Rule 5     statement -> assignment END_LINE
Rule 6     statement -> declaration END_LINE
Rule 7     statement -> conditional END_LINE
Rule 8     statement -> loop END_LINE
Rule 9     statement -> return_statement END_LINE
Rule 10    statement -> break_statement END_LINE
Rule 11    statement -> comment
Rule 12    expression -> binary_expression
Rule 13    expression -> unitary_expression
Rule 14    expression -> primary_expression
Rule 15    binary_expression -> primary_expression PLUS_OP primary_expression
Rule 16    binary_expression -> primary_expression MINUS_OP primary_expression
Rule 17    binary_expression -> primary_expression MUL_OP primary_expression
Rule 18    binary_expression -> primary_expression DIV_OP primary_expression
Rule 19    binary_expression -> primary_expression LESS_OP primary_expression
Rule 20    binary_expression -> primary_expression GREATER_OP primary_expression
Rule 21    binary_expression -> primary_expression LESS_EQUAL_OP primary_expression
Rule 22    binary_expression -> primary_expression GREATER_EQUAL_OP primary_expression
Rule 23    binary_expression -> primary_expression EQUAL_OP primary_expression
Rule 24    binary_expression -> primary_expression DIFFERENT_OP primary_expression
Rule 25    unitary_expression -> MINUS_OP primary_expression
Rule 26    unitary_expression -> LOGICAL_OP_NOT primary_expression
Rule 27    primary_expression -> LPAREN expression RPAREN
Rule 28    primary_expression -> term
Rule 29    term -> NUMBER_INTEGER
Rule 30    term -> NUMBER_FLOAT
Rule 31    term -> VARIABLE
Rule 32    term -> TRUE
Rule 33    term -> FALSE
Rule 34    term -> NULL
Rule 35    term -> TEXT_STRING
Rule 36    term -> TEXT_CHAR
Rule 37    assignment -> VARIABLE ASSIGNMENT_OP expression
Rule 38    declaration -> TYPE_BOOLEAN VARIABLE
Rule 39    declaration -> TYPE_STRING VARIABLE
Rule 40    declaration -> TYPE_CHAR VARIABLE
Rule 41    declaration -> TYPE_INTEGER VARIABLE
Rule 42    declaration -> TYPE_FLOAT VARIABLE
Rule 43    declaration -> TYPE_BOOLEAN assignment
Rule 44    declaration -> TYPE_STRING assignment
Rule 45    declaration -> TYPE_CHAR assignment
Rule 46    declaration -> TYPE_INTEGER assignment
Rule 47    declaration -> TYPE_FLOAT assignment
Rule 48    conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
Rule 49    conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
Rule 50    loop -> LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
Rule 51    loop -> LOOP2 LPAREN assignment SEPARATION expression SEPARATION assignment RPAREN STRUCTURE_BODY statement_list
Rule 52    return_statement -> RETURN expression
Rule 53    return_statement -> RETURN
Rule 54    break_statement -> BREAK
Rule 55    comment -> COMMENT

Terminals, with rules where they appear

ASSIGNMENT_OP        : 37
BREAK                : 54
COMMENT              : 55
CONDITIONAL1         : 48 49
CONDITIONAL2         : 49
DIFFERENT_OP         : 24
DIV_OP               : 18
END_LINE             : 4 5 6 7 8 9 10
EQUAL_OP             : 23
FALSE                : 33
FUNCTION_DECLARATION : 
GREATER_EQUAL_OP     : 22
GREATER_OP           : 20
LESS_EQUAL_OP        : 21
LESS_OP              : 19
LOGICAL_OP_AND       : 
LOGICAL_OP_NOT       : 26
LOGICAL_OP_OR        : 
LOOP1                : 50
LOOP2                : 51
LPAREN               : 27 48 49 50 51
MINUS_OP             : 16 25
MUL_OP               : 17
NULL                 : 34
NUMBER_FLOAT         : 30
NUMBER_INTEGER       : 29
PLUS_OP              : 15
RETURN               : 52 53
RPAREN               : 27 48 49 50 51
SEPARATION           : 51 51
STRUCTURE_BODY       : 48 49 49 50 51
TEXT_CHAR            : 36
TEXT_STRING          : 35
TRUE                 : 32
TYPE_BOOLEAN         : 38 43
TYPE_CHAR            : 40 45
TYPE_FLOAT           : 42 47
TYPE_INTEGER         : 41 46
TYPE_STRING          : 39 44
VARIABLE             : 31 37 38 39 40 41 42
error                : 

Nonterminals, with rules where they appear

assignment           : 5 43 44 45 46 47 51 51
binary_expression    : 12
break_statement      : 10
comment              : 11
conditional          : 7
declaration          : 6
expression           : 4 27 37 48 49 50 51 52
loop                 : 8
primary_expression   : 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 26
program              : 0
return_statement     : 9
statement            : 2 3
statement_list       : 1 2 48 49 49 50 51
term                 : 28
unitary_expression   : 13

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . return_statement END_LINE
    (10) statement -> . break_statement END_LINE
    (11) statement -> . comment
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (37) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (38) declaration -> . TYPE_BOOLEAN VARIABLE
    (39) declaration -> . TYPE_STRING VARIABLE
    (40) declaration -> . TYPE_CHAR VARIABLE
    (41) declaration -> . TYPE_INTEGER VARIABLE
    (42) declaration -> . TYPE_FLOAT VARIABLE
    (43) declaration -> . TYPE_BOOLEAN assignment
    (44) declaration -> . TYPE_STRING assignment
    (45) declaration -> . TYPE_CHAR assignment
    (46) declaration -> . TYPE_INTEGER assignment
    (47) declaration -> . TYPE_FLOAT assignment
    (48) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (49) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (50) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (51) loop -> . LOOP2 LPAREN assignment SEPARATION expression SEPARATION assignment RPAREN STRUCTURE_BODY statement_list
    (52) return_statement -> . RETURN expression
    (53) return_statement -> . RETURN
    (54) break_statement -> . BREAK
    (55) comment -> . COMMENT
    (15) binary_expression -> . primary_expression PLUS_OP primary_expression
    (16) binary_expression -> . primary_expression MINUS_OP primary_expression
    (17) binary_expression -> . primary_expression MUL_OP primary_expression
    (18) binary_expression -> . primary_expression DIV_OP primary_expression
    (19) binary_expression -> . primary_expression LESS_OP primary_expression
    (20) binary_expression -> . primary_expression GREATER_OP primary_expression
    (21) binary_expression -> . primary_expression LESS_EQUAL_OP primary_expression
    (22) binary_expression -> . primary_expression GREATER_EQUAL_OP primary_expression
    (23) binary_expression -> . primary_expression EQUAL_OP primary_expression
    (24) binary_expression -> . primary_expression DIFFERENT_OP primary_expression
    (25) unitary_expression -> . MINUS_OP primary_expression
    (26) unitary_expression -> . LOGICAL_OP_NOT primary_expression
    (27) primary_expression -> . LPAREN expression RPAREN
    (28) primary_expression -> . term
    (29) term -> . NUMBER_INTEGER
    (30) term -> . NUMBER_FLOAT
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL
    (35) term -> . TEXT_STRING
    (36) term -> . TEXT_CHAR

    VARIABLE        shift and go to state 15
    TYPE_BOOLEAN    shift and go to state 16
    TYPE_STRING     shift and go to state 17
    TYPE_CHAR       shift and go to state 18
    TYPE_INTEGER    shift and go to state 19
    TYPE_FLOAT      shift and go to state 20
    CONDITIONAL1    shift and go to state 21
    LOOP1           shift and go to state 23
    LOOP2           shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    COMMENT         shift and go to state 27
    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    expression                     shift and go to state 4
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    return_statement               shift and go to state 9
    break_statement                shift and go to state 10
    comment                        shift and go to state 11
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . return_statement END_LINE
    (10) statement -> . break_statement END_LINE
    (11) statement -> . comment
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (37) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (38) declaration -> . TYPE_BOOLEAN VARIABLE
    (39) declaration -> . TYPE_STRING VARIABLE
    (40) declaration -> . TYPE_CHAR VARIABLE
    (41) declaration -> . TYPE_INTEGER VARIABLE
    (42) declaration -> . TYPE_FLOAT VARIABLE
    (43) declaration -> . TYPE_BOOLEAN assignment
    (44) declaration -> . TYPE_STRING assignment
    (45) declaration -> . TYPE_CHAR assignment
    (46) declaration -> . TYPE_INTEGER assignment
    (47) declaration -> . TYPE_FLOAT assignment
    (48) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (49) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (50) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (51) loop -> . LOOP2 LPAREN assignment SEPARATION expression SEPARATION assignment RPAREN STRUCTURE_BODY statement_list
    (52) return_statement -> . RETURN expression
    (53) return_statement -> . RETURN
    (54) break_statement -> . BREAK
    (55) comment -> . COMMENT
    (15) binary_expression -> . primary_expression PLUS_OP primary_expression
    (16) binary_expression -> . primary_expression MINUS_OP primary_expression
    (17) binary_expression -> . primary_expression MUL_OP primary_expression
    (18) binary_expression -> . primary_expression DIV_OP primary_expression
    (19) binary_expression -> . primary_expression LESS_OP primary_expression
    (20) binary_expression -> . primary_expression GREATER_OP primary_expression
    (21) binary_expression -> . primary_expression LESS_EQUAL_OP primary_expression
    (22) binary_expression -> . primary_expression GREATER_EQUAL_OP primary_expression
    (23) binary_expression -> . primary_expression EQUAL_OP primary_expression
    (24) binary_expression -> . primary_expression DIFFERENT_OP primary_expression
    (25) unitary_expression -> . MINUS_OP primary_expression
    (26) unitary_expression -> . LOGICAL_OP_NOT primary_expression
    (27) primary_expression -> . LPAREN expression RPAREN
    (28) primary_expression -> . term
    (29) term -> . NUMBER_INTEGER
    (30) term -> . NUMBER_FLOAT
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL
    (35) term -> . TEXT_STRING
    (36) term -> . TEXT_CHAR

    $end            reduce using rule 1 (program -> statement_list .)
    VARIABLE        shift and go to state 15
    TYPE_BOOLEAN    shift and go to state 16
    TYPE_STRING     shift and go to state 17
    TYPE_CHAR       shift and go to state 18
    TYPE_INTEGER    shift and go to state 19
    TYPE_FLOAT      shift and go to state 20
    CONDITIONAL1    shift and go to state 21
    LOOP1           shift and go to state 23
    LOOP2           shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    COMMENT         shift and go to state 27
    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    statement                      shift and go to state 38
    expression                     shift and go to state 4
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    return_statement               shift and go to state 9
    break_statement                shift and go to state 10
    comment                        shift and go to state 11
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 3

    (3) statement_list -> statement .

    VARIABLE        reduce using rule 3 (statement_list -> statement .)
    TYPE_BOOLEAN    reduce using rule 3 (statement_list -> statement .)
    TYPE_STRING     reduce using rule 3 (statement_list -> statement .)
    TYPE_CHAR       reduce using rule 3 (statement_list -> statement .)
    TYPE_INTEGER    reduce using rule 3 (statement_list -> statement .)
    TYPE_FLOAT      reduce using rule 3 (statement_list -> statement .)
    CONDITIONAL1    reduce using rule 3 (statement_list -> statement .)
    LOOP1           reduce using rule 3 (statement_list -> statement .)
    LOOP2           reduce using rule 3 (statement_list -> statement .)
    RETURN          reduce using rule 3 (statement_list -> statement .)
    BREAK           reduce using rule 3 (statement_list -> statement .)
    COMMENT         reduce using rule 3 (statement_list -> statement .)
    MINUS_OP        reduce using rule 3 (statement_list -> statement .)
    LOGICAL_OP_NOT  reduce using rule 3 (statement_list -> statement .)
    LPAREN          reduce using rule 3 (statement_list -> statement .)
    NUMBER_INTEGER  reduce using rule 3 (statement_list -> statement .)
    NUMBER_FLOAT    reduce using rule 3 (statement_list -> statement .)
    TRUE            reduce using rule 3 (statement_list -> statement .)
    FALSE           reduce using rule 3 (statement_list -> statement .)
    NULL            reduce using rule 3 (statement_list -> statement .)
    TEXT_STRING     reduce using rule 3 (statement_list -> statement .)
    TEXT_CHAR       reduce using rule 3 (statement_list -> statement .)
    $end            reduce using rule 3 (statement_list -> statement .)
    CONDITIONAL2    reduce using rule 3 (statement_list -> statement .)
    END_LINE        reduce using rule 3 (statement_list -> statement .)


state 4

    (4) statement -> expression . END_LINE

    END_LINE        shift and go to state 39


state 5

    (5) statement -> assignment . END_LINE

    END_LINE        shift and go to state 40


state 6

    (6) statement -> declaration . END_LINE

    END_LINE        shift and go to state 41


state 7

    (7) statement -> conditional . END_LINE

    END_LINE        shift and go to state 42


state 8

    (8) statement -> loop . END_LINE

    END_LINE        shift and go to state 43


state 9

    (9) statement -> return_statement . END_LINE

    END_LINE        shift and go to state 44


state 10

    (10) statement -> break_statement . END_LINE

    END_LINE        shift and go to state 45


state 11

    (11) statement -> comment .

    VARIABLE        reduce using rule 11 (statement -> comment .)
    TYPE_BOOLEAN    reduce using rule 11 (statement -> comment .)
    TYPE_STRING     reduce using rule 11 (statement -> comment .)
    TYPE_CHAR       reduce using rule 11 (statement -> comment .)
    TYPE_INTEGER    reduce using rule 11 (statement -> comment .)
    TYPE_FLOAT      reduce using rule 11 (statement -> comment .)
    CONDITIONAL1    reduce using rule 11 (statement -> comment .)
    LOOP1           reduce using rule 11 (statement -> comment .)
    LOOP2           reduce using rule 11 (statement -> comment .)
    RETURN          reduce using rule 11 (statement -> comment .)
    BREAK           reduce using rule 11 (statement -> comment .)
    COMMENT         reduce using rule 11 (statement -> comment .)
    MINUS_OP        reduce using rule 11 (statement -> comment .)
    LOGICAL_OP_NOT  reduce using rule 11 (statement -> comment .)
    LPAREN          reduce using rule 11 (statement -> comment .)
    NUMBER_INTEGER  reduce using rule 11 (statement -> comment .)
    NUMBER_FLOAT    reduce using rule 11 (statement -> comment .)
    TRUE            reduce using rule 11 (statement -> comment .)
    FALSE           reduce using rule 11 (statement -> comment .)
    NULL            reduce using rule 11 (statement -> comment .)
    TEXT_STRING     reduce using rule 11 (statement -> comment .)
    TEXT_CHAR       reduce using rule 11 (statement -> comment .)
    $end            reduce using rule 11 (statement -> comment .)
    CONDITIONAL2    reduce using rule 11 (statement -> comment .)
    END_LINE        reduce using rule 11 (statement -> comment .)


state 12

    (12) expression -> binary_expression .

    END_LINE        reduce using rule 12 (expression -> binary_expression .)
    RPAREN          reduce using rule 12 (expression -> binary_expression .)
    SEPARATION      reduce using rule 12 (expression -> binary_expression .)


state 13

    (13) expression -> unitary_expression .

    END_LINE        reduce using rule 13 (expression -> unitary_expression .)
    RPAREN          reduce using rule 13 (expression -> unitary_expression .)
    SEPARATION      reduce using rule 13 (expression -> unitary_expression .)


state 14

    (14) expression -> primary_expression .
    (15) binary_expression -> primary_expression . PLUS_OP primary_expression
    (16) binary_expression -> primary_expression . MINUS_OP primary_expression
    (17) binary_expression -> primary_expression . MUL_OP primary_expression
    (18) binary_expression -> primary_expression . DIV_OP primary_expression
    (19) binary_expression -> primary_expression . LESS_OP primary_expression
    (20) binary_expression -> primary_expression . GREATER_OP primary_expression
    (21) binary_expression -> primary_expression . LESS_EQUAL_OP primary_expression
    (22) binary_expression -> primary_expression . GREATER_EQUAL_OP primary_expression
    (23) binary_expression -> primary_expression . EQUAL_OP primary_expression
    (24) binary_expression -> primary_expression . DIFFERENT_OP primary_expression

    END_LINE        reduce using rule 14 (expression -> primary_expression .)
    RPAREN          reduce using rule 14 (expression -> primary_expression .)
    SEPARATION      reduce using rule 14 (expression -> primary_expression .)
    PLUS_OP         shift and go to state 46
    MINUS_OP        shift and go to state 47
    MUL_OP          shift and go to state 48
    DIV_OP          shift and go to state 49
    LESS_OP         shift and go to state 50
    GREATER_OP      shift and go to state 51
    LESS_EQUAL_OP   shift and go to state 52
    GREATER_EQUAL_OP shift and go to state 53
    EQUAL_OP        shift and go to state 54
    DIFFERENT_OP    shift and go to state 55


state 15

    (37) assignment -> VARIABLE . ASSIGNMENT_OP expression
    (31) term -> VARIABLE .

    ASSIGNMENT_OP   shift and go to state 56
    PLUS_OP         reduce using rule 31 (term -> VARIABLE .)
    MINUS_OP        reduce using rule 31 (term -> VARIABLE .)
    MUL_OP          reduce using rule 31 (term -> VARIABLE .)
    DIV_OP          reduce using rule 31 (term -> VARIABLE .)
    LESS_OP         reduce using rule 31 (term -> VARIABLE .)
    GREATER_OP      reduce using rule 31 (term -> VARIABLE .)
    LESS_EQUAL_OP   reduce using rule 31 (term -> VARIABLE .)
    GREATER_EQUAL_OP reduce using rule 31 (term -> VARIABLE .)
    EQUAL_OP        reduce using rule 31 (term -> VARIABLE .)
    DIFFERENT_OP    reduce using rule 31 (term -> VARIABLE .)
    END_LINE        reduce using rule 31 (term -> VARIABLE .)


state 16

    (38) declaration -> TYPE_BOOLEAN . VARIABLE
    (43) declaration -> TYPE_BOOLEAN . assignment
    (37) assignment -> . VARIABLE ASSIGNMENT_OP expression

    VARIABLE        shift and go to state 57

    assignment                     shift and go to state 58

state 17

    (39) declaration -> TYPE_STRING . VARIABLE
    (44) declaration -> TYPE_STRING . assignment
    (37) assignment -> . VARIABLE ASSIGNMENT_OP expression

    VARIABLE        shift and go to state 59

    assignment                     shift and go to state 60

state 18

    (40) declaration -> TYPE_CHAR . VARIABLE
    (45) declaration -> TYPE_CHAR . assignment
    (37) assignment -> . VARIABLE ASSIGNMENT_OP expression

    VARIABLE        shift and go to state 61

    assignment                     shift and go to state 62

state 19

    (41) declaration -> TYPE_INTEGER . VARIABLE
    (46) declaration -> TYPE_INTEGER . assignment
    (37) assignment -> . VARIABLE ASSIGNMENT_OP expression

    VARIABLE        shift and go to state 63

    assignment                     shift and go to state 64

state 20

    (42) declaration -> TYPE_FLOAT . VARIABLE
    (47) declaration -> TYPE_FLOAT . assignment
    (37) assignment -> . VARIABLE ASSIGNMENT_OP expression

    VARIABLE        shift and go to state 65

    assignment                     shift and go to state 66

state 21

    (48) conditional -> CONDITIONAL1 . LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (49) conditional -> CONDITIONAL1 . LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list

    LPAREN          shift and go to state 67


state 22

    (27) primary_expression -> LPAREN . expression RPAREN
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (15) binary_expression -> . primary_expression PLUS_OP primary_expression
    (16) binary_expression -> . primary_expression MINUS_OP primary_expression
    (17) binary_expression -> . primary_expression MUL_OP primary_expression
    (18) binary_expression -> . primary_expression DIV_OP primary_expression
    (19) binary_expression -> . primary_expression LESS_OP primary_expression
    (20) binary_expression -> . primary_expression GREATER_OP primary_expression
    (21) binary_expression -> . primary_expression LESS_EQUAL_OP primary_expression
    (22) binary_expression -> . primary_expression GREATER_EQUAL_OP primary_expression
    (23) binary_expression -> . primary_expression EQUAL_OP primary_expression
    (24) binary_expression -> . primary_expression DIFFERENT_OP primary_expression
    (25) unitary_expression -> . MINUS_OP primary_expression
    (26) unitary_expression -> . LOGICAL_OP_NOT primary_expression
    (27) primary_expression -> . LPAREN expression RPAREN
    (28) primary_expression -> . term
    (29) term -> . NUMBER_INTEGER
    (30) term -> . NUMBER_FLOAT
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL
    (35) term -> . TEXT_STRING
    (36) term -> . TEXT_CHAR

    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    VARIABLE        shift and go to state 69
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    expression                     shift and go to state 68
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 23

    (50) loop -> LOOP1 . LPAREN expression RPAREN STRUCTURE_BODY statement_list

    LPAREN          shift and go to state 70


state 24

    (51) loop -> LOOP2 . LPAREN assignment SEPARATION expression SEPARATION assignment RPAREN STRUCTURE_BODY statement_list

    LPAREN          shift and go to state 71


state 25

    (52) return_statement -> RETURN . expression
    (53) return_statement -> RETURN .
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (15) binary_expression -> . primary_expression PLUS_OP primary_expression
    (16) binary_expression -> . primary_expression MINUS_OP primary_expression
    (17) binary_expression -> . primary_expression MUL_OP primary_expression
    (18) binary_expression -> . primary_expression DIV_OP primary_expression
    (19) binary_expression -> . primary_expression LESS_OP primary_expression
    (20) binary_expression -> . primary_expression GREATER_OP primary_expression
    (21) binary_expression -> . primary_expression LESS_EQUAL_OP primary_expression
    (22) binary_expression -> . primary_expression GREATER_EQUAL_OP primary_expression
    (23) binary_expression -> . primary_expression EQUAL_OP primary_expression
    (24) binary_expression -> . primary_expression DIFFERENT_OP primary_expression
    (25) unitary_expression -> . MINUS_OP primary_expression
    (26) unitary_expression -> . LOGICAL_OP_NOT primary_expression
    (27) primary_expression -> . LPAREN expression RPAREN
    (28) primary_expression -> . term
    (29) term -> . NUMBER_INTEGER
    (30) term -> . NUMBER_FLOAT
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL
    (35) term -> . TEXT_STRING
    (36) term -> . TEXT_CHAR

    END_LINE        reduce using rule 53 (return_statement -> RETURN .)
    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    VARIABLE        shift and go to state 69
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    expression                     shift and go to state 72
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 26

    (54) break_statement -> BREAK .

    END_LINE        reduce using rule 54 (break_statement -> BREAK .)


state 27

    (55) comment -> COMMENT .

    VARIABLE        reduce using rule 55 (comment -> COMMENT .)
    TYPE_BOOLEAN    reduce using rule 55 (comment -> COMMENT .)
    TYPE_STRING     reduce using rule 55 (comment -> COMMENT .)
    TYPE_CHAR       reduce using rule 55 (comment -> COMMENT .)
    TYPE_INTEGER    reduce using rule 55 (comment -> COMMENT .)
    TYPE_FLOAT      reduce using rule 55 (comment -> COMMENT .)
    CONDITIONAL1    reduce using rule 55 (comment -> COMMENT .)
    LOOP1           reduce using rule 55 (comment -> COMMENT .)
    LOOP2           reduce using rule 55 (comment -> COMMENT .)
    RETURN          reduce using rule 55 (comment -> COMMENT .)
    BREAK           reduce using rule 55 (comment -> COMMENT .)
    COMMENT         reduce using rule 55 (comment -> COMMENT .)
    MINUS_OP        reduce using rule 55 (comment -> COMMENT .)
    LOGICAL_OP_NOT  reduce using rule 55 (comment -> COMMENT .)
    LPAREN          reduce using rule 55 (comment -> COMMENT .)
    NUMBER_INTEGER  reduce using rule 55 (comment -> COMMENT .)
    NUMBER_FLOAT    reduce using rule 55 (comment -> COMMENT .)
    TRUE            reduce using rule 55 (comment -> COMMENT .)
    FALSE           reduce using rule 55 (comment -> COMMENT .)
    NULL            reduce using rule 55 (comment -> COMMENT .)
    TEXT_STRING     reduce using rule 55 (comment -> COMMENT .)
    TEXT_CHAR       reduce using rule 55 (comment -> COMMENT .)
    $end            reduce using rule 55 (comment -> COMMENT .)
    CONDITIONAL2    reduce using rule 55 (comment -> COMMENT .)
    END_LINE        reduce using rule 55 (comment -> COMMENT .)


state 28

    (25) unitary_expression -> MINUS_OP . primary_expression
    (27) primary_expression -> . LPAREN expression RPAREN
    (28) primary_expression -> . term
    (29) term -> . NUMBER_INTEGER
    (30) term -> . NUMBER_FLOAT
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL
    (35) term -> . TEXT_STRING
    (36) term -> . TEXT_CHAR

    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    VARIABLE        shift and go to state 69
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    primary_expression             shift and go to state 73
    term                           shift and go to state 30

state 29

    (26) unitary_expression -> LOGICAL_OP_NOT . primary_expression
    (27) primary_expression -> . LPAREN expression RPAREN
    (28) primary_expression -> . term
    (29) term -> . NUMBER_INTEGER
    (30) term -> . NUMBER_FLOAT
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL
    (35) term -> . TEXT_STRING
    (36) term -> . TEXT_CHAR

    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    VARIABLE        shift and go to state 69
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    primary_expression             shift and go to state 74
    term                           shift and go to state 30

state 30

    (28) primary_expression -> term .

    PLUS_OP         reduce using rule 28 (primary_expression -> term .)
    MINUS_OP        reduce using rule 28 (primary_expression -> term .)
    MUL_OP          reduce using rule 28 (primary_expression -> term .)
    DIV_OP          reduce using rule 28 (primary_expression -> term .)
    LESS_OP         reduce using rule 28 (primary_expression -> term .)
    GREATER_OP      reduce using rule 28 (primary_expression -> term .)
    LESS_EQUAL_OP   reduce using rule 28 (primary_expression -> term .)
    GREATER_EQUAL_OP reduce using rule 28 (primary_expression -> term .)
    EQUAL_OP        reduce using rule 28 (primary_expression -> term .)
    DIFFERENT_OP    reduce using rule 28 (primary_expression -> term .)
    END_LINE        reduce using rule 28 (primary_expression -> term .)
    RPAREN          reduce using rule 28 (primary_expression -> term .)
    SEPARATION      reduce using rule 28 (primary_expression -> term .)


state 31

    (29) term -> NUMBER_INTEGER .

    PLUS_OP         reduce using rule 29 (term -> NUMBER_INTEGER .)
    MINUS_OP        reduce using rule 29 (term -> NUMBER_INTEGER .)
    MUL_OP          reduce using rule 29 (term -> NUMBER_INTEGER .)
    DIV_OP          reduce using rule 29 (term -> NUMBER_INTEGER .)
    LESS_OP         reduce using rule 29 (term -> NUMBER_INTEGER .)
    GREATER_OP      reduce using rule 29 (term -> NUMBER_INTEGER .)
    LESS_EQUAL_OP   reduce using rule 29 (term -> NUMBER_INTEGER .)
    GREATER_EQUAL_OP reduce using rule 29 (term -> NUMBER_INTEGER .)
    EQUAL_OP        reduce using rule 29 (term -> NUMBER_INTEGER .)
    DIFFERENT_OP    reduce using rule 29 (term -> NUMBER_INTEGER .)
    END_LINE        reduce using rule 29 (term -> NUMBER_INTEGER .)
    RPAREN          reduce using rule 29 (term -> NUMBER_INTEGER .)
    SEPARATION      reduce using rule 29 (term -> NUMBER_INTEGER .)


state 32

    (30) term -> NUMBER_FLOAT .

    PLUS_OP         reduce using rule 30 (term -> NUMBER_FLOAT .)
    MINUS_OP        reduce using rule 30 (term -> NUMBER_FLOAT .)
    MUL_OP          reduce using rule 30 (term -> NUMBER_FLOAT .)
    DIV_OP          reduce using rule 30 (term -> NUMBER_FLOAT .)
    LESS_OP         reduce using rule 30 (term -> NUMBER_FLOAT .)
    GREATER_OP      reduce using rule 30 (term -> NUMBER_FLOAT .)
    LESS_EQUAL_OP   reduce using rule 30 (term -> NUMBER_FLOAT .)
    GREATER_EQUAL_OP reduce using rule 30 (term -> NUMBER_FLOAT .)
    EQUAL_OP        reduce using rule 30 (term -> NUMBER_FLOAT .)
    DIFFERENT_OP    reduce using rule 30 (term -> NUMBER_FLOAT .)
    END_LINE        reduce using rule 30 (term -> NUMBER_FLOAT .)
    RPAREN          reduce using rule 30 (term -> NUMBER_FLOAT .)
    SEPARATION      reduce using rule 30 (term -> NUMBER_FLOAT .)


state 33

    (32) term -> TRUE .

    PLUS_OP         reduce using rule 32 (term -> TRUE .)
    MINUS_OP        reduce using rule 32 (term -> TRUE .)
    MUL_OP          reduce using rule 32 (term -> TRUE .)
    DIV_OP          reduce using rule 32 (term -> TRUE .)
    LESS_OP         reduce using rule 32 (term -> TRUE .)
    GREATER_OP      reduce using rule 32 (term -> TRUE .)
    LESS_EQUAL_OP   reduce using rule 32 (term -> TRUE .)
    GREATER_EQUAL_OP reduce using rule 32 (term -> TRUE .)
    EQUAL_OP        reduce using rule 32 (term -> TRUE .)
    DIFFERENT_OP    reduce using rule 32 (term -> TRUE .)
    END_LINE        reduce using rule 32 (term -> TRUE .)
    RPAREN          reduce using rule 32 (term -> TRUE .)
    SEPARATION      reduce using rule 32 (term -> TRUE .)


state 34

    (33) term -> FALSE .

    PLUS_OP         reduce using rule 33 (term -> FALSE .)
    MINUS_OP        reduce using rule 33 (term -> FALSE .)
    MUL_OP          reduce using rule 33 (term -> FALSE .)
    DIV_OP          reduce using rule 33 (term -> FALSE .)
    LESS_OP         reduce using rule 33 (term -> FALSE .)
    GREATER_OP      reduce using rule 33 (term -> FALSE .)
    LESS_EQUAL_OP   reduce using rule 33 (term -> FALSE .)
    GREATER_EQUAL_OP reduce using rule 33 (term -> FALSE .)
    EQUAL_OP        reduce using rule 33 (term -> FALSE .)
    DIFFERENT_OP    reduce using rule 33 (term -> FALSE .)
    END_LINE        reduce using rule 33 (term -> FALSE .)
    RPAREN          reduce using rule 33 (term -> FALSE .)
    SEPARATION      reduce using rule 33 (term -> FALSE .)


state 35

    (34) term -> NULL .

    PLUS_OP         reduce using rule 34 (term -> NULL .)
    MINUS_OP        reduce using rule 34 (term -> NULL .)
    MUL_OP          reduce using rule 34 (term -> NULL .)
    DIV_OP          reduce using rule 34 (term -> NULL .)
    LESS_OP         reduce using rule 34 (term -> NULL .)
    GREATER_OP      reduce using rule 34 (term -> NULL .)
    LESS_EQUAL_OP   reduce using rule 34 (term -> NULL .)
    GREATER_EQUAL_OP reduce using rule 34 (term -> NULL .)
    EQUAL_OP        reduce using rule 34 (term -> NULL .)
    DIFFERENT_OP    reduce using rule 34 (term -> NULL .)
    END_LINE        reduce using rule 34 (term -> NULL .)
    RPAREN          reduce using rule 34 (term -> NULL .)
    SEPARATION      reduce using rule 34 (term -> NULL .)


state 36

    (35) term -> TEXT_STRING .

    PLUS_OP         reduce using rule 35 (term -> TEXT_STRING .)
    MINUS_OP        reduce using rule 35 (term -> TEXT_STRING .)
    MUL_OP          reduce using rule 35 (term -> TEXT_STRING .)
    DIV_OP          reduce using rule 35 (term -> TEXT_STRING .)
    LESS_OP         reduce using rule 35 (term -> TEXT_STRING .)
    GREATER_OP      reduce using rule 35 (term -> TEXT_STRING .)
    LESS_EQUAL_OP   reduce using rule 35 (term -> TEXT_STRING .)
    GREATER_EQUAL_OP reduce using rule 35 (term -> TEXT_STRING .)
    EQUAL_OP        reduce using rule 35 (term -> TEXT_STRING .)
    DIFFERENT_OP    reduce using rule 35 (term -> TEXT_STRING .)
    END_LINE        reduce using rule 35 (term -> TEXT_STRING .)
    RPAREN          reduce using rule 35 (term -> TEXT_STRING .)
    SEPARATION      reduce using rule 35 (term -> TEXT_STRING .)


state 37

    (36) term -> TEXT_CHAR .

    PLUS_OP         reduce using rule 36 (term -> TEXT_CHAR .)
    MINUS_OP        reduce using rule 36 (term -> TEXT_CHAR .)
    MUL_OP          reduce using rule 36 (term -> TEXT_CHAR .)
    DIV_OP          reduce using rule 36 (term -> TEXT_CHAR .)
    LESS_OP         reduce using rule 36 (term -> TEXT_CHAR .)
    GREATER_OP      reduce using rule 36 (term -> TEXT_CHAR .)
    LESS_EQUAL_OP   reduce using rule 36 (term -> TEXT_CHAR .)
    GREATER_EQUAL_OP reduce using rule 36 (term -> TEXT_CHAR .)
    EQUAL_OP        reduce using rule 36 (term -> TEXT_CHAR .)
    DIFFERENT_OP    reduce using rule 36 (term -> TEXT_CHAR .)
    END_LINE        reduce using rule 36 (term -> TEXT_CHAR .)
    RPAREN          reduce using rule 36 (term -> TEXT_CHAR .)
    SEPARATION      reduce using rule 36 (term -> TEXT_CHAR .)


state 38

    (2) statement_list -> statement_list statement .

    VARIABLE        reduce using rule 2 (statement_list -> statement_list statement .)
    TYPE_BOOLEAN    reduce using rule 2 (statement_list -> statement_list statement .)
    TYPE_STRING     reduce using rule 2 (statement_list -> statement_list statement .)
    TYPE_CHAR       reduce using rule 2 (statement_list -> statement_list statement .)
    TYPE_INTEGER    reduce using rule 2 (statement_list -> statement_list statement .)
    TYPE_FLOAT      reduce using rule 2 (statement_list -> statement_list statement .)
    CONDITIONAL1    reduce using rule 2 (statement_list -> statement_list statement .)
    LOOP1           reduce using rule 2 (statement_list -> statement_list statement .)
    LOOP2           reduce using rule 2 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 2 (statement_list -> statement_list statement .)
    BREAK           reduce using rule 2 (statement_list -> statement_list statement .)
    COMMENT         reduce using rule 2 (statement_list -> statement_list statement .)
    MINUS_OP        reduce using rule 2 (statement_list -> statement_list statement .)
    LOGICAL_OP_NOT  reduce using rule 2 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 2 (statement_list -> statement_list statement .)
    NUMBER_INTEGER  reduce using rule 2 (statement_list -> statement_list statement .)
    NUMBER_FLOAT    reduce using rule 2 (statement_list -> statement_list statement .)
    TRUE            reduce using rule 2 (statement_list -> statement_list statement .)
    FALSE           reduce using rule 2 (statement_list -> statement_list statement .)
    NULL            reduce using rule 2 (statement_list -> statement_list statement .)
    TEXT_STRING     reduce using rule 2 (statement_list -> statement_list statement .)
    TEXT_CHAR       reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)
    CONDITIONAL2    reduce using rule 2 (statement_list -> statement_list statement .)
    END_LINE        reduce using rule 2 (statement_list -> statement_list statement .)


state 39

    (4) statement -> expression END_LINE .

    VARIABLE        reduce using rule 4 (statement -> expression END_LINE .)
    TYPE_BOOLEAN    reduce using rule 4 (statement -> expression END_LINE .)
    TYPE_STRING     reduce using rule 4 (statement -> expression END_LINE .)
    TYPE_CHAR       reduce using rule 4 (statement -> expression END_LINE .)
    TYPE_INTEGER    reduce using rule 4 (statement -> expression END_LINE .)
    TYPE_FLOAT      reduce using rule 4 (statement -> expression END_LINE .)
    CONDITIONAL1    reduce using rule 4 (statement -> expression END_LINE .)
    LOOP1           reduce using rule 4 (statement -> expression END_LINE .)
    LOOP2           reduce using rule 4 (statement -> expression END_LINE .)
    RETURN          reduce using rule 4 (statement -> expression END_LINE .)
    BREAK           reduce using rule 4 (statement -> expression END_LINE .)
    COMMENT         reduce using rule 4 (statement -> expression END_LINE .)
    MINUS_OP        reduce using rule 4 (statement -> expression END_LINE .)
    LOGICAL_OP_NOT  reduce using rule 4 (statement -> expression END_LINE .)
    LPAREN          reduce using rule 4 (statement -> expression END_LINE .)
    NUMBER_INTEGER  reduce using rule 4 (statement -> expression END_LINE .)
    NUMBER_FLOAT    reduce using rule 4 (statement -> expression END_LINE .)
    TRUE            reduce using rule 4 (statement -> expression END_LINE .)
    FALSE           reduce using rule 4 (statement -> expression END_LINE .)
    NULL            reduce using rule 4 (statement -> expression END_LINE .)
    TEXT_STRING     reduce using rule 4 (statement -> expression END_LINE .)
    TEXT_CHAR       reduce using rule 4 (statement -> expression END_LINE .)
    $end            reduce using rule 4 (statement -> expression END_LINE .)
    CONDITIONAL2    reduce using rule 4 (statement -> expression END_LINE .)
    END_LINE        reduce using rule 4 (statement -> expression END_LINE .)


state 40

    (5) statement -> assignment END_LINE .

    VARIABLE        reduce using rule 5 (statement -> assignment END_LINE .)
    TYPE_BOOLEAN    reduce using rule 5 (statement -> assignment END_LINE .)
    TYPE_STRING     reduce using rule 5 (statement -> assignment END_LINE .)
    TYPE_CHAR       reduce using rule 5 (statement -> assignment END_LINE .)
    TYPE_INTEGER    reduce using rule 5 (statement -> assignment END_LINE .)
    TYPE_FLOAT      reduce using rule 5 (statement -> assignment END_LINE .)
    CONDITIONAL1    reduce using rule 5 (statement -> assignment END_LINE .)
    LOOP1           reduce using rule 5 (statement -> assignment END_LINE .)
    LOOP2           reduce using rule 5 (statement -> assignment END_LINE .)
    RETURN          reduce using rule 5 (statement -> assignment END_LINE .)
    BREAK           reduce using rule 5 (statement -> assignment END_LINE .)
    COMMENT         reduce using rule 5 (statement -> assignment END_LINE .)
    MINUS_OP        reduce using rule 5 (statement -> assignment END_LINE .)
    LOGICAL_OP_NOT  reduce using rule 5 (statement -> assignment END_LINE .)
    LPAREN          reduce using rule 5 (statement -> assignment END_LINE .)
    NUMBER_INTEGER  reduce using rule 5 (statement -> assignment END_LINE .)
    NUMBER_FLOAT    reduce using rule 5 (statement -> assignment END_LINE .)
    TRUE            reduce using rule 5 (statement -> assignment END_LINE .)
    FALSE           reduce using rule 5 (statement -> assignment END_LINE .)
    NULL            reduce using rule 5 (statement -> assignment END_LINE .)
    TEXT_STRING     reduce using rule 5 (statement -> assignment END_LINE .)
    TEXT_CHAR       reduce using rule 5 (statement -> assignment END_LINE .)
    $end            reduce using rule 5 (statement -> assignment END_LINE .)
    CONDITIONAL2    reduce using rule 5 (statement -> assignment END_LINE .)
    END_LINE        reduce using rule 5 (statement -> assignment END_LINE .)


state 41

    (6) statement -> declaration END_LINE .

    VARIABLE        reduce using rule 6 (statement -> declaration END_LINE .)
    TYPE_BOOLEAN    reduce using rule 6 (statement -> declaration END_LINE .)
    TYPE_STRING     reduce using rule 6 (statement -> declaration END_LINE .)
    TYPE_CHAR       reduce using rule 6 (statement -> declaration END_LINE .)
    TYPE_INTEGER    reduce using rule 6 (statement -> declaration END_LINE .)
    TYPE_FLOAT      reduce using rule 6 (statement -> declaration END_LINE .)
    CONDITIONAL1    reduce using rule 6 (statement -> declaration END_LINE .)
    LOOP1           reduce using rule 6 (statement -> declaration END_LINE .)
    LOOP2           reduce using rule 6 (statement -> declaration END_LINE .)
    RETURN          reduce using rule 6 (statement -> declaration END_LINE .)
    BREAK           reduce using rule 6 (statement -> declaration END_LINE .)
    COMMENT         reduce using rule 6 (statement -> declaration END_LINE .)
    MINUS_OP        reduce using rule 6 (statement -> declaration END_LINE .)
    LOGICAL_OP_NOT  reduce using rule 6 (statement -> declaration END_LINE .)
    LPAREN          reduce using rule 6 (statement -> declaration END_LINE .)
    NUMBER_INTEGER  reduce using rule 6 (statement -> declaration END_LINE .)
    NUMBER_FLOAT    reduce using rule 6 (statement -> declaration END_LINE .)
    TRUE            reduce using rule 6 (statement -> declaration END_LINE .)
    FALSE           reduce using rule 6 (statement -> declaration END_LINE .)
    NULL            reduce using rule 6 (statement -> declaration END_LINE .)
    TEXT_STRING     reduce using rule 6 (statement -> declaration END_LINE .)
    TEXT_CHAR       reduce using rule 6 (statement -> declaration END_LINE .)
    $end            reduce using rule 6 (statement -> declaration END_LINE .)
    CONDITIONAL2    reduce using rule 6 (statement -> declaration END_LINE .)
    END_LINE        reduce using rule 6 (statement -> declaration END_LINE .)


state 42

    (7) statement -> conditional END_LINE .

    VARIABLE        reduce using rule 7 (statement -> conditional END_LINE .)
    TYPE_BOOLEAN    reduce using rule 7 (statement -> conditional END_LINE .)
    TYPE_STRING     reduce using rule 7 (statement -> conditional END_LINE .)
    TYPE_CHAR       reduce using rule 7 (statement -> conditional END_LINE .)
    TYPE_INTEGER    reduce using rule 7 (statement -> conditional END_LINE .)
    TYPE_FLOAT      reduce using rule 7 (statement -> conditional END_LINE .)
    CONDITIONAL1    reduce using rule 7 (statement -> conditional END_LINE .)
    LOOP1           reduce using rule 7 (statement -> conditional END_LINE .)
    LOOP2           reduce using rule 7 (statement -> conditional END_LINE .)
    RETURN          reduce using rule 7 (statement -> conditional END_LINE .)
    BREAK           reduce using rule 7 (statement -> conditional END_LINE .)
    COMMENT         reduce using rule 7 (statement -> conditional END_LINE .)
    MINUS_OP        reduce using rule 7 (statement -> conditional END_LINE .)
    LOGICAL_OP_NOT  reduce using rule 7 (statement -> conditional END_LINE .)
    LPAREN          reduce using rule 7 (statement -> conditional END_LINE .)
    NUMBER_INTEGER  reduce using rule 7 (statement -> conditional END_LINE .)
    NUMBER_FLOAT    reduce using rule 7 (statement -> conditional END_LINE .)
    TRUE            reduce using rule 7 (statement -> conditional END_LINE .)
    FALSE           reduce using rule 7 (statement -> conditional END_LINE .)
    NULL            reduce using rule 7 (statement -> conditional END_LINE .)
    TEXT_STRING     reduce using rule 7 (statement -> conditional END_LINE .)
    TEXT_CHAR       reduce using rule 7 (statement -> conditional END_LINE .)
    $end            reduce using rule 7 (statement -> conditional END_LINE .)
    CONDITIONAL2    reduce using rule 7 (statement -> conditional END_LINE .)
    END_LINE        reduce using rule 7 (statement -> conditional END_LINE .)


state 43

    (8) statement -> loop END_LINE .

    VARIABLE        reduce using rule 8 (statement -> loop END_LINE .)
    TYPE_BOOLEAN    reduce using rule 8 (statement -> loop END_LINE .)
    TYPE_STRING     reduce using rule 8 (statement -> loop END_LINE .)
    TYPE_CHAR       reduce using rule 8 (statement -> loop END_LINE .)
    TYPE_INTEGER    reduce using rule 8 (statement -> loop END_LINE .)
    TYPE_FLOAT      reduce using rule 8 (statement -> loop END_LINE .)
    CONDITIONAL1    reduce using rule 8 (statement -> loop END_LINE .)
    LOOP1           reduce using rule 8 (statement -> loop END_LINE .)
    LOOP2           reduce using rule 8 (statement -> loop END_LINE .)
    RETURN          reduce using rule 8 (statement -> loop END_LINE .)
    BREAK           reduce using rule 8 (statement -> loop END_LINE .)
    COMMENT         reduce using rule 8 (statement -> loop END_LINE .)
    MINUS_OP        reduce using rule 8 (statement -> loop END_LINE .)
    LOGICAL_OP_NOT  reduce using rule 8 (statement -> loop END_LINE .)
    LPAREN          reduce using rule 8 (statement -> loop END_LINE .)
    NUMBER_INTEGER  reduce using rule 8 (statement -> loop END_LINE .)
    NUMBER_FLOAT    reduce using rule 8 (statement -> loop END_LINE .)
    TRUE            reduce using rule 8 (statement -> loop END_LINE .)
    FALSE           reduce using rule 8 (statement -> loop END_LINE .)
    NULL            reduce using rule 8 (statement -> loop END_LINE .)
    TEXT_STRING     reduce using rule 8 (statement -> loop END_LINE .)
    TEXT_CHAR       reduce using rule 8 (statement -> loop END_LINE .)
    $end            reduce using rule 8 (statement -> loop END_LINE .)
    CONDITIONAL2    reduce using rule 8 (statement -> loop END_LINE .)
    END_LINE        reduce using rule 8 (statement -> loop END_LINE .)


state 44

    (9) statement -> return_statement END_LINE .

    VARIABLE        reduce using rule 9 (statement -> return_statement END_LINE .)
    TYPE_BOOLEAN    reduce using rule 9 (statement -> return_statement END_LINE .)
    TYPE_STRING     reduce using rule 9 (statement -> return_statement END_LINE .)
    TYPE_CHAR       reduce using rule 9 (statement -> return_statement END_LINE .)
    TYPE_INTEGER    reduce using rule 9 (statement -> return_statement END_LINE .)
    TYPE_FLOAT      reduce using rule 9 (statement -> return_statement END_LINE .)
    CONDITIONAL1    reduce using rule 9 (statement -> return_statement END_LINE .)
    LOOP1           reduce using rule 9 (statement -> return_statement END_LINE .)
    LOOP2           reduce using rule 9 (statement -> return_statement END_LINE .)
    RETURN          reduce using rule 9 (statement -> return_statement END_LINE .)
    BREAK           reduce using rule 9 (statement -> return_statement END_LINE .)
    COMMENT         reduce using rule 9 (statement -> return_statement END_LINE .)
    MINUS_OP        reduce using rule 9 (statement -> return_statement END_LINE .)
    LOGICAL_OP_NOT  reduce using rule 9 (statement -> return_statement END_LINE .)
    LPAREN          reduce using rule 9 (statement -> return_statement END_LINE .)
    NUMBER_INTEGER  reduce using rule 9 (statement -> return_statement END_LINE .)
    NUMBER_FLOAT    reduce using rule 9 (statement -> return_statement END_LINE .)
    TRUE            reduce using rule 9 (statement -> return_statement END_LINE .)
    FALSE           reduce using rule 9 (statement -> return_statement END_LINE .)
    NULL            reduce using rule 9 (statement -> return_statement END_LINE .)
    TEXT_STRING     reduce using rule 9 (statement -> return_statement END_LINE .)
    TEXT_CHAR       reduce using rule 9 (statement -> return_statement END_LINE .)
    $end            reduce using rule 9 (statement -> return_statement END_LINE .)
    CONDITIONAL2    reduce using rule 9 (statement -> return_statement END_LINE .)
    END_LINE        reduce using rule 9 (statement -> return_statement END_LINE .)


state 45

    (10) statement -> break_statement END_LINE .

    VARIABLE        reduce using rule 10 (statement -> break_statement END_LINE .)
    TYPE_BOOLEAN    reduce using rule 10 (statement -> break_statement END_LINE .)
    TYPE_STRING     reduce using rule 10 (statement -> break_statement END_LINE .)
    TYPE_CHAR       reduce using rule 10 (statement -> break_statement END_LINE .)
    TYPE_INTEGER    reduce using rule 10 (statement -> break_statement END_LINE .)
    TYPE_FLOAT      reduce using rule 10 (statement -> break_statement END_LINE .)
    CONDITIONAL1    reduce using rule 10 (statement -> break_statement END_LINE .)
    LOOP1           reduce using rule 10 (statement -> break_statement END_LINE .)
    LOOP2           reduce using rule 10 (statement -> break_statement END_LINE .)
    RETURN          reduce using rule 10 (statement -> break_statement END_LINE .)
    BREAK           reduce using rule 10 (statement -> break_statement END_LINE .)
    COMMENT         reduce using rule 10 (statement -> break_statement END_LINE .)
    MINUS_OP        reduce using rule 10 (statement -> break_statement END_LINE .)
    LOGICAL_OP_NOT  reduce using rule 10 (statement -> break_statement END_LINE .)
    LPAREN          reduce using rule 10 (statement -> break_statement END_LINE .)
    NUMBER_INTEGER  reduce using rule 10 (statement -> break_statement END_LINE .)
    NUMBER_FLOAT    reduce using rule 10 (statement -> break_statement END_LINE .)
    TRUE            reduce using rule 10 (statement -> break_statement END_LINE .)
    FALSE           reduce using rule 10 (statement -> break_statement END_LINE .)
    NULL            reduce using rule 10 (statement -> break_statement END_LINE .)
    TEXT_STRING     reduce using rule 10 (statement -> break_statement END_LINE .)
    TEXT_CHAR       reduce using rule 10 (statement -> break_statement END_LINE .)
    $end            reduce using rule 10 (statement -> break_statement END_LINE .)
    CONDITIONAL2    reduce using rule 10 (statement -> break_statement END_LINE .)
    END_LINE        reduce using rule 10 (statement -> break_statement END_LINE .)


state 46

    (15) binary_expression -> primary_expression PLUS_OP . primary_expression
    (27) primary_expression -> . LPAREN expression RPAREN
    (28) primary_expression -> . term
    (29) term -> . NUMBER_INTEGER
    (30) term -> . NUMBER_FLOAT
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL
    (35) term -> . TEXT_STRING
    (36) term -> . TEXT_CHAR

    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    VARIABLE        shift and go to state 69
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    primary_expression             shift and go to state 75
    term                           shift and go to state 30

state 47

    (16) binary_expression -> primary_expression MINUS_OP . primary_expression
    (27) primary_expression -> . LPAREN expression RPAREN
    (28) primary_expression -> . term
    (29) term -> . NUMBER_INTEGER
    (30) term -> . NUMBER_FLOAT
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL
    (35) term -> . TEXT_STRING
    (36) term -> . TEXT_CHAR

    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    VARIABLE        shift and go to state 69
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    primary_expression             shift and go to state 76
    term                           shift and go to state 30

state 48

    (17) binary_expression -> primary_expression MUL_OP . primary_expression
    (27) primary_expression -> . LPAREN expression RPAREN
    (28) primary_expression -> . term
    (29) term -> . NUMBER_INTEGER
    (30) term -> . NUMBER_FLOAT
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL
    (35) term -> . TEXT_STRING
    (36) term -> . TEXT_CHAR

    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    VARIABLE        shift and go to state 69
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    primary_expression             shift and go to state 77
    term                           shift and go to state 30

state 49

    (18) binary_expression -> primary_expression DIV_OP . primary_expression
    (27) primary_expression -> . LPAREN expression RPAREN
    (28) primary_expression -> . term
    (29) term -> . NUMBER_INTEGER
    (30) term -> . NUMBER_FLOAT
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL
    (35) term -> . TEXT_STRING
    (36) term -> . TEXT_CHAR

    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    VARIABLE        shift and go to state 69
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    primary_expression             shift and go to state 78
    term                           shift and go to state 30

state 50

    (19) binary_expression -> primary_expression LESS_OP . primary_expression
    (27) primary_expression -> . LPAREN expression RPAREN
    (28) primary_expression -> . term
    (29) term -> . NUMBER_INTEGER
    (30) term -> . NUMBER_FLOAT
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL
    (35) term -> . TEXT_STRING
    (36) term -> . TEXT_CHAR

    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    VARIABLE        shift and go to state 69
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    primary_expression             shift and go to state 79
    term                           shift and go to state 30

state 51

    (20) binary_expression -> primary_expression GREATER_OP . primary_expression
    (27) primary_expression -> . LPAREN expression RPAREN
    (28) primary_expression -> . term
    (29) term -> . NUMBER_INTEGER
    (30) term -> . NUMBER_FLOAT
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL
    (35) term -> . TEXT_STRING
    (36) term -> . TEXT_CHAR

    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    VARIABLE        shift and go to state 69
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    primary_expression             shift and go to state 80
    term                           shift and go to state 30

state 52

    (21) binary_expression -> primary_expression LESS_EQUAL_OP . primary_expression
    (27) primary_expression -> . LPAREN expression RPAREN
    (28) primary_expression -> . term
    (29) term -> . NUMBER_INTEGER
    (30) term -> . NUMBER_FLOAT
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL
    (35) term -> . TEXT_STRING
    (36) term -> . TEXT_CHAR

    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    VARIABLE        shift and go to state 69
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    primary_expression             shift and go to state 81
    term                           shift and go to state 30

state 53

    (22) binary_expression -> primary_expression GREATER_EQUAL_OP . primary_expression
    (27) primary_expression -> . LPAREN expression RPAREN
    (28) primary_expression -> . term
    (29) term -> . NUMBER_INTEGER
    (30) term -> . NUMBER_FLOAT
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL
    (35) term -> . TEXT_STRING
    (36) term -> . TEXT_CHAR

    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    VARIABLE        shift and go to state 69
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    primary_expression             shift and go to state 82
    term                           shift and go to state 30

state 54

    (23) binary_expression -> primary_expression EQUAL_OP . primary_expression
    (27) primary_expression -> . LPAREN expression RPAREN
    (28) primary_expression -> . term
    (29) term -> . NUMBER_INTEGER
    (30) term -> . NUMBER_FLOAT
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL
    (35) term -> . TEXT_STRING
    (36) term -> . TEXT_CHAR

    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    VARIABLE        shift and go to state 69
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    primary_expression             shift and go to state 83
    term                           shift and go to state 30

state 55

    (24) binary_expression -> primary_expression DIFFERENT_OP . primary_expression
    (27) primary_expression -> . LPAREN expression RPAREN
    (28) primary_expression -> . term
    (29) term -> . NUMBER_INTEGER
    (30) term -> . NUMBER_FLOAT
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL
    (35) term -> . TEXT_STRING
    (36) term -> . TEXT_CHAR

    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    VARIABLE        shift and go to state 69
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    primary_expression             shift and go to state 84
    term                           shift and go to state 30

state 56

    (37) assignment -> VARIABLE ASSIGNMENT_OP . expression
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (15) binary_expression -> . primary_expression PLUS_OP primary_expression
    (16) binary_expression -> . primary_expression MINUS_OP primary_expression
    (17) binary_expression -> . primary_expression MUL_OP primary_expression
    (18) binary_expression -> . primary_expression DIV_OP primary_expression
    (19) binary_expression -> . primary_expression LESS_OP primary_expression
    (20) binary_expression -> . primary_expression GREATER_OP primary_expression
    (21) binary_expression -> . primary_expression LESS_EQUAL_OP primary_expression
    (22) binary_expression -> . primary_expression GREATER_EQUAL_OP primary_expression
    (23) binary_expression -> . primary_expression EQUAL_OP primary_expression
    (24) binary_expression -> . primary_expression DIFFERENT_OP primary_expression
    (25) unitary_expression -> . MINUS_OP primary_expression
    (26) unitary_expression -> . LOGICAL_OP_NOT primary_expression
    (27) primary_expression -> . LPAREN expression RPAREN
    (28) primary_expression -> . term
    (29) term -> . NUMBER_INTEGER
    (30) term -> . NUMBER_FLOAT
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL
    (35) term -> . TEXT_STRING
    (36) term -> . TEXT_CHAR

    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    VARIABLE        shift and go to state 69
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    expression                     shift and go to state 85
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 57

    (38) declaration -> TYPE_BOOLEAN VARIABLE .
    (37) assignment -> VARIABLE . ASSIGNMENT_OP expression

    END_LINE        reduce using rule 38 (declaration -> TYPE_BOOLEAN VARIABLE .)
    ASSIGNMENT_OP   shift and go to state 56


state 58

    (43) declaration -> TYPE_BOOLEAN assignment .

    END_LINE        reduce using rule 43 (declaration -> TYPE_BOOLEAN assignment .)


state 59

    (39) declaration -> TYPE_STRING VARIABLE .
    (37) assignment -> VARIABLE . ASSIGNMENT_OP expression

    END_LINE        reduce using rule 39 (declaration -> TYPE_STRING VARIABLE .)
    ASSIGNMENT_OP   shift and go to state 56


state 60

    (44) declaration -> TYPE_STRING assignment .

    END_LINE        reduce using rule 44 (declaration -> TYPE_STRING assignment .)


state 61

    (40) declaration -> TYPE_CHAR VARIABLE .
    (37) assignment -> VARIABLE . ASSIGNMENT_OP expression

    END_LINE        reduce using rule 40 (declaration -> TYPE_CHAR VARIABLE .)
    ASSIGNMENT_OP   shift and go to state 56


state 62

    (45) declaration -> TYPE_CHAR assignment .

    END_LINE        reduce using rule 45 (declaration -> TYPE_CHAR assignment .)


state 63

    (41) declaration -> TYPE_INTEGER VARIABLE .
    (37) assignment -> VARIABLE . ASSIGNMENT_OP expression

    END_LINE        reduce using rule 41 (declaration -> TYPE_INTEGER VARIABLE .)
    ASSIGNMENT_OP   shift and go to state 56


state 64

    (46) declaration -> TYPE_INTEGER assignment .

    END_LINE        reduce using rule 46 (declaration -> TYPE_INTEGER assignment .)


state 65

    (42) declaration -> TYPE_FLOAT VARIABLE .
    (37) assignment -> VARIABLE . ASSIGNMENT_OP expression

    END_LINE        reduce using rule 42 (declaration -> TYPE_FLOAT VARIABLE .)
    ASSIGNMENT_OP   shift and go to state 56


state 66

    (47) declaration -> TYPE_FLOAT assignment .

    END_LINE        reduce using rule 47 (declaration -> TYPE_FLOAT assignment .)


state 67

    (48) conditional -> CONDITIONAL1 LPAREN . expression RPAREN STRUCTURE_BODY statement_list
    (49) conditional -> CONDITIONAL1 LPAREN . expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (15) binary_expression -> . primary_expression PLUS_OP primary_expression
    (16) binary_expression -> . primary_expression MINUS_OP primary_expression
    (17) binary_expression -> . primary_expression MUL_OP primary_expression
    (18) binary_expression -> . primary_expression DIV_OP primary_expression
    (19) binary_expression -> . primary_expression LESS_OP primary_expression
    (20) binary_expression -> . primary_expression GREATER_OP primary_expression
    (21) binary_expression -> . primary_expression LESS_EQUAL_OP primary_expression
    (22) binary_expression -> . primary_expression GREATER_EQUAL_OP primary_expression
    (23) binary_expression -> . primary_expression EQUAL_OP primary_expression
    (24) binary_expression -> . primary_expression DIFFERENT_OP primary_expression
    (25) unitary_expression -> . MINUS_OP primary_expression
    (26) unitary_expression -> . LOGICAL_OP_NOT primary_expression
    (27) primary_expression -> . LPAREN expression RPAREN
    (28) primary_expression -> . term
    (29) term -> . NUMBER_INTEGER
    (30) term -> . NUMBER_FLOAT
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL
    (35) term -> . TEXT_STRING
    (36) term -> . TEXT_CHAR

    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    VARIABLE        shift and go to state 69
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    expression                     shift and go to state 86
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 68

    (27) primary_expression -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 87


state 69

    (31) term -> VARIABLE .

    PLUS_OP         reduce using rule 31 (term -> VARIABLE .)
    MINUS_OP        reduce using rule 31 (term -> VARIABLE .)
    MUL_OP          reduce using rule 31 (term -> VARIABLE .)
    DIV_OP          reduce using rule 31 (term -> VARIABLE .)
    LESS_OP         reduce using rule 31 (term -> VARIABLE .)
    GREATER_OP      reduce using rule 31 (term -> VARIABLE .)
    LESS_EQUAL_OP   reduce using rule 31 (term -> VARIABLE .)
    GREATER_EQUAL_OP reduce using rule 31 (term -> VARIABLE .)
    EQUAL_OP        reduce using rule 31 (term -> VARIABLE .)
    DIFFERENT_OP    reduce using rule 31 (term -> VARIABLE .)
    RPAREN          reduce using rule 31 (term -> VARIABLE .)
    END_LINE        reduce using rule 31 (term -> VARIABLE .)
    SEPARATION      reduce using rule 31 (term -> VARIABLE .)


state 70

    (50) loop -> LOOP1 LPAREN . expression RPAREN STRUCTURE_BODY statement_list
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (15) binary_expression -> . primary_expression PLUS_OP primary_expression
    (16) binary_expression -> . primary_expression MINUS_OP primary_expression
    (17) binary_expression -> . primary_expression MUL_OP primary_expression
    (18) binary_expression -> . primary_expression DIV_OP primary_expression
    (19) binary_expression -> . primary_expression LESS_OP primary_expression
    (20) binary_expression -> . primary_expression GREATER_OP primary_expression
    (21) binary_expression -> . primary_expression LESS_EQUAL_OP primary_expression
    (22) binary_expression -> . primary_expression GREATER_EQUAL_OP primary_expression
    (23) binary_expression -> . primary_expression EQUAL_OP primary_expression
    (24) binary_expression -> . primary_expression DIFFERENT_OP primary_expression
    (25) unitary_expression -> . MINUS_OP primary_expression
    (26) unitary_expression -> . LOGICAL_OP_NOT primary_expression
    (27) primary_expression -> . LPAREN expression RPAREN
    (28) primary_expression -> . term
    (29) term -> . NUMBER_INTEGER
    (30) term -> . NUMBER_FLOAT
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL
    (35) term -> . TEXT_STRING
    (36) term -> . TEXT_CHAR

    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    VARIABLE        shift and go to state 69
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    expression                     shift and go to state 88
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 71

    (51) loop -> LOOP2 LPAREN . assignment SEPARATION expression SEPARATION assignment RPAREN STRUCTURE_BODY statement_list
    (37) assignment -> . VARIABLE ASSIGNMENT_OP expression

    VARIABLE        shift and go to state 90

    assignment                     shift and go to state 89

state 72

    (52) return_statement -> RETURN expression .

    END_LINE        reduce using rule 52 (return_statement -> RETURN expression .)


state 73

    (25) unitary_expression -> MINUS_OP primary_expression .

    END_LINE        reduce using rule 25 (unitary_expression -> MINUS_OP primary_expression .)
    RPAREN          reduce using rule 25 (unitary_expression -> MINUS_OP primary_expression .)
    SEPARATION      reduce using rule 25 (unitary_expression -> MINUS_OP primary_expression .)


state 74

    (26) unitary_expression -> LOGICAL_OP_NOT primary_expression .

    END_LINE        reduce using rule 26 (unitary_expression -> LOGICAL_OP_NOT primary_expression .)
    RPAREN          reduce using rule 26 (unitary_expression -> LOGICAL_OP_NOT primary_expression .)
    SEPARATION      reduce using rule 26 (unitary_expression -> LOGICAL_OP_NOT primary_expression .)


state 75

    (15) binary_expression -> primary_expression PLUS_OP primary_expression .

    END_LINE        reduce using rule 15 (binary_expression -> primary_expression PLUS_OP primary_expression .)
    RPAREN          reduce using rule 15 (binary_expression -> primary_expression PLUS_OP primary_expression .)
    SEPARATION      reduce using rule 15 (binary_expression -> primary_expression PLUS_OP primary_expression .)


state 76

    (16) binary_expression -> primary_expression MINUS_OP primary_expression .

    END_LINE        reduce using rule 16 (binary_expression -> primary_expression MINUS_OP primary_expression .)
    RPAREN          reduce using rule 16 (binary_expression -> primary_expression MINUS_OP primary_expression .)
    SEPARATION      reduce using rule 16 (binary_expression -> primary_expression MINUS_OP primary_expression .)


state 77

    (17) binary_expression -> primary_expression MUL_OP primary_expression .

    END_LINE        reduce using rule 17 (binary_expression -> primary_expression MUL_OP primary_expression .)
    RPAREN          reduce using rule 17 (binary_expression -> primary_expression MUL_OP primary_expression .)
    SEPARATION      reduce using rule 17 (binary_expression -> primary_expression MUL_OP primary_expression .)


state 78

    (18) binary_expression -> primary_expression DIV_OP primary_expression .

    END_LINE        reduce using rule 18 (binary_expression -> primary_expression DIV_OP primary_expression .)
    RPAREN          reduce using rule 18 (binary_expression -> primary_expression DIV_OP primary_expression .)
    SEPARATION      reduce using rule 18 (binary_expression -> primary_expression DIV_OP primary_expression .)


state 79

    (19) binary_expression -> primary_expression LESS_OP primary_expression .

    END_LINE        reduce using rule 19 (binary_expression -> primary_expression LESS_OP primary_expression .)
    RPAREN          reduce using rule 19 (binary_expression -> primary_expression LESS_OP primary_expression .)
    SEPARATION      reduce using rule 19 (binary_expression -> primary_expression LESS_OP primary_expression .)


state 80

    (20) binary_expression -> primary_expression GREATER_OP primary_expression .

    END_LINE        reduce using rule 20 (binary_expression -> primary_expression GREATER_OP primary_expression .)
    RPAREN          reduce using rule 20 (binary_expression -> primary_expression GREATER_OP primary_expression .)
    SEPARATION      reduce using rule 20 (binary_expression -> primary_expression GREATER_OP primary_expression .)


state 81

    (21) binary_expression -> primary_expression LESS_EQUAL_OP primary_expression .

    END_LINE        reduce using rule 21 (binary_expression -> primary_expression LESS_EQUAL_OP primary_expression .)
    RPAREN          reduce using rule 21 (binary_expression -> primary_expression LESS_EQUAL_OP primary_expression .)
    SEPARATION      reduce using rule 21 (binary_expression -> primary_expression LESS_EQUAL_OP primary_expression .)


state 82

    (22) binary_expression -> primary_expression GREATER_EQUAL_OP primary_expression .

    END_LINE        reduce using rule 22 (binary_expression -> primary_expression GREATER_EQUAL_OP primary_expression .)
    RPAREN          reduce using rule 22 (binary_expression -> primary_expression GREATER_EQUAL_OP primary_expression .)
    SEPARATION      reduce using rule 22 (binary_expression -> primary_expression GREATER_EQUAL_OP primary_expression .)


state 83

    (23) binary_expression -> primary_expression EQUAL_OP primary_expression .

    END_LINE        reduce using rule 23 (binary_expression -> primary_expression EQUAL_OP primary_expression .)
    RPAREN          reduce using rule 23 (binary_expression -> primary_expression EQUAL_OP primary_expression .)
    SEPARATION      reduce using rule 23 (binary_expression -> primary_expression EQUAL_OP primary_expression .)


state 84

    (24) binary_expression -> primary_expression DIFFERENT_OP primary_expression .

    END_LINE        reduce using rule 24 (binary_expression -> primary_expression DIFFERENT_OP primary_expression .)
    RPAREN          reduce using rule 24 (binary_expression -> primary_expression DIFFERENT_OP primary_expression .)
    SEPARATION      reduce using rule 24 (binary_expression -> primary_expression DIFFERENT_OP primary_expression .)


state 85

    (37) assignment -> VARIABLE ASSIGNMENT_OP expression .

    END_LINE        reduce using rule 37 (assignment -> VARIABLE ASSIGNMENT_OP expression .)
    SEPARATION      reduce using rule 37 (assignment -> VARIABLE ASSIGNMENT_OP expression .)
    RPAREN          reduce using rule 37 (assignment -> VARIABLE ASSIGNMENT_OP expression .)


state 86

    (48) conditional -> CONDITIONAL1 LPAREN expression . RPAREN STRUCTURE_BODY statement_list
    (49) conditional -> CONDITIONAL1 LPAREN expression . RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list

    RPAREN          shift and go to state 91


state 87

    (27) primary_expression -> LPAREN expression RPAREN .

    PLUS_OP         reduce using rule 27 (primary_expression -> LPAREN expression RPAREN .)
    MINUS_OP        reduce using rule 27 (primary_expression -> LPAREN expression RPAREN .)
    MUL_OP          reduce using rule 27 (primary_expression -> LPAREN expression RPAREN .)
    DIV_OP          reduce using rule 27 (primary_expression -> LPAREN expression RPAREN .)
    LESS_OP         reduce using rule 27 (primary_expression -> LPAREN expression RPAREN .)
    GREATER_OP      reduce using rule 27 (primary_expression -> LPAREN expression RPAREN .)
    LESS_EQUAL_OP   reduce using rule 27 (primary_expression -> LPAREN expression RPAREN .)
    GREATER_EQUAL_OP reduce using rule 27 (primary_expression -> LPAREN expression RPAREN .)
    EQUAL_OP        reduce using rule 27 (primary_expression -> LPAREN expression RPAREN .)
    DIFFERENT_OP    reduce using rule 27 (primary_expression -> LPAREN expression RPAREN .)
    END_LINE        reduce using rule 27 (primary_expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 27 (primary_expression -> LPAREN expression RPAREN .)
    SEPARATION      reduce using rule 27 (primary_expression -> LPAREN expression RPAREN .)


state 88

    (50) loop -> LOOP1 LPAREN expression . RPAREN STRUCTURE_BODY statement_list

    RPAREN          shift and go to state 92


state 89

    (51) loop -> LOOP2 LPAREN assignment . SEPARATION expression SEPARATION assignment RPAREN STRUCTURE_BODY statement_list

    SEPARATION      shift and go to state 93


state 90

    (37) assignment -> VARIABLE . ASSIGNMENT_OP expression

    ASSIGNMENT_OP   shift and go to state 56


state 91

    (48) conditional -> CONDITIONAL1 LPAREN expression RPAREN . STRUCTURE_BODY statement_list
    (49) conditional -> CONDITIONAL1 LPAREN expression RPAREN . STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list

    STRUCTURE_BODY  shift and go to state 94


state 92

    (50) loop -> LOOP1 LPAREN expression RPAREN . STRUCTURE_BODY statement_list

    STRUCTURE_BODY  shift and go to state 95


state 93

    (51) loop -> LOOP2 LPAREN assignment SEPARATION . expression SEPARATION assignment RPAREN STRUCTURE_BODY statement_list
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (15) binary_expression -> . primary_expression PLUS_OP primary_expression
    (16) binary_expression -> . primary_expression MINUS_OP primary_expression
    (17) binary_expression -> . primary_expression MUL_OP primary_expression
    (18) binary_expression -> . primary_expression DIV_OP primary_expression
    (19) binary_expression -> . primary_expression LESS_OP primary_expression
    (20) binary_expression -> . primary_expression GREATER_OP primary_expression
    (21) binary_expression -> . primary_expression LESS_EQUAL_OP primary_expression
    (22) binary_expression -> . primary_expression GREATER_EQUAL_OP primary_expression
    (23) binary_expression -> . primary_expression EQUAL_OP primary_expression
    (24) binary_expression -> . primary_expression DIFFERENT_OP primary_expression
    (25) unitary_expression -> . MINUS_OP primary_expression
    (26) unitary_expression -> . LOGICAL_OP_NOT primary_expression
    (27) primary_expression -> . LPAREN expression RPAREN
    (28) primary_expression -> . term
    (29) term -> . NUMBER_INTEGER
    (30) term -> . NUMBER_FLOAT
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL
    (35) term -> . TEXT_STRING
    (36) term -> . TEXT_CHAR

    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    VARIABLE        shift and go to state 69
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    expression                     shift and go to state 96
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 94

    (48) conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY . statement_list
    (49) conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY . statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . return_statement END_LINE
    (10) statement -> . break_statement END_LINE
    (11) statement -> . comment
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (37) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (38) declaration -> . TYPE_BOOLEAN VARIABLE
    (39) declaration -> . TYPE_STRING VARIABLE
    (40) declaration -> . TYPE_CHAR VARIABLE
    (41) declaration -> . TYPE_INTEGER VARIABLE
    (42) declaration -> . TYPE_FLOAT VARIABLE
    (43) declaration -> . TYPE_BOOLEAN assignment
    (44) declaration -> . TYPE_STRING assignment
    (45) declaration -> . TYPE_CHAR assignment
    (46) declaration -> . TYPE_INTEGER assignment
    (47) declaration -> . TYPE_FLOAT assignment
    (48) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (49) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (50) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (51) loop -> . LOOP2 LPAREN assignment SEPARATION expression SEPARATION assignment RPAREN STRUCTURE_BODY statement_list
    (52) return_statement -> . RETURN expression
    (53) return_statement -> . RETURN
    (54) break_statement -> . BREAK
    (55) comment -> . COMMENT
    (15) binary_expression -> . primary_expression PLUS_OP primary_expression
    (16) binary_expression -> . primary_expression MINUS_OP primary_expression
    (17) binary_expression -> . primary_expression MUL_OP primary_expression
    (18) binary_expression -> . primary_expression DIV_OP primary_expression
    (19) binary_expression -> . primary_expression LESS_OP primary_expression
    (20) binary_expression -> . primary_expression GREATER_OP primary_expression
    (21) binary_expression -> . primary_expression LESS_EQUAL_OP primary_expression
    (22) binary_expression -> . primary_expression GREATER_EQUAL_OP primary_expression
    (23) binary_expression -> . primary_expression EQUAL_OP primary_expression
    (24) binary_expression -> . primary_expression DIFFERENT_OP primary_expression
    (25) unitary_expression -> . MINUS_OP primary_expression
    (26) unitary_expression -> . LOGICAL_OP_NOT primary_expression
    (27) primary_expression -> . LPAREN expression RPAREN
    (28) primary_expression -> . term
    (29) term -> . NUMBER_INTEGER
    (30) term -> . NUMBER_FLOAT
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL
    (35) term -> . TEXT_STRING
    (36) term -> . TEXT_CHAR

    VARIABLE        shift and go to state 15
    TYPE_BOOLEAN    shift and go to state 16
    TYPE_STRING     shift and go to state 17
    TYPE_CHAR       shift and go to state 18
    TYPE_INTEGER    shift and go to state 19
    TYPE_FLOAT      shift and go to state 20
    CONDITIONAL1    shift and go to state 21
    LOOP1           shift and go to state 23
    LOOP2           shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    COMMENT         shift and go to state 27
    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    expression                     shift and go to state 4
    statement_list                 shift and go to state 97
    statement                      shift and go to state 3
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    return_statement               shift and go to state 9
    break_statement                shift and go to state 10
    comment                        shift and go to state 11
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 95

    (50) loop -> LOOP1 LPAREN expression RPAREN STRUCTURE_BODY . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . return_statement END_LINE
    (10) statement -> . break_statement END_LINE
    (11) statement -> . comment
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (37) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (38) declaration -> . TYPE_BOOLEAN VARIABLE
    (39) declaration -> . TYPE_STRING VARIABLE
    (40) declaration -> . TYPE_CHAR VARIABLE
    (41) declaration -> . TYPE_INTEGER VARIABLE
    (42) declaration -> . TYPE_FLOAT VARIABLE
    (43) declaration -> . TYPE_BOOLEAN assignment
    (44) declaration -> . TYPE_STRING assignment
    (45) declaration -> . TYPE_CHAR assignment
    (46) declaration -> . TYPE_INTEGER assignment
    (47) declaration -> . TYPE_FLOAT assignment
    (48) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (49) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (50) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (51) loop -> . LOOP2 LPAREN assignment SEPARATION expression SEPARATION assignment RPAREN STRUCTURE_BODY statement_list
    (52) return_statement -> . RETURN expression
    (53) return_statement -> . RETURN
    (54) break_statement -> . BREAK
    (55) comment -> . COMMENT
    (15) binary_expression -> . primary_expression PLUS_OP primary_expression
    (16) binary_expression -> . primary_expression MINUS_OP primary_expression
    (17) binary_expression -> . primary_expression MUL_OP primary_expression
    (18) binary_expression -> . primary_expression DIV_OP primary_expression
    (19) binary_expression -> . primary_expression LESS_OP primary_expression
    (20) binary_expression -> . primary_expression GREATER_OP primary_expression
    (21) binary_expression -> . primary_expression LESS_EQUAL_OP primary_expression
    (22) binary_expression -> . primary_expression GREATER_EQUAL_OP primary_expression
    (23) binary_expression -> . primary_expression EQUAL_OP primary_expression
    (24) binary_expression -> . primary_expression DIFFERENT_OP primary_expression
    (25) unitary_expression -> . MINUS_OP primary_expression
    (26) unitary_expression -> . LOGICAL_OP_NOT primary_expression
    (27) primary_expression -> . LPAREN expression RPAREN
    (28) primary_expression -> . term
    (29) term -> . NUMBER_INTEGER
    (30) term -> . NUMBER_FLOAT
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL
    (35) term -> . TEXT_STRING
    (36) term -> . TEXT_CHAR

    VARIABLE        shift and go to state 15
    TYPE_BOOLEAN    shift and go to state 16
    TYPE_STRING     shift and go to state 17
    TYPE_CHAR       shift and go to state 18
    TYPE_INTEGER    shift and go to state 19
    TYPE_FLOAT      shift and go to state 20
    CONDITIONAL1    shift and go to state 21
    LOOP1           shift and go to state 23
    LOOP2           shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    COMMENT         shift and go to state 27
    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    expression                     shift and go to state 4
    statement_list                 shift and go to state 98
    statement                      shift and go to state 3
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    return_statement               shift and go to state 9
    break_statement                shift and go to state 10
    comment                        shift and go to state 11
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 96

    (51) loop -> LOOP2 LPAREN assignment SEPARATION expression . SEPARATION assignment RPAREN STRUCTURE_BODY statement_list

    SEPARATION      shift and go to state 99


state 97

    (48) conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list .
    (49) conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list . CONDITIONAL2 STRUCTURE_BODY statement_list
    (2) statement_list -> statement_list . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . return_statement END_LINE
    (10) statement -> . break_statement END_LINE
    (11) statement -> . comment
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (37) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (38) declaration -> . TYPE_BOOLEAN VARIABLE
    (39) declaration -> . TYPE_STRING VARIABLE
    (40) declaration -> . TYPE_CHAR VARIABLE
    (41) declaration -> . TYPE_INTEGER VARIABLE
    (42) declaration -> . TYPE_FLOAT VARIABLE
    (43) declaration -> . TYPE_BOOLEAN assignment
    (44) declaration -> . TYPE_STRING assignment
    (45) declaration -> . TYPE_CHAR assignment
    (46) declaration -> . TYPE_INTEGER assignment
    (47) declaration -> . TYPE_FLOAT assignment
    (48) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (49) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (50) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (51) loop -> . LOOP2 LPAREN assignment SEPARATION expression SEPARATION assignment RPAREN STRUCTURE_BODY statement_list
    (52) return_statement -> . RETURN expression
    (53) return_statement -> . RETURN
    (54) break_statement -> . BREAK
    (55) comment -> . COMMENT
    (15) binary_expression -> . primary_expression PLUS_OP primary_expression
    (16) binary_expression -> . primary_expression MINUS_OP primary_expression
    (17) binary_expression -> . primary_expression MUL_OP primary_expression
    (18) binary_expression -> . primary_expression DIV_OP primary_expression
    (19) binary_expression -> . primary_expression LESS_OP primary_expression
    (20) binary_expression -> . primary_expression GREATER_OP primary_expression
    (21) binary_expression -> . primary_expression LESS_EQUAL_OP primary_expression
    (22) binary_expression -> . primary_expression GREATER_EQUAL_OP primary_expression
    (23) binary_expression -> . primary_expression EQUAL_OP primary_expression
    (24) binary_expression -> . primary_expression DIFFERENT_OP primary_expression
    (25) unitary_expression -> . MINUS_OP primary_expression
    (26) unitary_expression -> . LOGICAL_OP_NOT primary_expression
    (27) primary_expression -> . LPAREN expression RPAREN
    (28) primary_expression -> . term
    (29) term -> . NUMBER_INTEGER
    (30) term -> . NUMBER_FLOAT
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL
    (35) term -> . TEXT_STRING
    (36) term -> . TEXT_CHAR

    END_LINE        reduce using rule 48 (conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list .)
    CONDITIONAL2    shift and go to state 100
    VARIABLE        shift and go to state 15
    TYPE_BOOLEAN    shift and go to state 16
    TYPE_STRING     shift and go to state 17
    TYPE_CHAR       shift and go to state 18
    TYPE_INTEGER    shift and go to state 19
    TYPE_FLOAT      shift and go to state 20
    CONDITIONAL1    shift and go to state 21
    LOOP1           shift and go to state 23
    LOOP2           shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    COMMENT         shift and go to state 27
    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    expression                     shift and go to state 4
    statement                      shift and go to state 38
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    return_statement               shift and go to state 9
    break_statement                shift and go to state 10
    comment                        shift and go to state 11
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 98

    (50) loop -> LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . return_statement END_LINE
    (10) statement -> . break_statement END_LINE
    (11) statement -> . comment
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (37) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (38) declaration -> . TYPE_BOOLEAN VARIABLE
    (39) declaration -> . TYPE_STRING VARIABLE
    (40) declaration -> . TYPE_CHAR VARIABLE
    (41) declaration -> . TYPE_INTEGER VARIABLE
    (42) declaration -> . TYPE_FLOAT VARIABLE
    (43) declaration -> . TYPE_BOOLEAN assignment
    (44) declaration -> . TYPE_STRING assignment
    (45) declaration -> . TYPE_CHAR assignment
    (46) declaration -> . TYPE_INTEGER assignment
    (47) declaration -> . TYPE_FLOAT assignment
    (48) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (49) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (50) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (51) loop -> . LOOP2 LPAREN assignment SEPARATION expression SEPARATION assignment RPAREN STRUCTURE_BODY statement_list
    (52) return_statement -> . RETURN expression
    (53) return_statement -> . RETURN
    (54) break_statement -> . BREAK
    (55) comment -> . COMMENT
    (15) binary_expression -> . primary_expression PLUS_OP primary_expression
    (16) binary_expression -> . primary_expression MINUS_OP primary_expression
    (17) binary_expression -> . primary_expression MUL_OP primary_expression
    (18) binary_expression -> . primary_expression DIV_OP primary_expression
    (19) binary_expression -> . primary_expression LESS_OP primary_expression
    (20) binary_expression -> . primary_expression GREATER_OP primary_expression
    (21) binary_expression -> . primary_expression LESS_EQUAL_OP primary_expression
    (22) binary_expression -> . primary_expression GREATER_EQUAL_OP primary_expression
    (23) binary_expression -> . primary_expression EQUAL_OP primary_expression
    (24) binary_expression -> . primary_expression DIFFERENT_OP primary_expression
    (25) unitary_expression -> . MINUS_OP primary_expression
    (26) unitary_expression -> . LOGICAL_OP_NOT primary_expression
    (27) primary_expression -> . LPAREN expression RPAREN
    (28) primary_expression -> . term
    (29) term -> . NUMBER_INTEGER
    (30) term -> . NUMBER_FLOAT
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL
    (35) term -> . TEXT_STRING
    (36) term -> . TEXT_CHAR

    END_LINE        reduce using rule 50 (loop -> LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list .)
    VARIABLE        shift and go to state 15
    TYPE_BOOLEAN    shift and go to state 16
    TYPE_STRING     shift and go to state 17
    TYPE_CHAR       shift and go to state 18
    TYPE_INTEGER    shift and go to state 19
    TYPE_FLOAT      shift and go to state 20
    CONDITIONAL1    shift and go to state 21
    LOOP1           shift and go to state 23
    LOOP2           shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    COMMENT         shift and go to state 27
    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    expression                     shift and go to state 4
    statement                      shift and go to state 38
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    return_statement               shift and go to state 9
    break_statement                shift and go to state 10
    comment                        shift and go to state 11
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 99

    (51) loop -> LOOP2 LPAREN assignment SEPARATION expression SEPARATION . assignment RPAREN STRUCTURE_BODY statement_list
    (37) assignment -> . VARIABLE ASSIGNMENT_OP expression

    VARIABLE        shift and go to state 90

    assignment                     shift and go to state 101

state 100

    (49) conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 . STRUCTURE_BODY statement_list

    STRUCTURE_BODY  shift and go to state 102


state 101

    (51) loop -> LOOP2 LPAREN assignment SEPARATION expression SEPARATION assignment . RPAREN STRUCTURE_BODY statement_list

    RPAREN          shift and go to state 103


state 102

    (49) conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . return_statement END_LINE
    (10) statement -> . break_statement END_LINE
    (11) statement -> . comment
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (37) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (38) declaration -> . TYPE_BOOLEAN VARIABLE
    (39) declaration -> . TYPE_STRING VARIABLE
    (40) declaration -> . TYPE_CHAR VARIABLE
    (41) declaration -> . TYPE_INTEGER VARIABLE
    (42) declaration -> . TYPE_FLOAT VARIABLE
    (43) declaration -> . TYPE_BOOLEAN assignment
    (44) declaration -> . TYPE_STRING assignment
    (45) declaration -> . TYPE_CHAR assignment
    (46) declaration -> . TYPE_INTEGER assignment
    (47) declaration -> . TYPE_FLOAT assignment
    (48) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (49) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (50) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (51) loop -> . LOOP2 LPAREN assignment SEPARATION expression SEPARATION assignment RPAREN STRUCTURE_BODY statement_list
    (52) return_statement -> . RETURN expression
    (53) return_statement -> . RETURN
    (54) break_statement -> . BREAK
    (55) comment -> . COMMENT
    (15) binary_expression -> . primary_expression PLUS_OP primary_expression
    (16) binary_expression -> . primary_expression MINUS_OP primary_expression
    (17) binary_expression -> . primary_expression MUL_OP primary_expression
    (18) binary_expression -> . primary_expression DIV_OP primary_expression
    (19) binary_expression -> . primary_expression LESS_OP primary_expression
    (20) binary_expression -> . primary_expression GREATER_OP primary_expression
    (21) binary_expression -> . primary_expression LESS_EQUAL_OP primary_expression
    (22) binary_expression -> . primary_expression GREATER_EQUAL_OP primary_expression
    (23) binary_expression -> . primary_expression EQUAL_OP primary_expression
    (24) binary_expression -> . primary_expression DIFFERENT_OP primary_expression
    (25) unitary_expression -> . MINUS_OP primary_expression
    (26) unitary_expression -> . LOGICAL_OP_NOT primary_expression
    (27) primary_expression -> . LPAREN expression RPAREN
    (28) primary_expression -> . term
    (29) term -> . NUMBER_INTEGER
    (30) term -> . NUMBER_FLOAT
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL
    (35) term -> . TEXT_STRING
    (36) term -> . TEXT_CHAR

    VARIABLE        shift and go to state 15
    TYPE_BOOLEAN    shift and go to state 16
    TYPE_STRING     shift and go to state 17
    TYPE_CHAR       shift and go to state 18
    TYPE_INTEGER    shift and go to state 19
    TYPE_FLOAT      shift and go to state 20
    CONDITIONAL1    shift and go to state 21
    LOOP1           shift and go to state 23
    LOOP2           shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    COMMENT         shift and go to state 27
    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    expression                     shift and go to state 4
    statement_list                 shift and go to state 104
    statement                      shift and go to state 3
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    return_statement               shift and go to state 9
    break_statement                shift and go to state 10
    comment                        shift and go to state 11
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 103

    (51) loop -> LOOP2 LPAREN assignment SEPARATION expression SEPARATION assignment RPAREN . STRUCTURE_BODY statement_list

    STRUCTURE_BODY  shift and go to state 105


state 104

    (49) conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . return_statement END_LINE
    (10) statement -> . break_statement END_LINE
    (11) statement -> . comment
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (37) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (38) declaration -> . TYPE_BOOLEAN VARIABLE
    (39) declaration -> . TYPE_STRING VARIABLE
    (40) declaration -> . TYPE_CHAR VARIABLE
    (41) declaration -> . TYPE_INTEGER VARIABLE
    (42) declaration -> . TYPE_FLOAT VARIABLE
    (43) declaration -> . TYPE_BOOLEAN assignment
    (44) declaration -> . TYPE_STRING assignment
    (45) declaration -> . TYPE_CHAR assignment
    (46) declaration -> . TYPE_INTEGER assignment
    (47) declaration -> . TYPE_FLOAT assignment
    (48) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (49) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (50) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (51) loop -> . LOOP2 LPAREN assignment SEPARATION expression SEPARATION assignment RPAREN STRUCTURE_BODY statement_list
    (52) return_statement -> . RETURN expression
    (53) return_statement -> . RETURN
    (54) break_statement -> . BREAK
    (55) comment -> . COMMENT
    (15) binary_expression -> . primary_expression PLUS_OP primary_expression
    (16) binary_expression -> . primary_expression MINUS_OP primary_expression
    (17) binary_expression -> . primary_expression MUL_OP primary_expression
    (18) binary_expression -> . primary_expression DIV_OP primary_expression
    (19) binary_expression -> . primary_expression LESS_OP primary_expression
    (20) binary_expression -> . primary_expression GREATER_OP primary_expression
    (21) binary_expression -> . primary_expression LESS_EQUAL_OP primary_expression
    (22) binary_expression -> . primary_expression GREATER_EQUAL_OP primary_expression
    (23) binary_expression -> . primary_expression EQUAL_OP primary_expression
    (24) binary_expression -> . primary_expression DIFFERENT_OP primary_expression
    (25) unitary_expression -> . MINUS_OP primary_expression
    (26) unitary_expression -> . LOGICAL_OP_NOT primary_expression
    (27) primary_expression -> . LPAREN expression RPAREN
    (28) primary_expression -> . term
    (29) term -> . NUMBER_INTEGER
    (30) term -> . NUMBER_FLOAT
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL
    (35) term -> . TEXT_STRING
    (36) term -> . TEXT_CHAR

    END_LINE        reduce using rule 49 (conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list .)
    VARIABLE        shift and go to state 15
    TYPE_BOOLEAN    shift and go to state 16
    TYPE_STRING     shift and go to state 17
    TYPE_CHAR       shift and go to state 18
    TYPE_INTEGER    shift and go to state 19
    TYPE_FLOAT      shift and go to state 20
    CONDITIONAL1    shift and go to state 21
    LOOP1           shift and go to state 23
    LOOP2           shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    COMMENT         shift and go to state 27
    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    expression                     shift and go to state 4
    statement                      shift and go to state 38
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    return_statement               shift and go to state 9
    break_statement                shift and go to state 10
    comment                        shift and go to state 11
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 105

    (51) loop -> LOOP2 LPAREN assignment SEPARATION expression SEPARATION assignment RPAREN STRUCTURE_BODY . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . return_statement END_LINE
    (10) statement -> . break_statement END_LINE
    (11) statement -> . comment
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (37) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (38) declaration -> . TYPE_BOOLEAN VARIABLE
    (39) declaration -> . TYPE_STRING VARIABLE
    (40) declaration -> . TYPE_CHAR VARIABLE
    (41) declaration -> . TYPE_INTEGER VARIABLE
    (42) declaration -> . TYPE_FLOAT VARIABLE
    (43) declaration -> . TYPE_BOOLEAN assignment
    (44) declaration -> . TYPE_STRING assignment
    (45) declaration -> . TYPE_CHAR assignment
    (46) declaration -> . TYPE_INTEGER assignment
    (47) declaration -> . TYPE_FLOAT assignment
    (48) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (49) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (50) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (51) loop -> . LOOP2 LPAREN assignment SEPARATION expression SEPARATION assignment RPAREN STRUCTURE_BODY statement_list
    (52) return_statement -> . RETURN expression
    (53) return_statement -> . RETURN
    (54) break_statement -> . BREAK
    (55) comment -> . COMMENT
    (15) binary_expression -> . primary_expression PLUS_OP primary_expression
    (16) binary_expression -> . primary_expression MINUS_OP primary_expression
    (17) binary_expression -> . primary_expression MUL_OP primary_expression
    (18) binary_expression -> . primary_expression DIV_OP primary_expression
    (19) binary_expression -> . primary_expression LESS_OP primary_expression
    (20) binary_expression -> . primary_expression GREATER_OP primary_expression
    (21) binary_expression -> . primary_expression LESS_EQUAL_OP primary_expression
    (22) binary_expression -> . primary_expression GREATER_EQUAL_OP primary_expression
    (23) binary_expression -> . primary_expression EQUAL_OP primary_expression
    (24) binary_expression -> . primary_expression DIFFERENT_OP primary_expression
    (25) unitary_expression -> . MINUS_OP primary_expression
    (26) unitary_expression -> . LOGICAL_OP_NOT primary_expression
    (27) primary_expression -> . LPAREN expression RPAREN
    (28) primary_expression -> . term
    (29) term -> . NUMBER_INTEGER
    (30) term -> . NUMBER_FLOAT
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL
    (35) term -> . TEXT_STRING
    (36) term -> . TEXT_CHAR

    VARIABLE        shift and go to state 15
    TYPE_BOOLEAN    shift and go to state 16
    TYPE_STRING     shift and go to state 17
    TYPE_CHAR       shift and go to state 18
    TYPE_INTEGER    shift and go to state 19
    TYPE_FLOAT      shift and go to state 20
    CONDITIONAL1    shift and go to state 21
    LOOP1           shift and go to state 23
    LOOP2           shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    COMMENT         shift and go to state 27
    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    assignment                     shift and go to state 5
    expression                     shift and go to state 4
    statement_list                 shift and go to state 106
    statement                      shift and go to state 3
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    return_statement               shift and go to state 9
    break_statement                shift and go to state 10
    comment                        shift and go to state 11
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30

state 106

    (51) loop -> LOOP2 LPAREN assignment SEPARATION expression SEPARATION assignment RPAREN STRUCTURE_BODY statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . return_statement END_LINE
    (10) statement -> . break_statement END_LINE
    (11) statement -> . comment
    (12) expression -> . binary_expression
    (13) expression -> . unitary_expression
    (14) expression -> . primary_expression
    (37) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (38) declaration -> . TYPE_BOOLEAN VARIABLE
    (39) declaration -> . TYPE_STRING VARIABLE
    (40) declaration -> . TYPE_CHAR VARIABLE
    (41) declaration -> . TYPE_INTEGER VARIABLE
    (42) declaration -> . TYPE_FLOAT VARIABLE
    (43) declaration -> . TYPE_BOOLEAN assignment
    (44) declaration -> . TYPE_STRING assignment
    (45) declaration -> . TYPE_CHAR assignment
    (46) declaration -> . TYPE_INTEGER assignment
    (47) declaration -> . TYPE_FLOAT assignment
    (48) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (49) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (50) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (51) loop -> . LOOP2 LPAREN assignment SEPARATION expression SEPARATION assignment RPAREN STRUCTURE_BODY statement_list
    (52) return_statement -> . RETURN expression
    (53) return_statement -> . RETURN
    (54) break_statement -> . BREAK
    (55) comment -> . COMMENT
    (15) binary_expression -> . primary_expression PLUS_OP primary_expression
    (16) binary_expression -> . primary_expression MINUS_OP primary_expression
    (17) binary_expression -> . primary_expression MUL_OP primary_expression
    (18) binary_expression -> . primary_expression DIV_OP primary_expression
    (19) binary_expression -> . primary_expression LESS_OP primary_expression
    (20) binary_expression -> . primary_expression GREATER_OP primary_expression
    (21) binary_expression -> . primary_expression LESS_EQUAL_OP primary_expression
    (22) binary_expression -> . primary_expression GREATER_EQUAL_OP primary_expression
    (23) binary_expression -> . primary_expression EQUAL_OP primary_expression
    (24) binary_expression -> . primary_expression DIFFERENT_OP primary_expression
    (25) unitary_expression -> . MINUS_OP primary_expression
    (26) unitary_expression -> . LOGICAL_OP_NOT primary_expression
    (27) primary_expression -> . LPAREN expression RPAREN
    (28) primary_expression -> . term
    (29) term -> . NUMBER_INTEGER
    (30) term -> . NUMBER_FLOAT
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL
    (35) term -> . TEXT_STRING
    (36) term -> . TEXT_CHAR

    END_LINE        reduce using rule 51 (loop -> LOOP2 LPAREN assignment SEPARATION expression SEPARATION assignment RPAREN STRUCTURE_BODY statement_list .)
    VARIABLE        shift and go to state 15
    TYPE_BOOLEAN    shift and go to state 16
    TYPE_STRING     shift and go to state 17
    TYPE_CHAR       shift and go to state 18
    TYPE_INTEGER    shift and go to state 19
    TYPE_FLOAT      shift and go to state 20
    CONDITIONAL1    shift and go to state 21
    LOOP1           shift and go to state 23
    LOOP2           shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    COMMENT         shift and go to state 27
    MINUS_OP        shift and go to state 28
    LOGICAL_OP_NOT  shift and go to state 29
    LPAREN          shift and go to state 22
    NUMBER_INTEGER  shift and go to state 31
    NUMBER_FLOAT    shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NULL            shift and go to state 35
    TEXT_STRING     shift and go to state 36
    TEXT_CHAR       shift and go to state 37

    assignment                     shift and go to state 5
    expression                     shift and go to state 4
    statement                      shift and go to state 38
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    return_statement               shift and go to state 9
    break_statement                shift and go to state 10
    comment                        shift and go to state 11
    binary_expression              shift and go to state 12
    unitary_expression             shift and go to state 13
    primary_expression             shift and go to state 14
    term                           shift and go to state 30
