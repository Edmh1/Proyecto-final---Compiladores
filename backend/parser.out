Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement_list statement
Rule 3     statement_list -> statement
Rule 4     statement -> expression END_LINE
Rule 5     statement -> assignment END_LINE
Rule 6     statement -> declaration END_LINE
Rule 7     statement -> conditional END_LINE
Rule 8     statement -> loop END_LINE
Rule 9     statement -> function_declaration END_LINE
Rule 10    statement -> return_statement END_LINE
Rule 11    statement -> break_statement END_LINE
Rule 12    statement -> COMMENT
Rule 13    expression -> term
Rule 14    expression -> expression PLUS_OP term
Rule 15    expression -> expression MINUS_OP term
Rule 16    expression -> expression MUL_OP term
Rule 17    expression -> expression DIV_OP term
Rule 18    expression -> expression LESS_OP expression
Rule 19    expression -> expression LESS_EQUAL_OP expression
Rule 20    expression -> expression GREATER_OP expression
Rule 21    expression -> expression GREATER_EQUAL_OP expression
Rule 22    expression -> expression EQUAL_OP expression
Rule 23    expression -> expression DIFFERENT_OP expression
Rule 24    expression -> LOGICAL_OP_NOT expression
Rule 25    expression -> expression LOGICAL_OP_AND expression
Rule 26    expression -> expression LOGICAL_OP_OR expression
Rule 27    term -> NUMBER_INTEGER
Rule 28    term -> NUMBER_FLOAT
Rule 29    term -> TEXT_STRING
Rule 30    term -> TEXT_CHAR
Rule 31    term -> VARIABLE
Rule 32    term -> TRUE
Rule 33    term -> FALSE
Rule 34    term -> NULL
Rule 35    assignment -> VARIABLE ASSIGNMENT_OP expression
Rule 36    declaration -> TYPE_BOOLEAN assignment
Rule 37    declaration -> TYPE_STRING assignment
Rule 38    declaration -> TYPE_CHAR assignment
Rule 39    declaration -> TYPE_INTEGER assignment
Rule 40    declaration -> TYPE_FLOAT assignment
Rule 41    declaration -> TYPE_BOOLEAN VARIABLE
Rule 42    declaration -> TYPE_STRING VARIABLE
Rule 43    declaration -> TYPE_CHAR VARIABLE
Rule 44    declaration -> TYPE_INTEGER VARIABLE
Rule 45    declaration -> TYPE_FLOAT VARIABLE
Rule 46    conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
Rule 47    conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
Rule 48    loop -> LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
Rule 49    loop -> LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
Rule 50    function_declaration -> FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list
Rule 51    return_statement -> RETURN expression
Rule 52    return_statement -> RETURN
Rule 53    break_statement -> BREAK

Terminals, with rules where they appear

ASSIGNMENT_OP        : 35
BREAK                : 53
COMMENT              : 12
CONDITIONAL1         : 46 47
CONDITIONAL2         : 47
DIFFERENT_OP         : 23
DIV_OP               : 17
END_LINE             : 4 5 6 7 8 9 10 11
EQUAL_OP             : 22
FALSE                : 33
FUNCTION_DECLARATION : 50
GREATER_EQUAL_OP     : 21
GREATER_OP           : 20
LESS_EQUAL_OP        : 19
LESS_OP              : 18
LOGICAL_OP_AND       : 25
LOGICAL_OP_NOT       : 24
LOGICAL_OP_OR        : 26
LOOP1                : 48
LOOP2                : 49
LPAREN               : 46 47 48 49 50
MINUS_OP             : 15
MUL_OP               : 16
NULL                 : 34
NUMBER_FLOAT         : 28
NUMBER_INTEGER       : 27
PLUS_OP              : 14
RETURN               : 51 52
RPAREN               : 46 47 48 49 50
SEPARATION           : 49 49
STRUCTURE_BODY       : 46 47 47 48 49 50
TEXT_CHAR            : 30
TEXT_STRING          : 29
TRUE                 : 32
TYPE_BOOLEAN         : 36 41
TYPE_CHAR            : 38 43
TYPE_FLOAT           : 40 45
TYPE_INTEGER         : 39 44
TYPE_STRING          : 37 42
VARIABLE             : 31 35 41 42 43 44 45 50
error                : 

Nonterminals, with rules where they appear

assignment           : 5 36 37 38 39 40
break_statement      : 11
conditional          : 7
declaration          : 6
expression           : 4 14 15 16 17 18 18 19 19 20 20 21 21 22 22 23 23 24 25 25 26 26 35 46 47 48 49 49 49 51
function_declaration : 9
loop                 : 8
program              : 0
return_statement     : 10
statement            : 2 3
statement_list       : 1 2 46 47 47 48 49 50
term                 : 13 14 15 16 17

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . function_declaration END_LINE
    (10) statement -> . return_statement END_LINE
    (11) statement -> . break_statement END_LINE
    (12) statement -> . COMMENT
    (13) expression -> . term
    (14) expression -> . expression PLUS_OP term
    (15) expression -> . expression MINUS_OP term
    (16) expression -> . expression MUL_OP term
    (17) expression -> . expression DIV_OP term
    (18) expression -> . expression LESS_OP expression
    (19) expression -> . expression LESS_EQUAL_OP expression
    (20) expression -> . expression GREATER_OP expression
    (21) expression -> . expression GREATER_EQUAL_OP expression
    (22) expression -> . expression EQUAL_OP expression
    (23) expression -> . expression DIFFERENT_OP expression
    (24) expression -> . LOGICAL_OP_NOT expression
    (25) expression -> . expression LOGICAL_OP_AND expression
    (26) expression -> . expression LOGICAL_OP_OR expression
    (35) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (36) declaration -> . TYPE_BOOLEAN assignment
    (37) declaration -> . TYPE_STRING assignment
    (38) declaration -> . TYPE_CHAR assignment
    (39) declaration -> . TYPE_INTEGER assignment
    (40) declaration -> . TYPE_FLOAT assignment
    (41) declaration -> . TYPE_BOOLEAN VARIABLE
    (42) declaration -> . TYPE_STRING VARIABLE
    (43) declaration -> . TYPE_CHAR VARIABLE
    (44) declaration -> . TYPE_INTEGER VARIABLE
    (45) declaration -> . TYPE_FLOAT VARIABLE
    (46) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (47) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (48) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (49) loop -> . LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (50) function_declaration -> . FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list
    (51) return_statement -> . RETURN expression
    (52) return_statement -> . RETURN
    (53) break_statement -> . BREAK
    (27) term -> . NUMBER_INTEGER
    (28) term -> . NUMBER_FLOAT
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL

    COMMENT         shift and go to state 12
    LOGICAL_OP_NOT  shift and go to state 14
    VARIABLE        shift and go to state 15
    TYPE_BOOLEAN    shift and go to state 16
    TYPE_STRING     shift and go to state 17
    TYPE_CHAR       shift and go to state 18
    TYPE_INTEGER    shift and go to state 19
    TYPE_FLOAT      shift and go to state 20
    CONDITIONAL1    shift and go to state 21
    LOOP1           shift and go to state 22
    LOOP2           shift and go to state 23
    FUNCTION_DECLARATION shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    NUMBER_INTEGER  shift and go to state 27
    NUMBER_FLOAT    shift and go to state 28
    TEXT_STRING     shift and go to state 29
    TEXT_CHAR       shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NULL            shift and go to state 33

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    expression                     shift and go to state 4
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    function_declaration           shift and go to state 9
    return_statement               shift and go to state 10
    break_statement                shift and go to state 11
    term                           shift and go to state 13

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . function_declaration END_LINE
    (10) statement -> . return_statement END_LINE
    (11) statement -> . break_statement END_LINE
    (12) statement -> . COMMENT
    (13) expression -> . term
    (14) expression -> . expression PLUS_OP term
    (15) expression -> . expression MINUS_OP term
    (16) expression -> . expression MUL_OP term
    (17) expression -> . expression DIV_OP term
    (18) expression -> . expression LESS_OP expression
    (19) expression -> . expression LESS_EQUAL_OP expression
    (20) expression -> . expression GREATER_OP expression
    (21) expression -> . expression GREATER_EQUAL_OP expression
    (22) expression -> . expression EQUAL_OP expression
    (23) expression -> . expression DIFFERENT_OP expression
    (24) expression -> . LOGICAL_OP_NOT expression
    (25) expression -> . expression LOGICAL_OP_AND expression
    (26) expression -> . expression LOGICAL_OP_OR expression
    (35) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (36) declaration -> . TYPE_BOOLEAN assignment
    (37) declaration -> . TYPE_STRING assignment
    (38) declaration -> . TYPE_CHAR assignment
    (39) declaration -> . TYPE_INTEGER assignment
    (40) declaration -> . TYPE_FLOAT assignment
    (41) declaration -> . TYPE_BOOLEAN VARIABLE
    (42) declaration -> . TYPE_STRING VARIABLE
    (43) declaration -> . TYPE_CHAR VARIABLE
    (44) declaration -> . TYPE_INTEGER VARIABLE
    (45) declaration -> . TYPE_FLOAT VARIABLE
    (46) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (47) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (48) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (49) loop -> . LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (50) function_declaration -> . FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list
    (51) return_statement -> . RETURN expression
    (52) return_statement -> . RETURN
    (53) break_statement -> . BREAK
    (27) term -> . NUMBER_INTEGER
    (28) term -> . NUMBER_FLOAT
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL

    $end            reduce using rule 1 (program -> statement_list .)
    COMMENT         shift and go to state 12
    LOGICAL_OP_NOT  shift and go to state 14
    VARIABLE        shift and go to state 15
    TYPE_BOOLEAN    shift and go to state 16
    TYPE_STRING     shift and go to state 17
    TYPE_CHAR       shift and go to state 18
    TYPE_INTEGER    shift and go to state 19
    TYPE_FLOAT      shift and go to state 20
    CONDITIONAL1    shift and go to state 21
    LOOP1           shift and go to state 22
    LOOP2           shift and go to state 23
    FUNCTION_DECLARATION shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    NUMBER_INTEGER  shift and go to state 27
    NUMBER_FLOAT    shift and go to state 28
    TEXT_STRING     shift and go to state 29
    TEXT_CHAR       shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NULL            shift and go to state 33

    statement                      shift and go to state 34
    expression                     shift and go to state 4
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    function_declaration           shift and go to state 9
    return_statement               shift and go to state 10
    break_statement                shift and go to state 11
    term                           shift and go to state 13

state 3

    (3) statement_list -> statement .

    COMMENT         reduce using rule 3 (statement_list -> statement .)
    LOGICAL_OP_NOT  reduce using rule 3 (statement_list -> statement .)
    VARIABLE        reduce using rule 3 (statement_list -> statement .)
    TYPE_BOOLEAN    reduce using rule 3 (statement_list -> statement .)
    TYPE_STRING     reduce using rule 3 (statement_list -> statement .)
    TYPE_CHAR       reduce using rule 3 (statement_list -> statement .)
    TYPE_INTEGER    reduce using rule 3 (statement_list -> statement .)
    TYPE_FLOAT      reduce using rule 3 (statement_list -> statement .)
    CONDITIONAL1    reduce using rule 3 (statement_list -> statement .)
    LOOP1           reduce using rule 3 (statement_list -> statement .)
    LOOP2           reduce using rule 3 (statement_list -> statement .)
    FUNCTION_DECLARATION reduce using rule 3 (statement_list -> statement .)
    RETURN          reduce using rule 3 (statement_list -> statement .)
    BREAK           reduce using rule 3 (statement_list -> statement .)
    NUMBER_INTEGER  reduce using rule 3 (statement_list -> statement .)
    NUMBER_FLOAT    reduce using rule 3 (statement_list -> statement .)
    TEXT_STRING     reduce using rule 3 (statement_list -> statement .)
    TEXT_CHAR       reduce using rule 3 (statement_list -> statement .)
    TRUE            reduce using rule 3 (statement_list -> statement .)
    FALSE           reduce using rule 3 (statement_list -> statement .)
    NULL            reduce using rule 3 (statement_list -> statement .)
    $end            reduce using rule 3 (statement_list -> statement .)
    CONDITIONAL2    reduce using rule 3 (statement_list -> statement .)
    END_LINE        reduce using rule 3 (statement_list -> statement .)


state 4

    (4) statement -> expression . END_LINE
    (14) expression -> expression . PLUS_OP term
    (15) expression -> expression . MINUS_OP term
    (16) expression -> expression . MUL_OP term
    (17) expression -> expression . DIV_OP term
    (18) expression -> expression . LESS_OP expression
    (19) expression -> expression . LESS_EQUAL_OP expression
    (20) expression -> expression . GREATER_OP expression
    (21) expression -> expression . GREATER_EQUAL_OP expression
    (22) expression -> expression . EQUAL_OP expression
    (23) expression -> expression . DIFFERENT_OP expression
    (25) expression -> expression . LOGICAL_OP_AND expression
    (26) expression -> expression . LOGICAL_OP_OR expression

    END_LINE        shift and go to state 35
    PLUS_OP         shift and go to state 36
    MINUS_OP        shift and go to state 37
    MUL_OP          shift and go to state 38
    DIV_OP          shift and go to state 39
    LESS_OP         shift and go to state 40
    LESS_EQUAL_OP   shift and go to state 41
    GREATER_OP      shift and go to state 42
    GREATER_EQUAL_OP shift and go to state 43
    EQUAL_OP        shift and go to state 44
    DIFFERENT_OP    shift and go to state 45
    LOGICAL_OP_AND  shift and go to state 46
    LOGICAL_OP_OR   shift and go to state 47


state 5

    (5) statement -> assignment . END_LINE

    END_LINE        shift and go to state 48


state 6

    (6) statement -> declaration . END_LINE

    END_LINE        shift and go to state 49


state 7

    (7) statement -> conditional . END_LINE

    END_LINE        shift and go to state 50


state 8

    (8) statement -> loop . END_LINE

    END_LINE        shift and go to state 51


state 9

    (9) statement -> function_declaration . END_LINE

    END_LINE        shift and go to state 52


state 10

    (10) statement -> return_statement . END_LINE

    END_LINE        shift and go to state 53


state 11

    (11) statement -> break_statement . END_LINE

    END_LINE        shift and go to state 54


state 12

    (12) statement -> COMMENT .

    COMMENT         reduce using rule 12 (statement -> COMMENT .)
    LOGICAL_OP_NOT  reduce using rule 12 (statement -> COMMENT .)
    VARIABLE        reduce using rule 12 (statement -> COMMENT .)
    TYPE_BOOLEAN    reduce using rule 12 (statement -> COMMENT .)
    TYPE_STRING     reduce using rule 12 (statement -> COMMENT .)
    TYPE_CHAR       reduce using rule 12 (statement -> COMMENT .)
    TYPE_INTEGER    reduce using rule 12 (statement -> COMMENT .)
    TYPE_FLOAT      reduce using rule 12 (statement -> COMMENT .)
    CONDITIONAL1    reduce using rule 12 (statement -> COMMENT .)
    LOOP1           reduce using rule 12 (statement -> COMMENT .)
    LOOP2           reduce using rule 12 (statement -> COMMENT .)
    FUNCTION_DECLARATION reduce using rule 12 (statement -> COMMENT .)
    RETURN          reduce using rule 12 (statement -> COMMENT .)
    BREAK           reduce using rule 12 (statement -> COMMENT .)
    NUMBER_INTEGER  reduce using rule 12 (statement -> COMMENT .)
    NUMBER_FLOAT    reduce using rule 12 (statement -> COMMENT .)
    TEXT_STRING     reduce using rule 12 (statement -> COMMENT .)
    TEXT_CHAR       reduce using rule 12 (statement -> COMMENT .)
    TRUE            reduce using rule 12 (statement -> COMMENT .)
    FALSE           reduce using rule 12 (statement -> COMMENT .)
    NULL            reduce using rule 12 (statement -> COMMENT .)
    $end            reduce using rule 12 (statement -> COMMENT .)
    CONDITIONAL2    reduce using rule 12 (statement -> COMMENT .)
    END_LINE        reduce using rule 12 (statement -> COMMENT .)


state 13

    (13) expression -> term .

    END_LINE        reduce using rule 13 (expression -> term .)
    PLUS_OP         reduce using rule 13 (expression -> term .)
    MINUS_OP        reduce using rule 13 (expression -> term .)
    MUL_OP          reduce using rule 13 (expression -> term .)
    DIV_OP          reduce using rule 13 (expression -> term .)
    LESS_OP         reduce using rule 13 (expression -> term .)
    LESS_EQUAL_OP   reduce using rule 13 (expression -> term .)
    GREATER_OP      reduce using rule 13 (expression -> term .)
    GREATER_EQUAL_OP reduce using rule 13 (expression -> term .)
    EQUAL_OP        reduce using rule 13 (expression -> term .)
    DIFFERENT_OP    reduce using rule 13 (expression -> term .)
    LOGICAL_OP_AND  reduce using rule 13 (expression -> term .)
    LOGICAL_OP_OR   reduce using rule 13 (expression -> term .)
    RPAREN          reduce using rule 13 (expression -> term .)
    SEPARATION      reduce using rule 13 (expression -> term .)


state 14

    (24) expression -> LOGICAL_OP_NOT . expression
    (13) expression -> . term
    (14) expression -> . expression PLUS_OP term
    (15) expression -> . expression MINUS_OP term
    (16) expression -> . expression MUL_OP term
    (17) expression -> . expression DIV_OP term
    (18) expression -> . expression LESS_OP expression
    (19) expression -> . expression LESS_EQUAL_OP expression
    (20) expression -> . expression GREATER_OP expression
    (21) expression -> . expression GREATER_EQUAL_OP expression
    (22) expression -> . expression EQUAL_OP expression
    (23) expression -> . expression DIFFERENT_OP expression
    (24) expression -> . LOGICAL_OP_NOT expression
    (25) expression -> . expression LOGICAL_OP_AND expression
    (26) expression -> . expression LOGICAL_OP_OR expression
    (27) term -> . NUMBER_INTEGER
    (28) term -> . NUMBER_FLOAT
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL

    LOGICAL_OP_NOT  shift and go to state 14
    NUMBER_INTEGER  shift and go to state 27
    NUMBER_FLOAT    shift and go to state 28
    TEXT_STRING     shift and go to state 29
    TEXT_CHAR       shift and go to state 30
    VARIABLE        shift and go to state 56
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NULL            shift and go to state 33

    expression                     shift and go to state 55
    term                           shift and go to state 13

state 15

    (35) assignment -> VARIABLE . ASSIGNMENT_OP expression
    (31) term -> VARIABLE .

    ASSIGNMENT_OP   shift and go to state 57
    END_LINE        reduce using rule 31 (term -> VARIABLE .)
    PLUS_OP         reduce using rule 31 (term -> VARIABLE .)
    MINUS_OP        reduce using rule 31 (term -> VARIABLE .)
    MUL_OP          reduce using rule 31 (term -> VARIABLE .)
    DIV_OP          reduce using rule 31 (term -> VARIABLE .)
    LESS_OP         reduce using rule 31 (term -> VARIABLE .)
    LESS_EQUAL_OP   reduce using rule 31 (term -> VARIABLE .)
    GREATER_OP      reduce using rule 31 (term -> VARIABLE .)
    GREATER_EQUAL_OP reduce using rule 31 (term -> VARIABLE .)
    EQUAL_OP        reduce using rule 31 (term -> VARIABLE .)
    DIFFERENT_OP    reduce using rule 31 (term -> VARIABLE .)
    LOGICAL_OP_AND  reduce using rule 31 (term -> VARIABLE .)
    LOGICAL_OP_OR   reduce using rule 31 (term -> VARIABLE .)


state 16

    (36) declaration -> TYPE_BOOLEAN . assignment
    (41) declaration -> TYPE_BOOLEAN . VARIABLE
    (35) assignment -> . VARIABLE ASSIGNMENT_OP expression

    VARIABLE        shift and go to state 59

    assignment                     shift and go to state 58

state 17

    (37) declaration -> TYPE_STRING . assignment
    (42) declaration -> TYPE_STRING . VARIABLE
    (35) assignment -> . VARIABLE ASSIGNMENT_OP expression

    VARIABLE        shift and go to state 61

    assignment                     shift and go to state 60

state 18

    (38) declaration -> TYPE_CHAR . assignment
    (43) declaration -> TYPE_CHAR . VARIABLE
    (35) assignment -> . VARIABLE ASSIGNMENT_OP expression

    VARIABLE        shift and go to state 63

    assignment                     shift and go to state 62

state 19

    (39) declaration -> TYPE_INTEGER . assignment
    (44) declaration -> TYPE_INTEGER . VARIABLE
    (35) assignment -> . VARIABLE ASSIGNMENT_OP expression

    VARIABLE        shift and go to state 65

    assignment                     shift and go to state 64

state 20

    (40) declaration -> TYPE_FLOAT . assignment
    (45) declaration -> TYPE_FLOAT . VARIABLE
    (35) assignment -> . VARIABLE ASSIGNMENT_OP expression

    VARIABLE        shift and go to state 67

    assignment                     shift and go to state 66

state 21

    (46) conditional -> CONDITIONAL1 . LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (47) conditional -> CONDITIONAL1 . LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list

    LPAREN          shift and go to state 68


state 22

    (48) loop -> LOOP1 . LPAREN expression RPAREN STRUCTURE_BODY statement_list

    LPAREN          shift and go to state 69


state 23

    (49) loop -> LOOP2 . LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list

    LPAREN          shift and go to state 70


state 24

    (50) function_declaration -> FUNCTION_DECLARATION . VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list

    VARIABLE        shift and go to state 71


state 25

    (51) return_statement -> RETURN . expression
    (52) return_statement -> RETURN .
    (13) expression -> . term
    (14) expression -> . expression PLUS_OP term
    (15) expression -> . expression MINUS_OP term
    (16) expression -> . expression MUL_OP term
    (17) expression -> . expression DIV_OP term
    (18) expression -> . expression LESS_OP expression
    (19) expression -> . expression LESS_EQUAL_OP expression
    (20) expression -> . expression GREATER_OP expression
    (21) expression -> . expression GREATER_EQUAL_OP expression
    (22) expression -> . expression EQUAL_OP expression
    (23) expression -> . expression DIFFERENT_OP expression
    (24) expression -> . LOGICAL_OP_NOT expression
    (25) expression -> . expression LOGICAL_OP_AND expression
    (26) expression -> . expression LOGICAL_OP_OR expression
    (27) term -> . NUMBER_INTEGER
    (28) term -> . NUMBER_FLOAT
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL

    END_LINE        reduce using rule 52 (return_statement -> RETURN .)
    LOGICAL_OP_NOT  shift and go to state 14
    NUMBER_INTEGER  shift and go to state 27
    NUMBER_FLOAT    shift and go to state 28
    TEXT_STRING     shift and go to state 29
    TEXT_CHAR       shift and go to state 30
    VARIABLE        shift and go to state 56
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NULL            shift and go to state 33

    expression                     shift and go to state 72
    term                           shift and go to state 13

state 26

    (53) break_statement -> BREAK .

    END_LINE        reduce using rule 53 (break_statement -> BREAK .)


state 27

    (27) term -> NUMBER_INTEGER .

    END_LINE        reduce using rule 27 (term -> NUMBER_INTEGER .)
    PLUS_OP         reduce using rule 27 (term -> NUMBER_INTEGER .)
    MINUS_OP        reduce using rule 27 (term -> NUMBER_INTEGER .)
    MUL_OP          reduce using rule 27 (term -> NUMBER_INTEGER .)
    DIV_OP          reduce using rule 27 (term -> NUMBER_INTEGER .)
    LESS_OP         reduce using rule 27 (term -> NUMBER_INTEGER .)
    LESS_EQUAL_OP   reduce using rule 27 (term -> NUMBER_INTEGER .)
    GREATER_OP      reduce using rule 27 (term -> NUMBER_INTEGER .)
    GREATER_EQUAL_OP reduce using rule 27 (term -> NUMBER_INTEGER .)
    EQUAL_OP        reduce using rule 27 (term -> NUMBER_INTEGER .)
    DIFFERENT_OP    reduce using rule 27 (term -> NUMBER_INTEGER .)
    LOGICAL_OP_AND  reduce using rule 27 (term -> NUMBER_INTEGER .)
    LOGICAL_OP_OR   reduce using rule 27 (term -> NUMBER_INTEGER .)
    RPAREN          reduce using rule 27 (term -> NUMBER_INTEGER .)
    SEPARATION      reduce using rule 27 (term -> NUMBER_INTEGER .)


state 28

    (28) term -> NUMBER_FLOAT .

    END_LINE        reduce using rule 28 (term -> NUMBER_FLOAT .)
    PLUS_OP         reduce using rule 28 (term -> NUMBER_FLOAT .)
    MINUS_OP        reduce using rule 28 (term -> NUMBER_FLOAT .)
    MUL_OP          reduce using rule 28 (term -> NUMBER_FLOAT .)
    DIV_OP          reduce using rule 28 (term -> NUMBER_FLOAT .)
    LESS_OP         reduce using rule 28 (term -> NUMBER_FLOAT .)
    LESS_EQUAL_OP   reduce using rule 28 (term -> NUMBER_FLOAT .)
    GREATER_OP      reduce using rule 28 (term -> NUMBER_FLOAT .)
    GREATER_EQUAL_OP reduce using rule 28 (term -> NUMBER_FLOAT .)
    EQUAL_OP        reduce using rule 28 (term -> NUMBER_FLOAT .)
    DIFFERENT_OP    reduce using rule 28 (term -> NUMBER_FLOAT .)
    LOGICAL_OP_AND  reduce using rule 28 (term -> NUMBER_FLOAT .)
    LOGICAL_OP_OR   reduce using rule 28 (term -> NUMBER_FLOAT .)
    RPAREN          reduce using rule 28 (term -> NUMBER_FLOAT .)
    SEPARATION      reduce using rule 28 (term -> NUMBER_FLOAT .)


state 29

    (29) term -> TEXT_STRING .

    END_LINE        reduce using rule 29 (term -> TEXT_STRING .)
    PLUS_OP         reduce using rule 29 (term -> TEXT_STRING .)
    MINUS_OP        reduce using rule 29 (term -> TEXT_STRING .)
    MUL_OP          reduce using rule 29 (term -> TEXT_STRING .)
    DIV_OP          reduce using rule 29 (term -> TEXT_STRING .)
    LESS_OP         reduce using rule 29 (term -> TEXT_STRING .)
    LESS_EQUAL_OP   reduce using rule 29 (term -> TEXT_STRING .)
    GREATER_OP      reduce using rule 29 (term -> TEXT_STRING .)
    GREATER_EQUAL_OP reduce using rule 29 (term -> TEXT_STRING .)
    EQUAL_OP        reduce using rule 29 (term -> TEXT_STRING .)
    DIFFERENT_OP    reduce using rule 29 (term -> TEXT_STRING .)
    LOGICAL_OP_AND  reduce using rule 29 (term -> TEXT_STRING .)
    LOGICAL_OP_OR   reduce using rule 29 (term -> TEXT_STRING .)
    RPAREN          reduce using rule 29 (term -> TEXT_STRING .)
    SEPARATION      reduce using rule 29 (term -> TEXT_STRING .)


state 30

    (30) term -> TEXT_CHAR .

    END_LINE        reduce using rule 30 (term -> TEXT_CHAR .)
    PLUS_OP         reduce using rule 30 (term -> TEXT_CHAR .)
    MINUS_OP        reduce using rule 30 (term -> TEXT_CHAR .)
    MUL_OP          reduce using rule 30 (term -> TEXT_CHAR .)
    DIV_OP          reduce using rule 30 (term -> TEXT_CHAR .)
    LESS_OP         reduce using rule 30 (term -> TEXT_CHAR .)
    LESS_EQUAL_OP   reduce using rule 30 (term -> TEXT_CHAR .)
    GREATER_OP      reduce using rule 30 (term -> TEXT_CHAR .)
    GREATER_EQUAL_OP reduce using rule 30 (term -> TEXT_CHAR .)
    EQUAL_OP        reduce using rule 30 (term -> TEXT_CHAR .)
    DIFFERENT_OP    reduce using rule 30 (term -> TEXT_CHAR .)
    LOGICAL_OP_AND  reduce using rule 30 (term -> TEXT_CHAR .)
    LOGICAL_OP_OR   reduce using rule 30 (term -> TEXT_CHAR .)
    RPAREN          reduce using rule 30 (term -> TEXT_CHAR .)
    SEPARATION      reduce using rule 30 (term -> TEXT_CHAR .)


state 31

    (32) term -> TRUE .

    END_LINE        reduce using rule 32 (term -> TRUE .)
    PLUS_OP         reduce using rule 32 (term -> TRUE .)
    MINUS_OP        reduce using rule 32 (term -> TRUE .)
    MUL_OP          reduce using rule 32 (term -> TRUE .)
    DIV_OP          reduce using rule 32 (term -> TRUE .)
    LESS_OP         reduce using rule 32 (term -> TRUE .)
    LESS_EQUAL_OP   reduce using rule 32 (term -> TRUE .)
    GREATER_OP      reduce using rule 32 (term -> TRUE .)
    GREATER_EQUAL_OP reduce using rule 32 (term -> TRUE .)
    EQUAL_OP        reduce using rule 32 (term -> TRUE .)
    DIFFERENT_OP    reduce using rule 32 (term -> TRUE .)
    LOGICAL_OP_AND  reduce using rule 32 (term -> TRUE .)
    LOGICAL_OP_OR   reduce using rule 32 (term -> TRUE .)
    RPAREN          reduce using rule 32 (term -> TRUE .)
    SEPARATION      reduce using rule 32 (term -> TRUE .)


state 32

    (33) term -> FALSE .

    END_LINE        reduce using rule 33 (term -> FALSE .)
    PLUS_OP         reduce using rule 33 (term -> FALSE .)
    MINUS_OP        reduce using rule 33 (term -> FALSE .)
    MUL_OP          reduce using rule 33 (term -> FALSE .)
    DIV_OP          reduce using rule 33 (term -> FALSE .)
    LESS_OP         reduce using rule 33 (term -> FALSE .)
    LESS_EQUAL_OP   reduce using rule 33 (term -> FALSE .)
    GREATER_OP      reduce using rule 33 (term -> FALSE .)
    GREATER_EQUAL_OP reduce using rule 33 (term -> FALSE .)
    EQUAL_OP        reduce using rule 33 (term -> FALSE .)
    DIFFERENT_OP    reduce using rule 33 (term -> FALSE .)
    LOGICAL_OP_AND  reduce using rule 33 (term -> FALSE .)
    LOGICAL_OP_OR   reduce using rule 33 (term -> FALSE .)
    RPAREN          reduce using rule 33 (term -> FALSE .)
    SEPARATION      reduce using rule 33 (term -> FALSE .)


state 33

    (34) term -> NULL .

    END_LINE        reduce using rule 34 (term -> NULL .)
    PLUS_OP         reduce using rule 34 (term -> NULL .)
    MINUS_OP        reduce using rule 34 (term -> NULL .)
    MUL_OP          reduce using rule 34 (term -> NULL .)
    DIV_OP          reduce using rule 34 (term -> NULL .)
    LESS_OP         reduce using rule 34 (term -> NULL .)
    LESS_EQUAL_OP   reduce using rule 34 (term -> NULL .)
    GREATER_OP      reduce using rule 34 (term -> NULL .)
    GREATER_EQUAL_OP reduce using rule 34 (term -> NULL .)
    EQUAL_OP        reduce using rule 34 (term -> NULL .)
    DIFFERENT_OP    reduce using rule 34 (term -> NULL .)
    LOGICAL_OP_AND  reduce using rule 34 (term -> NULL .)
    LOGICAL_OP_OR   reduce using rule 34 (term -> NULL .)
    RPAREN          reduce using rule 34 (term -> NULL .)
    SEPARATION      reduce using rule 34 (term -> NULL .)


state 34

    (2) statement_list -> statement_list statement .

    COMMENT         reduce using rule 2 (statement_list -> statement_list statement .)
    LOGICAL_OP_NOT  reduce using rule 2 (statement_list -> statement_list statement .)
    VARIABLE        reduce using rule 2 (statement_list -> statement_list statement .)
    TYPE_BOOLEAN    reduce using rule 2 (statement_list -> statement_list statement .)
    TYPE_STRING     reduce using rule 2 (statement_list -> statement_list statement .)
    TYPE_CHAR       reduce using rule 2 (statement_list -> statement_list statement .)
    TYPE_INTEGER    reduce using rule 2 (statement_list -> statement_list statement .)
    TYPE_FLOAT      reduce using rule 2 (statement_list -> statement_list statement .)
    CONDITIONAL1    reduce using rule 2 (statement_list -> statement_list statement .)
    LOOP1           reduce using rule 2 (statement_list -> statement_list statement .)
    LOOP2           reduce using rule 2 (statement_list -> statement_list statement .)
    FUNCTION_DECLARATION reduce using rule 2 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 2 (statement_list -> statement_list statement .)
    BREAK           reduce using rule 2 (statement_list -> statement_list statement .)
    NUMBER_INTEGER  reduce using rule 2 (statement_list -> statement_list statement .)
    NUMBER_FLOAT    reduce using rule 2 (statement_list -> statement_list statement .)
    TEXT_STRING     reduce using rule 2 (statement_list -> statement_list statement .)
    TEXT_CHAR       reduce using rule 2 (statement_list -> statement_list statement .)
    TRUE            reduce using rule 2 (statement_list -> statement_list statement .)
    FALSE           reduce using rule 2 (statement_list -> statement_list statement .)
    NULL            reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)
    CONDITIONAL2    reduce using rule 2 (statement_list -> statement_list statement .)
    END_LINE        reduce using rule 2 (statement_list -> statement_list statement .)


state 35

    (4) statement -> expression END_LINE .

    COMMENT         reduce using rule 4 (statement -> expression END_LINE .)
    LOGICAL_OP_NOT  reduce using rule 4 (statement -> expression END_LINE .)
    VARIABLE        reduce using rule 4 (statement -> expression END_LINE .)
    TYPE_BOOLEAN    reduce using rule 4 (statement -> expression END_LINE .)
    TYPE_STRING     reduce using rule 4 (statement -> expression END_LINE .)
    TYPE_CHAR       reduce using rule 4 (statement -> expression END_LINE .)
    TYPE_INTEGER    reduce using rule 4 (statement -> expression END_LINE .)
    TYPE_FLOAT      reduce using rule 4 (statement -> expression END_LINE .)
    CONDITIONAL1    reduce using rule 4 (statement -> expression END_LINE .)
    LOOP1           reduce using rule 4 (statement -> expression END_LINE .)
    LOOP2           reduce using rule 4 (statement -> expression END_LINE .)
    FUNCTION_DECLARATION reduce using rule 4 (statement -> expression END_LINE .)
    RETURN          reduce using rule 4 (statement -> expression END_LINE .)
    BREAK           reduce using rule 4 (statement -> expression END_LINE .)
    NUMBER_INTEGER  reduce using rule 4 (statement -> expression END_LINE .)
    NUMBER_FLOAT    reduce using rule 4 (statement -> expression END_LINE .)
    TEXT_STRING     reduce using rule 4 (statement -> expression END_LINE .)
    TEXT_CHAR       reduce using rule 4 (statement -> expression END_LINE .)
    TRUE            reduce using rule 4 (statement -> expression END_LINE .)
    FALSE           reduce using rule 4 (statement -> expression END_LINE .)
    NULL            reduce using rule 4 (statement -> expression END_LINE .)
    $end            reduce using rule 4 (statement -> expression END_LINE .)
    CONDITIONAL2    reduce using rule 4 (statement -> expression END_LINE .)
    END_LINE        reduce using rule 4 (statement -> expression END_LINE .)


state 36

    (14) expression -> expression PLUS_OP . term
    (27) term -> . NUMBER_INTEGER
    (28) term -> . NUMBER_FLOAT
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL

    NUMBER_INTEGER  shift and go to state 27
    NUMBER_FLOAT    shift and go to state 28
    TEXT_STRING     shift and go to state 29
    TEXT_CHAR       shift and go to state 30
    VARIABLE        shift and go to state 56
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NULL            shift and go to state 33

    term                           shift and go to state 73

state 37

    (15) expression -> expression MINUS_OP . term
    (27) term -> . NUMBER_INTEGER
    (28) term -> . NUMBER_FLOAT
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL

    NUMBER_INTEGER  shift and go to state 27
    NUMBER_FLOAT    shift and go to state 28
    TEXT_STRING     shift and go to state 29
    TEXT_CHAR       shift and go to state 30
    VARIABLE        shift and go to state 56
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NULL            shift and go to state 33

    term                           shift and go to state 74

state 38

    (16) expression -> expression MUL_OP . term
    (27) term -> . NUMBER_INTEGER
    (28) term -> . NUMBER_FLOAT
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL

    NUMBER_INTEGER  shift and go to state 27
    NUMBER_FLOAT    shift and go to state 28
    TEXT_STRING     shift and go to state 29
    TEXT_CHAR       shift and go to state 30
    VARIABLE        shift and go to state 56
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NULL            shift and go to state 33

    term                           shift and go to state 75

state 39

    (17) expression -> expression DIV_OP . term
    (27) term -> . NUMBER_INTEGER
    (28) term -> . NUMBER_FLOAT
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL

    NUMBER_INTEGER  shift and go to state 27
    NUMBER_FLOAT    shift and go to state 28
    TEXT_STRING     shift and go to state 29
    TEXT_CHAR       shift and go to state 30
    VARIABLE        shift and go to state 56
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NULL            shift and go to state 33

    term                           shift and go to state 76

state 40

    (18) expression -> expression LESS_OP . expression
    (13) expression -> . term
    (14) expression -> . expression PLUS_OP term
    (15) expression -> . expression MINUS_OP term
    (16) expression -> . expression MUL_OP term
    (17) expression -> . expression DIV_OP term
    (18) expression -> . expression LESS_OP expression
    (19) expression -> . expression LESS_EQUAL_OP expression
    (20) expression -> . expression GREATER_OP expression
    (21) expression -> . expression GREATER_EQUAL_OP expression
    (22) expression -> . expression EQUAL_OP expression
    (23) expression -> . expression DIFFERENT_OP expression
    (24) expression -> . LOGICAL_OP_NOT expression
    (25) expression -> . expression LOGICAL_OP_AND expression
    (26) expression -> . expression LOGICAL_OP_OR expression
    (27) term -> . NUMBER_INTEGER
    (28) term -> . NUMBER_FLOAT
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL

    LOGICAL_OP_NOT  shift and go to state 14
    NUMBER_INTEGER  shift and go to state 27
    NUMBER_FLOAT    shift and go to state 28
    TEXT_STRING     shift and go to state 29
    TEXT_CHAR       shift and go to state 30
    VARIABLE        shift and go to state 56
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NULL            shift and go to state 33

    expression                     shift and go to state 77
    term                           shift and go to state 13

state 41

    (19) expression -> expression LESS_EQUAL_OP . expression
    (13) expression -> . term
    (14) expression -> . expression PLUS_OP term
    (15) expression -> . expression MINUS_OP term
    (16) expression -> . expression MUL_OP term
    (17) expression -> . expression DIV_OP term
    (18) expression -> . expression LESS_OP expression
    (19) expression -> . expression LESS_EQUAL_OP expression
    (20) expression -> . expression GREATER_OP expression
    (21) expression -> . expression GREATER_EQUAL_OP expression
    (22) expression -> . expression EQUAL_OP expression
    (23) expression -> . expression DIFFERENT_OP expression
    (24) expression -> . LOGICAL_OP_NOT expression
    (25) expression -> . expression LOGICAL_OP_AND expression
    (26) expression -> . expression LOGICAL_OP_OR expression
    (27) term -> . NUMBER_INTEGER
    (28) term -> . NUMBER_FLOAT
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL

    LOGICAL_OP_NOT  shift and go to state 14
    NUMBER_INTEGER  shift and go to state 27
    NUMBER_FLOAT    shift and go to state 28
    TEXT_STRING     shift and go to state 29
    TEXT_CHAR       shift and go to state 30
    VARIABLE        shift and go to state 56
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NULL            shift and go to state 33

    expression                     shift and go to state 78
    term                           shift and go to state 13

state 42

    (20) expression -> expression GREATER_OP . expression
    (13) expression -> . term
    (14) expression -> . expression PLUS_OP term
    (15) expression -> . expression MINUS_OP term
    (16) expression -> . expression MUL_OP term
    (17) expression -> . expression DIV_OP term
    (18) expression -> . expression LESS_OP expression
    (19) expression -> . expression LESS_EQUAL_OP expression
    (20) expression -> . expression GREATER_OP expression
    (21) expression -> . expression GREATER_EQUAL_OP expression
    (22) expression -> . expression EQUAL_OP expression
    (23) expression -> . expression DIFFERENT_OP expression
    (24) expression -> . LOGICAL_OP_NOT expression
    (25) expression -> . expression LOGICAL_OP_AND expression
    (26) expression -> . expression LOGICAL_OP_OR expression
    (27) term -> . NUMBER_INTEGER
    (28) term -> . NUMBER_FLOAT
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL

    LOGICAL_OP_NOT  shift and go to state 14
    NUMBER_INTEGER  shift and go to state 27
    NUMBER_FLOAT    shift and go to state 28
    TEXT_STRING     shift and go to state 29
    TEXT_CHAR       shift and go to state 30
    VARIABLE        shift and go to state 56
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NULL            shift and go to state 33

    expression                     shift and go to state 79
    term                           shift and go to state 13

state 43

    (21) expression -> expression GREATER_EQUAL_OP . expression
    (13) expression -> . term
    (14) expression -> . expression PLUS_OP term
    (15) expression -> . expression MINUS_OP term
    (16) expression -> . expression MUL_OP term
    (17) expression -> . expression DIV_OP term
    (18) expression -> . expression LESS_OP expression
    (19) expression -> . expression LESS_EQUAL_OP expression
    (20) expression -> . expression GREATER_OP expression
    (21) expression -> . expression GREATER_EQUAL_OP expression
    (22) expression -> . expression EQUAL_OP expression
    (23) expression -> . expression DIFFERENT_OP expression
    (24) expression -> . LOGICAL_OP_NOT expression
    (25) expression -> . expression LOGICAL_OP_AND expression
    (26) expression -> . expression LOGICAL_OP_OR expression
    (27) term -> . NUMBER_INTEGER
    (28) term -> . NUMBER_FLOAT
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL

    LOGICAL_OP_NOT  shift and go to state 14
    NUMBER_INTEGER  shift and go to state 27
    NUMBER_FLOAT    shift and go to state 28
    TEXT_STRING     shift and go to state 29
    TEXT_CHAR       shift and go to state 30
    VARIABLE        shift and go to state 56
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NULL            shift and go to state 33

    expression                     shift and go to state 80
    term                           shift and go to state 13

state 44

    (22) expression -> expression EQUAL_OP . expression
    (13) expression -> . term
    (14) expression -> . expression PLUS_OP term
    (15) expression -> . expression MINUS_OP term
    (16) expression -> . expression MUL_OP term
    (17) expression -> . expression DIV_OP term
    (18) expression -> . expression LESS_OP expression
    (19) expression -> . expression LESS_EQUAL_OP expression
    (20) expression -> . expression GREATER_OP expression
    (21) expression -> . expression GREATER_EQUAL_OP expression
    (22) expression -> . expression EQUAL_OP expression
    (23) expression -> . expression DIFFERENT_OP expression
    (24) expression -> . LOGICAL_OP_NOT expression
    (25) expression -> . expression LOGICAL_OP_AND expression
    (26) expression -> . expression LOGICAL_OP_OR expression
    (27) term -> . NUMBER_INTEGER
    (28) term -> . NUMBER_FLOAT
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL

    LOGICAL_OP_NOT  shift and go to state 14
    NUMBER_INTEGER  shift and go to state 27
    NUMBER_FLOAT    shift and go to state 28
    TEXT_STRING     shift and go to state 29
    TEXT_CHAR       shift and go to state 30
    VARIABLE        shift and go to state 56
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NULL            shift and go to state 33

    expression                     shift and go to state 81
    term                           shift and go to state 13

state 45

    (23) expression -> expression DIFFERENT_OP . expression
    (13) expression -> . term
    (14) expression -> . expression PLUS_OP term
    (15) expression -> . expression MINUS_OP term
    (16) expression -> . expression MUL_OP term
    (17) expression -> . expression DIV_OP term
    (18) expression -> . expression LESS_OP expression
    (19) expression -> . expression LESS_EQUAL_OP expression
    (20) expression -> . expression GREATER_OP expression
    (21) expression -> . expression GREATER_EQUAL_OP expression
    (22) expression -> . expression EQUAL_OP expression
    (23) expression -> . expression DIFFERENT_OP expression
    (24) expression -> . LOGICAL_OP_NOT expression
    (25) expression -> . expression LOGICAL_OP_AND expression
    (26) expression -> . expression LOGICAL_OP_OR expression
    (27) term -> . NUMBER_INTEGER
    (28) term -> . NUMBER_FLOAT
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL

    LOGICAL_OP_NOT  shift and go to state 14
    NUMBER_INTEGER  shift and go to state 27
    NUMBER_FLOAT    shift and go to state 28
    TEXT_STRING     shift and go to state 29
    TEXT_CHAR       shift and go to state 30
    VARIABLE        shift and go to state 56
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NULL            shift and go to state 33

    expression                     shift and go to state 82
    term                           shift and go to state 13

state 46

    (25) expression -> expression LOGICAL_OP_AND . expression
    (13) expression -> . term
    (14) expression -> . expression PLUS_OP term
    (15) expression -> . expression MINUS_OP term
    (16) expression -> . expression MUL_OP term
    (17) expression -> . expression DIV_OP term
    (18) expression -> . expression LESS_OP expression
    (19) expression -> . expression LESS_EQUAL_OP expression
    (20) expression -> . expression GREATER_OP expression
    (21) expression -> . expression GREATER_EQUAL_OP expression
    (22) expression -> . expression EQUAL_OP expression
    (23) expression -> . expression DIFFERENT_OP expression
    (24) expression -> . LOGICAL_OP_NOT expression
    (25) expression -> . expression LOGICAL_OP_AND expression
    (26) expression -> . expression LOGICAL_OP_OR expression
    (27) term -> . NUMBER_INTEGER
    (28) term -> . NUMBER_FLOAT
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL

    LOGICAL_OP_NOT  shift and go to state 14
    NUMBER_INTEGER  shift and go to state 27
    NUMBER_FLOAT    shift and go to state 28
    TEXT_STRING     shift and go to state 29
    TEXT_CHAR       shift and go to state 30
    VARIABLE        shift and go to state 56
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NULL            shift and go to state 33

    expression                     shift and go to state 83
    term                           shift and go to state 13

state 47

    (26) expression -> expression LOGICAL_OP_OR . expression
    (13) expression -> . term
    (14) expression -> . expression PLUS_OP term
    (15) expression -> . expression MINUS_OP term
    (16) expression -> . expression MUL_OP term
    (17) expression -> . expression DIV_OP term
    (18) expression -> . expression LESS_OP expression
    (19) expression -> . expression LESS_EQUAL_OP expression
    (20) expression -> . expression GREATER_OP expression
    (21) expression -> . expression GREATER_EQUAL_OP expression
    (22) expression -> . expression EQUAL_OP expression
    (23) expression -> . expression DIFFERENT_OP expression
    (24) expression -> . LOGICAL_OP_NOT expression
    (25) expression -> . expression LOGICAL_OP_AND expression
    (26) expression -> . expression LOGICAL_OP_OR expression
    (27) term -> . NUMBER_INTEGER
    (28) term -> . NUMBER_FLOAT
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL

    LOGICAL_OP_NOT  shift and go to state 14
    NUMBER_INTEGER  shift and go to state 27
    NUMBER_FLOAT    shift and go to state 28
    TEXT_STRING     shift and go to state 29
    TEXT_CHAR       shift and go to state 30
    VARIABLE        shift and go to state 56
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NULL            shift and go to state 33

    expression                     shift and go to state 84
    term                           shift and go to state 13

state 48

    (5) statement -> assignment END_LINE .

    COMMENT         reduce using rule 5 (statement -> assignment END_LINE .)
    LOGICAL_OP_NOT  reduce using rule 5 (statement -> assignment END_LINE .)
    VARIABLE        reduce using rule 5 (statement -> assignment END_LINE .)
    TYPE_BOOLEAN    reduce using rule 5 (statement -> assignment END_LINE .)
    TYPE_STRING     reduce using rule 5 (statement -> assignment END_LINE .)
    TYPE_CHAR       reduce using rule 5 (statement -> assignment END_LINE .)
    TYPE_INTEGER    reduce using rule 5 (statement -> assignment END_LINE .)
    TYPE_FLOAT      reduce using rule 5 (statement -> assignment END_LINE .)
    CONDITIONAL1    reduce using rule 5 (statement -> assignment END_LINE .)
    LOOP1           reduce using rule 5 (statement -> assignment END_LINE .)
    LOOP2           reduce using rule 5 (statement -> assignment END_LINE .)
    FUNCTION_DECLARATION reduce using rule 5 (statement -> assignment END_LINE .)
    RETURN          reduce using rule 5 (statement -> assignment END_LINE .)
    BREAK           reduce using rule 5 (statement -> assignment END_LINE .)
    NUMBER_INTEGER  reduce using rule 5 (statement -> assignment END_LINE .)
    NUMBER_FLOAT    reduce using rule 5 (statement -> assignment END_LINE .)
    TEXT_STRING     reduce using rule 5 (statement -> assignment END_LINE .)
    TEXT_CHAR       reduce using rule 5 (statement -> assignment END_LINE .)
    TRUE            reduce using rule 5 (statement -> assignment END_LINE .)
    FALSE           reduce using rule 5 (statement -> assignment END_LINE .)
    NULL            reduce using rule 5 (statement -> assignment END_LINE .)
    $end            reduce using rule 5 (statement -> assignment END_LINE .)
    CONDITIONAL2    reduce using rule 5 (statement -> assignment END_LINE .)
    END_LINE        reduce using rule 5 (statement -> assignment END_LINE .)


state 49

    (6) statement -> declaration END_LINE .

    COMMENT         reduce using rule 6 (statement -> declaration END_LINE .)
    LOGICAL_OP_NOT  reduce using rule 6 (statement -> declaration END_LINE .)
    VARIABLE        reduce using rule 6 (statement -> declaration END_LINE .)
    TYPE_BOOLEAN    reduce using rule 6 (statement -> declaration END_LINE .)
    TYPE_STRING     reduce using rule 6 (statement -> declaration END_LINE .)
    TYPE_CHAR       reduce using rule 6 (statement -> declaration END_LINE .)
    TYPE_INTEGER    reduce using rule 6 (statement -> declaration END_LINE .)
    TYPE_FLOAT      reduce using rule 6 (statement -> declaration END_LINE .)
    CONDITIONAL1    reduce using rule 6 (statement -> declaration END_LINE .)
    LOOP1           reduce using rule 6 (statement -> declaration END_LINE .)
    LOOP2           reduce using rule 6 (statement -> declaration END_LINE .)
    FUNCTION_DECLARATION reduce using rule 6 (statement -> declaration END_LINE .)
    RETURN          reduce using rule 6 (statement -> declaration END_LINE .)
    BREAK           reduce using rule 6 (statement -> declaration END_LINE .)
    NUMBER_INTEGER  reduce using rule 6 (statement -> declaration END_LINE .)
    NUMBER_FLOAT    reduce using rule 6 (statement -> declaration END_LINE .)
    TEXT_STRING     reduce using rule 6 (statement -> declaration END_LINE .)
    TEXT_CHAR       reduce using rule 6 (statement -> declaration END_LINE .)
    TRUE            reduce using rule 6 (statement -> declaration END_LINE .)
    FALSE           reduce using rule 6 (statement -> declaration END_LINE .)
    NULL            reduce using rule 6 (statement -> declaration END_LINE .)
    $end            reduce using rule 6 (statement -> declaration END_LINE .)
    CONDITIONAL2    reduce using rule 6 (statement -> declaration END_LINE .)
    END_LINE        reduce using rule 6 (statement -> declaration END_LINE .)


state 50

    (7) statement -> conditional END_LINE .

    COMMENT         reduce using rule 7 (statement -> conditional END_LINE .)
    LOGICAL_OP_NOT  reduce using rule 7 (statement -> conditional END_LINE .)
    VARIABLE        reduce using rule 7 (statement -> conditional END_LINE .)
    TYPE_BOOLEAN    reduce using rule 7 (statement -> conditional END_LINE .)
    TYPE_STRING     reduce using rule 7 (statement -> conditional END_LINE .)
    TYPE_CHAR       reduce using rule 7 (statement -> conditional END_LINE .)
    TYPE_INTEGER    reduce using rule 7 (statement -> conditional END_LINE .)
    TYPE_FLOAT      reduce using rule 7 (statement -> conditional END_LINE .)
    CONDITIONAL1    reduce using rule 7 (statement -> conditional END_LINE .)
    LOOP1           reduce using rule 7 (statement -> conditional END_LINE .)
    LOOP2           reduce using rule 7 (statement -> conditional END_LINE .)
    FUNCTION_DECLARATION reduce using rule 7 (statement -> conditional END_LINE .)
    RETURN          reduce using rule 7 (statement -> conditional END_LINE .)
    BREAK           reduce using rule 7 (statement -> conditional END_LINE .)
    NUMBER_INTEGER  reduce using rule 7 (statement -> conditional END_LINE .)
    NUMBER_FLOAT    reduce using rule 7 (statement -> conditional END_LINE .)
    TEXT_STRING     reduce using rule 7 (statement -> conditional END_LINE .)
    TEXT_CHAR       reduce using rule 7 (statement -> conditional END_LINE .)
    TRUE            reduce using rule 7 (statement -> conditional END_LINE .)
    FALSE           reduce using rule 7 (statement -> conditional END_LINE .)
    NULL            reduce using rule 7 (statement -> conditional END_LINE .)
    $end            reduce using rule 7 (statement -> conditional END_LINE .)
    CONDITIONAL2    reduce using rule 7 (statement -> conditional END_LINE .)
    END_LINE        reduce using rule 7 (statement -> conditional END_LINE .)


state 51

    (8) statement -> loop END_LINE .

    COMMENT         reduce using rule 8 (statement -> loop END_LINE .)
    LOGICAL_OP_NOT  reduce using rule 8 (statement -> loop END_LINE .)
    VARIABLE        reduce using rule 8 (statement -> loop END_LINE .)
    TYPE_BOOLEAN    reduce using rule 8 (statement -> loop END_LINE .)
    TYPE_STRING     reduce using rule 8 (statement -> loop END_LINE .)
    TYPE_CHAR       reduce using rule 8 (statement -> loop END_LINE .)
    TYPE_INTEGER    reduce using rule 8 (statement -> loop END_LINE .)
    TYPE_FLOAT      reduce using rule 8 (statement -> loop END_LINE .)
    CONDITIONAL1    reduce using rule 8 (statement -> loop END_LINE .)
    LOOP1           reduce using rule 8 (statement -> loop END_LINE .)
    LOOP2           reduce using rule 8 (statement -> loop END_LINE .)
    FUNCTION_DECLARATION reduce using rule 8 (statement -> loop END_LINE .)
    RETURN          reduce using rule 8 (statement -> loop END_LINE .)
    BREAK           reduce using rule 8 (statement -> loop END_LINE .)
    NUMBER_INTEGER  reduce using rule 8 (statement -> loop END_LINE .)
    NUMBER_FLOAT    reduce using rule 8 (statement -> loop END_LINE .)
    TEXT_STRING     reduce using rule 8 (statement -> loop END_LINE .)
    TEXT_CHAR       reduce using rule 8 (statement -> loop END_LINE .)
    TRUE            reduce using rule 8 (statement -> loop END_LINE .)
    FALSE           reduce using rule 8 (statement -> loop END_LINE .)
    NULL            reduce using rule 8 (statement -> loop END_LINE .)
    $end            reduce using rule 8 (statement -> loop END_LINE .)
    CONDITIONAL2    reduce using rule 8 (statement -> loop END_LINE .)
    END_LINE        reduce using rule 8 (statement -> loop END_LINE .)


state 52

    (9) statement -> function_declaration END_LINE .

    COMMENT         reduce using rule 9 (statement -> function_declaration END_LINE .)
    LOGICAL_OP_NOT  reduce using rule 9 (statement -> function_declaration END_LINE .)
    VARIABLE        reduce using rule 9 (statement -> function_declaration END_LINE .)
    TYPE_BOOLEAN    reduce using rule 9 (statement -> function_declaration END_LINE .)
    TYPE_STRING     reduce using rule 9 (statement -> function_declaration END_LINE .)
    TYPE_CHAR       reduce using rule 9 (statement -> function_declaration END_LINE .)
    TYPE_INTEGER    reduce using rule 9 (statement -> function_declaration END_LINE .)
    TYPE_FLOAT      reduce using rule 9 (statement -> function_declaration END_LINE .)
    CONDITIONAL1    reduce using rule 9 (statement -> function_declaration END_LINE .)
    LOOP1           reduce using rule 9 (statement -> function_declaration END_LINE .)
    LOOP2           reduce using rule 9 (statement -> function_declaration END_LINE .)
    FUNCTION_DECLARATION reduce using rule 9 (statement -> function_declaration END_LINE .)
    RETURN          reduce using rule 9 (statement -> function_declaration END_LINE .)
    BREAK           reduce using rule 9 (statement -> function_declaration END_LINE .)
    NUMBER_INTEGER  reduce using rule 9 (statement -> function_declaration END_LINE .)
    NUMBER_FLOAT    reduce using rule 9 (statement -> function_declaration END_LINE .)
    TEXT_STRING     reduce using rule 9 (statement -> function_declaration END_LINE .)
    TEXT_CHAR       reduce using rule 9 (statement -> function_declaration END_LINE .)
    TRUE            reduce using rule 9 (statement -> function_declaration END_LINE .)
    FALSE           reduce using rule 9 (statement -> function_declaration END_LINE .)
    NULL            reduce using rule 9 (statement -> function_declaration END_LINE .)
    $end            reduce using rule 9 (statement -> function_declaration END_LINE .)
    CONDITIONAL2    reduce using rule 9 (statement -> function_declaration END_LINE .)
    END_LINE        reduce using rule 9 (statement -> function_declaration END_LINE .)


state 53

    (10) statement -> return_statement END_LINE .

    COMMENT         reduce using rule 10 (statement -> return_statement END_LINE .)
    LOGICAL_OP_NOT  reduce using rule 10 (statement -> return_statement END_LINE .)
    VARIABLE        reduce using rule 10 (statement -> return_statement END_LINE .)
    TYPE_BOOLEAN    reduce using rule 10 (statement -> return_statement END_LINE .)
    TYPE_STRING     reduce using rule 10 (statement -> return_statement END_LINE .)
    TYPE_CHAR       reduce using rule 10 (statement -> return_statement END_LINE .)
    TYPE_INTEGER    reduce using rule 10 (statement -> return_statement END_LINE .)
    TYPE_FLOAT      reduce using rule 10 (statement -> return_statement END_LINE .)
    CONDITIONAL1    reduce using rule 10 (statement -> return_statement END_LINE .)
    LOOP1           reduce using rule 10 (statement -> return_statement END_LINE .)
    LOOP2           reduce using rule 10 (statement -> return_statement END_LINE .)
    FUNCTION_DECLARATION reduce using rule 10 (statement -> return_statement END_LINE .)
    RETURN          reduce using rule 10 (statement -> return_statement END_LINE .)
    BREAK           reduce using rule 10 (statement -> return_statement END_LINE .)
    NUMBER_INTEGER  reduce using rule 10 (statement -> return_statement END_LINE .)
    NUMBER_FLOAT    reduce using rule 10 (statement -> return_statement END_LINE .)
    TEXT_STRING     reduce using rule 10 (statement -> return_statement END_LINE .)
    TEXT_CHAR       reduce using rule 10 (statement -> return_statement END_LINE .)
    TRUE            reduce using rule 10 (statement -> return_statement END_LINE .)
    FALSE           reduce using rule 10 (statement -> return_statement END_LINE .)
    NULL            reduce using rule 10 (statement -> return_statement END_LINE .)
    $end            reduce using rule 10 (statement -> return_statement END_LINE .)
    CONDITIONAL2    reduce using rule 10 (statement -> return_statement END_LINE .)
    END_LINE        reduce using rule 10 (statement -> return_statement END_LINE .)


state 54

    (11) statement -> break_statement END_LINE .

    COMMENT         reduce using rule 11 (statement -> break_statement END_LINE .)
    LOGICAL_OP_NOT  reduce using rule 11 (statement -> break_statement END_LINE .)
    VARIABLE        reduce using rule 11 (statement -> break_statement END_LINE .)
    TYPE_BOOLEAN    reduce using rule 11 (statement -> break_statement END_LINE .)
    TYPE_STRING     reduce using rule 11 (statement -> break_statement END_LINE .)
    TYPE_CHAR       reduce using rule 11 (statement -> break_statement END_LINE .)
    TYPE_INTEGER    reduce using rule 11 (statement -> break_statement END_LINE .)
    TYPE_FLOAT      reduce using rule 11 (statement -> break_statement END_LINE .)
    CONDITIONAL1    reduce using rule 11 (statement -> break_statement END_LINE .)
    LOOP1           reduce using rule 11 (statement -> break_statement END_LINE .)
    LOOP2           reduce using rule 11 (statement -> break_statement END_LINE .)
    FUNCTION_DECLARATION reduce using rule 11 (statement -> break_statement END_LINE .)
    RETURN          reduce using rule 11 (statement -> break_statement END_LINE .)
    BREAK           reduce using rule 11 (statement -> break_statement END_LINE .)
    NUMBER_INTEGER  reduce using rule 11 (statement -> break_statement END_LINE .)
    NUMBER_FLOAT    reduce using rule 11 (statement -> break_statement END_LINE .)
    TEXT_STRING     reduce using rule 11 (statement -> break_statement END_LINE .)
    TEXT_CHAR       reduce using rule 11 (statement -> break_statement END_LINE .)
    TRUE            reduce using rule 11 (statement -> break_statement END_LINE .)
    FALSE           reduce using rule 11 (statement -> break_statement END_LINE .)
    NULL            reduce using rule 11 (statement -> break_statement END_LINE .)
    $end            reduce using rule 11 (statement -> break_statement END_LINE .)
    CONDITIONAL2    reduce using rule 11 (statement -> break_statement END_LINE .)
    END_LINE        reduce using rule 11 (statement -> break_statement END_LINE .)


state 55

    (24) expression -> LOGICAL_OP_NOT expression .
    (14) expression -> expression . PLUS_OP term
    (15) expression -> expression . MINUS_OP term
    (16) expression -> expression . MUL_OP term
    (17) expression -> expression . DIV_OP term
    (18) expression -> expression . LESS_OP expression
    (19) expression -> expression . LESS_EQUAL_OP expression
    (20) expression -> expression . GREATER_OP expression
    (21) expression -> expression . GREATER_EQUAL_OP expression
    (22) expression -> expression . EQUAL_OP expression
    (23) expression -> expression . DIFFERENT_OP expression
    (25) expression -> expression . LOGICAL_OP_AND expression
    (26) expression -> expression . LOGICAL_OP_OR expression

    END_LINE        reduce using rule 24 (expression -> LOGICAL_OP_NOT expression .)
    PLUS_OP         reduce using rule 24 (expression -> LOGICAL_OP_NOT expression .)
    MINUS_OP        reduce using rule 24 (expression -> LOGICAL_OP_NOT expression .)
    MUL_OP          reduce using rule 24 (expression -> LOGICAL_OP_NOT expression .)
    DIV_OP          reduce using rule 24 (expression -> LOGICAL_OP_NOT expression .)
    LESS_OP         reduce using rule 24 (expression -> LOGICAL_OP_NOT expression .)
    LESS_EQUAL_OP   reduce using rule 24 (expression -> LOGICAL_OP_NOT expression .)
    GREATER_OP      reduce using rule 24 (expression -> LOGICAL_OP_NOT expression .)
    GREATER_EQUAL_OP reduce using rule 24 (expression -> LOGICAL_OP_NOT expression .)
    EQUAL_OP        reduce using rule 24 (expression -> LOGICAL_OP_NOT expression .)
    DIFFERENT_OP    reduce using rule 24 (expression -> LOGICAL_OP_NOT expression .)
    LOGICAL_OP_AND  reduce using rule 24 (expression -> LOGICAL_OP_NOT expression .)
    LOGICAL_OP_OR   reduce using rule 24 (expression -> LOGICAL_OP_NOT expression .)
    RPAREN          reduce using rule 24 (expression -> LOGICAL_OP_NOT expression .)
    SEPARATION      reduce using rule 24 (expression -> LOGICAL_OP_NOT expression .)

  ! PLUS_OP         [ shift and go to state 36 ]
  ! MINUS_OP        [ shift and go to state 37 ]
  ! MUL_OP          [ shift and go to state 38 ]
  ! DIV_OP          [ shift and go to state 39 ]
  ! LESS_OP         [ shift and go to state 40 ]
  ! LESS_EQUAL_OP   [ shift and go to state 41 ]
  ! GREATER_OP      [ shift and go to state 42 ]
  ! GREATER_EQUAL_OP [ shift and go to state 43 ]
  ! EQUAL_OP        [ shift and go to state 44 ]
  ! DIFFERENT_OP    [ shift and go to state 45 ]
  ! LOGICAL_OP_AND  [ shift and go to state 46 ]
  ! LOGICAL_OP_OR   [ shift and go to state 47 ]


state 56

    (31) term -> VARIABLE .

    PLUS_OP         reduce using rule 31 (term -> VARIABLE .)
    MINUS_OP        reduce using rule 31 (term -> VARIABLE .)
    MUL_OP          reduce using rule 31 (term -> VARIABLE .)
    DIV_OP          reduce using rule 31 (term -> VARIABLE .)
    LESS_OP         reduce using rule 31 (term -> VARIABLE .)
    LESS_EQUAL_OP   reduce using rule 31 (term -> VARIABLE .)
    GREATER_OP      reduce using rule 31 (term -> VARIABLE .)
    GREATER_EQUAL_OP reduce using rule 31 (term -> VARIABLE .)
    EQUAL_OP        reduce using rule 31 (term -> VARIABLE .)
    DIFFERENT_OP    reduce using rule 31 (term -> VARIABLE .)
    LOGICAL_OP_AND  reduce using rule 31 (term -> VARIABLE .)
    LOGICAL_OP_OR   reduce using rule 31 (term -> VARIABLE .)
    END_LINE        reduce using rule 31 (term -> VARIABLE .)
    RPAREN          reduce using rule 31 (term -> VARIABLE .)
    SEPARATION      reduce using rule 31 (term -> VARIABLE .)


state 57

    (35) assignment -> VARIABLE ASSIGNMENT_OP . expression
    (13) expression -> . term
    (14) expression -> . expression PLUS_OP term
    (15) expression -> . expression MINUS_OP term
    (16) expression -> . expression MUL_OP term
    (17) expression -> . expression DIV_OP term
    (18) expression -> . expression LESS_OP expression
    (19) expression -> . expression LESS_EQUAL_OP expression
    (20) expression -> . expression GREATER_OP expression
    (21) expression -> . expression GREATER_EQUAL_OP expression
    (22) expression -> . expression EQUAL_OP expression
    (23) expression -> . expression DIFFERENT_OP expression
    (24) expression -> . LOGICAL_OP_NOT expression
    (25) expression -> . expression LOGICAL_OP_AND expression
    (26) expression -> . expression LOGICAL_OP_OR expression
    (27) term -> . NUMBER_INTEGER
    (28) term -> . NUMBER_FLOAT
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL

    LOGICAL_OP_NOT  shift and go to state 14
    NUMBER_INTEGER  shift and go to state 27
    NUMBER_FLOAT    shift and go to state 28
    TEXT_STRING     shift and go to state 29
    TEXT_CHAR       shift and go to state 30
    VARIABLE        shift and go to state 56
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NULL            shift and go to state 33

    expression                     shift and go to state 85
    term                           shift and go to state 13

state 58

    (36) declaration -> TYPE_BOOLEAN assignment .

    END_LINE        reduce using rule 36 (declaration -> TYPE_BOOLEAN assignment .)


state 59

    (41) declaration -> TYPE_BOOLEAN VARIABLE .
    (35) assignment -> VARIABLE . ASSIGNMENT_OP expression

    END_LINE        reduce using rule 41 (declaration -> TYPE_BOOLEAN VARIABLE .)
    ASSIGNMENT_OP   shift and go to state 57


state 60

    (37) declaration -> TYPE_STRING assignment .

    END_LINE        reduce using rule 37 (declaration -> TYPE_STRING assignment .)


state 61

    (42) declaration -> TYPE_STRING VARIABLE .
    (35) assignment -> VARIABLE . ASSIGNMENT_OP expression

    END_LINE        reduce using rule 42 (declaration -> TYPE_STRING VARIABLE .)
    ASSIGNMENT_OP   shift and go to state 57


state 62

    (38) declaration -> TYPE_CHAR assignment .

    END_LINE        reduce using rule 38 (declaration -> TYPE_CHAR assignment .)


state 63

    (43) declaration -> TYPE_CHAR VARIABLE .
    (35) assignment -> VARIABLE . ASSIGNMENT_OP expression

    END_LINE        reduce using rule 43 (declaration -> TYPE_CHAR VARIABLE .)
    ASSIGNMENT_OP   shift and go to state 57


state 64

    (39) declaration -> TYPE_INTEGER assignment .

    END_LINE        reduce using rule 39 (declaration -> TYPE_INTEGER assignment .)


state 65

    (44) declaration -> TYPE_INTEGER VARIABLE .
    (35) assignment -> VARIABLE . ASSIGNMENT_OP expression

    END_LINE        reduce using rule 44 (declaration -> TYPE_INTEGER VARIABLE .)
    ASSIGNMENT_OP   shift and go to state 57


state 66

    (40) declaration -> TYPE_FLOAT assignment .

    END_LINE        reduce using rule 40 (declaration -> TYPE_FLOAT assignment .)


state 67

    (45) declaration -> TYPE_FLOAT VARIABLE .
    (35) assignment -> VARIABLE . ASSIGNMENT_OP expression

    END_LINE        reduce using rule 45 (declaration -> TYPE_FLOAT VARIABLE .)
    ASSIGNMENT_OP   shift and go to state 57


state 68

    (46) conditional -> CONDITIONAL1 LPAREN . expression RPAREN STRUCTURE_BODY statement_list
    (47) conditional -> CONDITIONAL1 LPAREN . expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (13) expression -> . term
    (14) expression -> . expression PLUS_OP term
    (15) expression -> . expression MINUS_OP term
    (16) expression -> . expression MUL_OP term
    (17) expression -> . expression DIV_OP term
    (18) expression -> . expression LESS_OP expression
    (19) expression -> . expression LESS_EQUAL_OP expression
    (20) expression -> . expression GREATER_OP expression
    (21) expression -> . expression GREATER_EQUAL_OP expression
    (22) expression -> . expression EQUAL_OP expression
    (23) expression -> . expression DIFFERENT_OP expression
    (24) expression -> . LOGICAL_OP_NOT expression
    (25) expression -> . expression LOGICAL_OP_AND expression
    (26) expression -> . expression LOGICAL_OP_OR expression
    (27) term -> . NUMBER_INTEGER
    (28) term -> . NUMBER_FLOAT
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL

    LOGICAL_OP_NOT  shift and go to state 14
    NUMBER_INTEGER  shift and go to state 27
    NUMBER_FLOAT    shift and go to state 28
    TEXT_STRING     shift and go to state 29
    TEXT_CHAR       shift and go to state 30
    VARIABLE        shift and go to state 56
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NULL            shift and go to state 33

    expression                     shift and go to state 86
    term                           shift and go to state 13

state 69

    (48) loop -> LOOP1 LPAREN . expression RPAREN STRUCTURE_BODY statement_list
    (13) expression -> . term
    (14) expression -> . expression PLUS_OP term
    (15) expression -> . expression MINUS_OP term
    (16) expression -> . expression MUL_OP term
    (17) expression -> . expression DIV_OP term
    (18) expression -> . expression LESS_OP expression
    (19) expression -> . expression LESS_EQUAL_OP expression
    (20) expression -> . expression GREATER_OP expression
    (21) expression -> . expression GREATER_EQUAL_OP expression
    (22) expression -> . expression EQUAL_OP expression
    (23) expression -> . expression DIFFERENT_OP expression
    (24) expression -> . LOGICAL_OP_NOT expression
    (25) expression -> . expression LOGICAL_OP_AND expression
    (26) expression -> . expression LOGICAL_OP_OR expression
    (27) term -> . NUMBER_INTEGER
    (28) term -> . NUMBER_FLOAT
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL

    LOGICAL_OP_NOT  shift and go to state 14
    NUMBER_INTEGER  shift and go to state 27
    NUMBER_FLOAT    shift and go to state 28
    TEXT_STRING     shift and go to state 29
    TEXT_CHAR       shift and go to state 30
    VARIABLE        shift and go to state 56
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NULL            shift and go to state 33

    expression                     shift and go to state 87
    term                           shift and go to state 13

state 70

    (49) loop -> LOOP2 LPAREN . expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (13) expression -> . term
    (14) expression -> . expression PLUS_OP term
    (15) expression -> . expression MINUS_OP term
    (16) expression -> . expression MUL_OP term
    (17) expression -> . expression DIV_OP term
    (18) expression -> . expression LESS_OP expression
    (19) expression -> . expression LESS_EQUAL_OP expression
    (20) expression -> . expression GREATER_OP expression
    (21) expression -> . expression GREATER_EQUAL_OP expression
    (22) expression -> . expression EQUAL_OP expression
    (23) expression -> . expression DIFFERENT_OP expression
    (24) expression -> . LOGICAL_OP_NOT expression
    (25) expression -> . expression LOGICAL_OP_AND expression
    (26) expression -> . expression LOGICAL_OP_OR expression
    (27) term -> . NUMBER_INTEGER
    (28) term -> . NUMBER_FLOAT
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL

    LOGICAL_OP_NOT  shift and go to state 14
    NUMBER_INTEGER  shift and go to state 27
    NUMBER_FLOAT    shift and go to state 28
    TEXT_STRING     shift and go to state 29
    TEXT_CHAR       shift and go to state 30
    VARIABLE        shift and go to state 56
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NULL            shift and go to state 33

    expression                     shift and go to state 88
    term                           shift and go to state 13

state 71

    (50) function_declaration -> FUNCTION_DECLARATION VARIABLE . LPAREN RPAREN STRUCTURE_BODY statement_list

    LPAREN          shift and go to state 89


state 72

    (51) return_statement -> RETURN expression .
    (14) expression -> expression . PLUS_OP term
    (15) expression -> expression . MINUS_OP term
    (16) expression -> expression . MUL_OP term
    (17) expression -> expression . DIV_OP term
    (18) expression -> expression . LESS_OP expression
    (19) expression -> expression . LESS_EQUAL_OP expression
    (20) expression -> expression . GREATER_OP expression
    (21) expression -> expression . GREATER_EQUAL_OP expression
    (22) expression -> expression . EQUAL_OP expression
    (23) expression -> expression . DIFFERENT_OP expression
    (25) expression -> expression . LOGICAL_OP_AND expression
    (26) expression -> expression . LOGICAL_OP_OR expression

    END_LINE        reduce using rule 51 (return_statement -> RETURN expression .)
    PLUS_OP         shift and go to state 36
    MINUS_OP        shift and go to state 37
    MUL_OP          shift and go to state 38
    DIV_OP          shift and go to state 39
    LESS_OP         shift and go to state 40
    LESS_EQUAL_OP   shift and go to state 41
    GREATER_OP      shift and go to state 42
    GREATER_EQUAL_OP shift and go to state 43
    EQUAL_OP        shift and go to state 44
    DIFFERENT_OP    shift and go to state 45
    LOGICAL_OP_AND  shift and go to state 46
    LOGICAL_OP_OR   shift and go to state 47


state 73

    (14) expression -> expression PLUS_OP term .

    END_LINE        reduce using rule 14 (expression -> expression PLUS_OP term .)
    PLUS_OP         reduce using rule 14 (expression -> expression PLUS_OP term .)
    MINUS_OP        reduce using rule 14 (expression -> expression PLUS_OP term .)
    MUL_OP          reduce using rule 14 (expression -> expression PLUS_OP term .)
    DIV_OP          reduce using rule 14 (expression -> expression PLUS_OP term .)
    LESS_OP         reduce using rule 14 (expression -> expression PLUS_OP term .)
    LESS_EQUAL_OP   reduce using rule 14 (expression -> expression PLUS_OP term .)
    GREATER_OP      reduce using rule 14 (expression -> expression PLUS_OP term .)
    GREATER_EQUAL_OP reduce using rule 14 (expression -> expression PLUS_OP term .)
    EQUAL_OP        reduce using rule 14 (expression -> expression PLUS_OP term .)
    DIFFERENT_OP    reduce using rule 14 (expression -> expression PLUS_OP term .)
    LOGICAL_OP_AND  reduce using rule 14 (expression -> expression PLUS_OP term .)
    LOGICAL_OP_OR   reduce using rule 14 (expression -> expression PLUS_OP term .)
    RPAREN          reduce using rule 14 (expression -> expression PLUS_OP term .)
    SEPARATION      reduce using rule 14 (expression -> expression PLUS_OP term .)


state 74

    (15) expression -> expression MINUS_OP term .

    END_LINE        reduce using rule 15 (expression -> expression MINUS_OP term .)
    PLUS_OP         reduce using rule 15 (expression -> expression MINUS_OP term .)
    MINUS_OP        reduce using rule 15 (expression -> expression MINUS_OP term .)
    MUL_OP          reduce using rule 15 (expression -> expression MINUS_OP term .)
    DIV_OP          reduce using rule 15 (expression -> expression MINUS_OP term .)
    LESS_OP         reduce using rule 15 (expression -> expression MINUS_OP term .)
    LESS_EQUAL_OP   reduce using rule 15 (expression -> expression MINUS_OP term .)
    GREATER_OP      reduce using rule 15 (expression -> expression MINUS_OP term .)
    GREATER_EQUAL_OP reduce using rule 15 (expression -> expression MINUS_OP term .)
    EQUAL_OP        reduce using rule 15 (expression -> expression MINUS_OP term .)
    DIFFERENT_OP    reduce using rule 15 (expression -> expression MINUS_OP term .)
    LOGICAL_OP_AND  reduce using rule 15 (expression -> expression MINUS_OP term .)
    LOGICAL_OP_OR   reduce using rule 15 (expression -> expression MINUS_OP term .)
    RPAREN          reduce using rule 15 (expression -> expression MINUS_OP term .)
    SEPARATION      reduce using rule 15 (expression -> expression MINUS_OP term .)


state 75

    (16) expression -> expression MUL_OP term .

    END_LINE        reduce using rule 16 (expression -> expression MUL_OP term .)
    PLUS_OP         reduce using rule 16 (expression -> expression MUL_OP term .)
    MINUS_OP        reduce using rule 16 (expression -> expression MUL_OP term .)
    MUL_OP          reduce using rule 16 (expression -> expression MUL_OP term .)
    DIV_OP          reduce using rule 16 (expression -> expression MUL_OP term .)
    LESS_OP         reduce using rule 16 (expression -> expression MUL_OP term .)
    LESS_EQUAL_OP   reduce using rule 16 (expression -> expression MUL_OP term .)
    GREATER_OP      reduce using rule 16 (expression -> expression MUL_OP term .)
    GREATER_EQUAL_OP reduce using rule 16 (expression -> expression MUL_OP term .)
    EQUAL_OP        reduce using rule 16 (expression -> expression MUL_OP term .)
    DIFFERENT_OP    reduce using rule 16 (expression -> expression MUL_OP term .)
    LOGICAL_OP_AND  reduce using rule 16 (expression -> expression MUL_OP term .)
    LOGICAL_OP_OR   reduce using rule 16 (expression -> expression MUL_OP term .)
    RPAREN          reduce using rule 16 (expression -> expression MUL_OP term .)
    SEPARATION      reduce using rule 16 (expression -> expression MUL_OP term .)


state 76

    (17) expression -> expression DIV_OP term .

    END_LINE        reduce using rule 17 (expression -> expression DIV_OP term .)
    PLUS_OP         reduce using rule 17 (expression -> expression DIV_OP term .)
    MINUS_OP        reduce using rule 17 (expression -> expression DIV_OP term .)
    MUL_OP          reduce using rule 17 (expression -> expression DIV_OP term .)
    DIV_OP          reduce using rule 17 (expression -> expression DIV_OP term .)
    LESS_OP         reduce using rule 17 (expression -> expression DIV_OP term .)
    LESS_EQUAL_OP   reduce using rule 17 (expression -> expression DIV_OP term .)
    GREATER_OP      reduce using rule 17 (expression -> expression DIV_OP term .)
    GREATER_EQUAL_OP reduce using rule 17 (expression -> expression DIV_OP term .)
    EQUAL_OP        reduce using rule 17 (expression -> expression DIV_OP term .)
    DIFFERENT_OP    reduce using rule 17 (expression -> expression DIV_OP term .)
    LOGICAL_OP_AND  reduce using rule 17 (expression -> expression DIV_OP term .)
    LOGICAL_OP_OR   reduce using rule 17 (expression -> expression DIV_OP term .)
    RPAREN          reduce using rule 17 (expression -> expression DIV_OP term .)
    SEPARATION      reduce using rule 17 (expression -> expression DIV_OP term .)


state 77

    (18) expression -> expression LESS_OP expression .
    (14) expression -> expression . PLUS_OP term
    (15) expression -> expression . MINUS_OP term
    (16) expression -> expression . MUL_OP term
    (17) expression -> expression . DIV_OP term
    (18) expression -> expression . LESS_OP expression
    (19) expression -> expression . LESS_EQUAL_OP expression
    (20) expression -> expression . GREATER_OP expression
    (21) expression -> expression . GREATER_EQUAL_OP expression
    (22) expression -> expression . EQUAL_OP expression
    (23) expression -> expression . DIFFERENT_OP expression
    (25) expression -> expression . LOGICAL_OP_AND expression
    (26) expression -> expression . LOGICAL_OP_OR expression

    END_LINE        reduce using rule 18 (expression -> expression LESS_OP expression .)
    PLUS_OP         reduce using rule 18 (expression -> expression LESS_OP expression .)
    MINUS_OP        reduce using rule 18 (expression -> expression LESS_OP expression .)
    MUL_OP          reduce using rule 18 (expression -> expression LESS_OP expression .)
    DIV_OP          reduce using rule 18 (expression -> expression LESS_OP expression .)
    LESS_OP         reduce using rule 18 (expression -> expression LESS_OP expression .)
    LESS_EQUAL_OP   reduce using rule 18 (expression -> expression LESS_OP expression .)
    GREATER_OP      reduce using rule 18 (expression -> expression LESS_OP expression .)
    GREATER_EQUAL_OP reduce using rule 18 (expression -> expression LESS_OP expression .)
    EQUAL_OP        reduce using rule 18 (expression -> expression LESS_OP expression .)
    DIFFERENT_OP    reduce using rule 18 (expression -> expression LESS_OP expression .)
    RPAREN          reduce using rule 18 (expression -> expression LESS_OP expression .)
    SEPARATION      reduce using rule 18 (expression -> expression LESS_OP expression .)
    LOGICAL_OP_AND  shift and go to state 46
    LOGICAL_OP_OR   shift and go to state 47

  ! LOGICAL_OP_AND  [ reduce using rule 18 (expression -> expression LESS_OP expression .) ]
  ! LOGICAL_OP_OR   [ reduce using rule 18 (expression -> expression LESS_OP expression .) ]
  ! PLUS_OP         [ shift and go to state 36 ]
  ! MINUS_OP        [ shift and go to state 37 ]
  ! MUL_OP          [ shift and go to state 38 ]
  ! DIV_OP          [ shift and go to state 39 ]
  ! LESS_OP         [ shift and go to state 40 ]
  ! LESS_EQUAL_OP   [ shift and go to state 41 ]
  ! GREATER_OP      [ shift and go to state 42 ]
  ! GREATER_EQUAL_OP [ shift and go to state 43 ]
  ! EQUAL_OP        [ shift and go to state 44 ]
  ! DIFFERENT_OP    [ shift and go to state 45 ]


state 78

    (19) expression -> expression LESS_EQUAL_OP expression .
    (14) expression -> expression . PLUS_OP term
    (15) expression -> expression . MINUS_OP term
    (16) expression -> expression . MUL_OP term
    (17) expression -> expression . DIV_OP term
    (18) expression -> expression . LESS_OP expression
    (19) expression -> expression . LESS_EQUAL_OP expression
    (20) expression -> expression . GREATER_OP expression
    (21) expression -> expression . GREATER_EQUAL_OP expression
    (22) expression -> expression . EQUAL_OP expression
    (23) expression -> expression . DIFFERENT_OP expression
    (25) expression -> expression . LOGICAL_OP_AND expression
    (26) expression -> expression . LOGICAL_OP_OR expression

    END_LINE        reduce using rule 19 (expression -> expression LESS_EQUAL_OP expression .)
    PLUS_OP         reduce using rule 19 (expression -> expression LESS_EQUAL_OP expression .)
    MINUS_OP        reduce using rule 19 (expression -> expression LESS_EQUAL_OP expression .)
    MUL_OP          reduce using rule 19 (expression -> expression LESS_EQUAL_OP expression .)
    DIV_OP          reduce using rule 19 (expression -> expression LESS_EQUAL_OP expression .)
    LESS_OP         reduce using rule 19 (expression -> expression LESS_EQUAL_OP expression .)
    LESS_EQUAL_OP   reduce using rule 19 (expression -> expression LESS_EQUAL_OP expression .)
    GREATER_OP      reduce using rule 19 (expression -> expression LESS_EQUAL_OP expression .)
    GREATER_EQUAL_OP reduce using rule 19 (expression -> expression LESS_EQUAL_OP expression .)
    EQUAL_OP        reduce using rule 19 (expression -> expression LESS_EQUAL_OP expression .)
    DIFFERENT_OP    reduce using rule 19 (expression -> expression LESS_EQUAL_OP expression .)
    RPAREN          reduce using rule 19 (expression -> expression LESS_EQUAL_OP expression .)
    SEPARATION      reduce using rule 19 (expression -> expression LESS_EQUAL_OP expression .)
    LOGICAL_OP_AND  shift and go to state 46
    LOGICAL_OP_OR   shift and go to state 47

  ! LOGICAL_OP_AND  [ reduce using rule 19 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! LOGICAL_OP_OR   [ reduce using rule 19 (expression -> expression LESS_EQUAL_OP expression .) ]
  ! PLUS_OP         [ shift and go to state 36 ]
  ! MINUS_OP        [ shift and go to state 37 ]
  ! MUL_OP          [ shift and go to state 38 ]
  ! DIV_OP          [ shift and go to state 39 ]
  ! LESS_OP         [ shift and go to state 40 ]
  ! LESS_EQUAL_OP   [ shift and go to state 41 ]
  ! GREATER_OP      [ shift and go to state 42 ]
  ! GREATER_EQUAL_OP [ shift and go to state 43 ]
  ! EQUAL_OP        [ shift and go to state 44 ]
  ! DIFFERENT_OP    [ shift and go to state 45 ]


state 79

    (20) expression -> expression GREATER_OP expression .
    (14) expression -> expression . PLUS_OP term
    (15) expression -> expression . MINUS_OP term
    (16) expression -> expression . MUL_OP term
    (17) expression -> expression . DIV_OP term
    (18) expression -> expression . LESS_OP expression
    (19) expression -> expression . LESS_EQUAL_OP expression
    (20) expression -> expression . GREATER_OP expression
    (21) expression -> expression . GREATER_EQUAL_OP expression
    (22) expression -> expression . EQUAL_OP expression
    (23) expression -> expression . DIFFERENT_OP expression
    (25) expression -> expression . LOGICAL_OP_AND expression
    (26) expression -> expression . LOGICAL_OP_OR expression

    END_LINE        reduce using rule 20 (expression -> expression GREATER_OP expression .)
    PLUS_OP         reduce using rule 20 (expression -> expression GREATER_OP expression .)
    MINUS_OP        reduce using rule 20 (expression -> expression GREATER_OP expression .)
    MUL_OP          reduce using rule 20 (expression -> expression GREATER_OP expression .)
    DIV_OP          reduce using rule 20 (expression -> expression GREATER_OP expression .)
    LESS_OP         reduce using rule 20 (expression -> expression GREATER_OP expression .)
    LESS_EQUAL_OP   reduce using rule 20 (expression -> expression GREATER_OP expression .)
    GREATER_OP      reduce using rule 20 (expression -> expression GREATER_OP expression .)
    GREATER_EQUAL_OP reduce using rule 20 (expression -> expression GREATER_OP expression .)
    EQUAL_OP        reduce using rule 20 (expression -> expression GREATER_OP expression .)
    DIFFERENT_OP    reduce using rule 20 (expression -> expression GREATER_OP expression .)
    RPAREN          reduce using rule 20 (expression -> expression GREATER_OP expression .)
    SEPARATION      reduce using rule 20 (expression -> expression GREATER_OP expression .)
    LOGICAL_OP_AND  shift and go to state 46
    LOGICAL_OP_OR   shift and go to state 47

  ! LOGICAL_OP_AND  [ reduce using rule 20 (expression -> expression GREATER_OP expression .) ]
  ! LOGICAL_OP_OR   [ reduce using rule 20 (expression -> expression GREATER_OP expression .) ]
  ! PLUS_OP         [ shift and go to state 36 ]
  ! MINUS_OP        [ shift and go to state 37 ]
  ! MUL_OP          [ shift and go to state 38 ]
  ! DIV_OP          [ shift and go to state 39 ]
  ! LESS_OP         [ shift and go to state 40 ]
  ! LESS_EQUAL_OP   [ shift and go to state 41 ]
  ! GREATER_OP      [ shift and go to state 42 ]
  ! GREATER_EQUAL_OP [ shift and go to state 43 ]
  ! EQUAL_OP        [ shift and go to state 44 ]
  ! DIFFERENT_OP    [ shift and go to state 45 ]


state 80

    (21) expression -> expression GREATER_EQUAL_OP expression .
    (14) expression -> expression . PLUS_OP term
    (15) expression -> expression . MINUS_OP term
    (16) expression -> expression . MUL_OP term
    (17) expression -> expression . DIV_OP term
    (18) expression -> expression . LESS_OP expression
    (19) expression -> expression . LESS_EQUAL_OP expression
    (20) expression -> expression . GREATER_OP expression
    (21) expression -> expression . GREATER_EQUAL_OP expression
    (22) expression -> expression . EQUAL_OP expression
    (23) expression -> expression . DIFFERENT_OP expression
    (25) expression -> expression . LOGICAL_OP_AND expression
    (26) expression -> expression . LOGICAL_OP_OR expression

    END_LINE        reduce using rule 21 (expression -> expression GREATER_EQUAL_OP expression .)
    PLUS_OP         reduce using rule 21 (expression -> expression GREATER_EQUAL_OP expression .)
    MINUS_OP        reduce using rule 21 (expression -> expression GREATER_EQUAL_OP expression .)
    MUL_OP          reduce using rule 21 (expression -> expression GREATER_EQUAL_OP expression .)
    DIV_OP          reduce using rule 21 (expression -> expression GREATER_EQUAL_OP expression .)
    LESS_OP         reduce using rule 21 (expression -> expression GREATER_EQUAL_OP expression .)
    LESS_EQUAL_OP   reduce using rule 21 (expression -> expression GREATER_EQUAL_OP expression .)
    GREATER_OP      reduce using rule 21 (expression -> expression GREATER_EQUAL_OP expression .)
    GREATER_EQUAL_OP reduce using rule 21 (expression -> expression GREATER_EQUAL_OP expression .)
    EQUAL_OP        reduce using rule 21 (expression -> expression GREATER_EQUAL_OP expression .)
    DIFFERENT_OP    reduce using rule 21 (expression -> expression GREATER_EQUAL_OP expression .)
    RPAREN          reduce using rule 21 (expression -> expression GREATER_EQUAL_OP expression .)
    SEPARATION      reduce using rule 21 (expression -> expression GREATER_EQUAL_OP expression .)
    LOGICAL_OP_AND  shift and go to state 46
    LOGICAL_OP_OR   shift and go to state 47

  ! LOGICAL_OP_AND  [ reduce using rule 21 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! LOGICAL_OP_OR   [ reduce using rule 21 (expression -> expression GREATER_EQUAL_OP expression .) ]
  ! PLUS_OP         [ shift and go to state 36 ]
  ! MINUS_OP        [ shift and go to state 37 ]
  ! MUL_OP          [ shift and go to state 38 ]
  ! DIV_OP          [ shift and go to state 39 ]
  ! LESS_OP         [ shift and go to state 40 ]
  ! LESS_EQUAL_OP   [ shift and go to state 41 ]
  ! GREATER_OP      [ shift and go to state 42 ]
  ! GREATER_EQUAL_OP [ shift and go to state 43 ]
  ! EQUAL_OP        [ shift and go to state 44 ]
  ! DIFFERENT_OP    [ shift and go to state 45 ]


state 81

    (22) expression -> expression EQUAL_OP expression .
    (14) expression -> expression . PLUS_OP term
    (15) expression -> expression . MINUS_OP term
    (16) expression -> expression . MUL_OP term
    (17) expression -> expression . DIV_OP term
    (18) expression -> expression . LESS_OP expression
    (19) expression -> expression . LESS_EQUAL_OP expression
    (20) expression -> expression . GREATER_OP expression
    (21) expression -> expression . GREATER_EQUAL_OP expression
    (22) expression -> expression . EQUAL_OP expression
    (23) expression -> expression . DIFFERENT_OP expression
    (25) expression -> expression . LOGICAL_OP_AND expression
    (26) expression -> expression . LOGICAL_OP_OR expression

    END_LINE        reduce using rule 22 (expression -> expression EQUAL_OP expression .)
    PLUS_OP         reduce using rule 22 (expression -> expression EQUAL_OP expression .)
    MINUS_OP        reduce using rule 22 (expression -> expression EQUAL_OP expression .)
    MUL_OP          reduce using rule 22 (expression -> expression EQUAL_OP expression .)
    DIV_OP          reduce using rule 22 (expression -> expression EQUAL_OP expression .)
    LESS_OP         reduce using rule 22 (expression -> expression EQUAL_OP expression .)
    LESS_EQUAL_OP   reduce using rule 22 (expression -> expression EQUAL_OP expression .)
    GREATER_OP      reduce using rule 22 (expression -> expression EQUAL_OP expression .)
    GREATER_EQUAL_OP reduce using rule 22 (expression -> expression EQUAL_OP expression .)
    EQUAL_OP        reduce using rule 22 (expression -> expression EQUAL_OP expression .)
    DIFFERENT_OP    reduce using rule 22 (expression -> expression EQUAL_OP expression .)
    RPAREN          reduce using rule 22 (expression -> expression EQUAL_OP expression .)
    SEPARATION      reduce using rule 22 (expression -> expression EQUAL_OP expression .)
    LOGICAL_OP_AND  shift and go to state 46
    LOGICAL_OP_OR   shift and go to state 47

  ! LOGICAL_OP_AND  [ reduce using rule 22 (expression -> expression EQUAL_OP expression .) ]
  ! LOGICAL_OP_OR   [ reduce using rule 22 (expression -> expression EQUAL_OP expression .) ]
  ! PLUS_OP         [ shift and go to state 36 ]
  ! MINUS_OP        [ shift and go to state 37 ]
  ! MUL_OP          [ shift and go to state 38 ]
  ! DIV_OP          [ shift and go to state 39 ]
  ! LESS_OP         [ shift and go to state 40 ]
  ! LESS_EQUAL_OP   [ shift and go to state 41 ]
  ! GREATER_OP      [ shift and go to state 42 ]
  ! GREATER_EQUAL_OP [ shift and go to state 43 ]
  ! EQUAL_OP        [ shift and go to state 44 ]
  ! DIFFERENT_OP    [ shift and go to state 45 ]


state 82

    (23) expression -> expression DIFFERENT_OP expression .
    (14) expression -> expression . PLUS_OP term
    (15) expression -> expression . MINUS_OP term
    (16) expression -> expression . MUL_OP term
    (17) expression -> expression . DIV_OP term
    (18) expression -> expression . LESS_OP expression
    (19) expression -> expression . LESS_EQUAL_OP expression
    (20) expression -> expression . GREATER_OP expression
    (21) expression -> expression . GREATER_EQUAL_OP expression
    (22) expression -> expression . EQUAL_OP expression
    (23) expression -> expression . DIFFERENT_OP expression
    (25) expression -> expression . LOGICAL_OP_AND expression
    (26) expression -> expression . LOGICAL_OP_OR expression

    END_LINE        reduce using rule 23 (expression -> expression DIFFERENT_OP expression .)
    PLUS_OP         reduce using rule 23 (expression -> expression DIFFERENT_OP expression .)
    MINUS_OP        reduce using rule 23 (expression -> expression DIFFERENT_OP expression .)
    MUL_OP          reduce using rule 23 (expression -> expression DIFFERENT_OP expression .)
    DIV_OP          reduce using rule 23 (expression -> expression DIFFERENT_OP expression .)
    LESS_OP         reduce using rule 23 (expression -> expression DIFFERENT_OP expression .)
    LESS_EQUAL_OP   reduce using rule 23 (expression -> expression DIFFERENT_OP expression .)
    GREATER_OP      reduce using rule 23 (expression -> expression DIFFERENT_OP expression .)
    GREATER_EQUAL_OP reduce using rule 23 (expression -> expression DIFFERENT_OP expression .)
    EQUAL_OP        reduce using rule 23 (expression -> expression DIFFERENT_OP expression .)
    DIFFERENT_OP    reduce using rule 23 (expression -> expression DIFFERENT_OP expression .)
    RPAREN          reduce using rule 23 (expression -> expression DIFFERENT_OP expression .)
    SEPARATION      reduce using rule 23 (expression -> expression DIFFERENT_OP expression .)
    LOGICAL_OP_AND  shift and go to state 46
    LOGICAL_OP_OR   shift and go to state 47

  ! LOGICAL_OP_AND  [ reduce using rule 23 (expression -> expression DIFFERENT_OP expression .) ]
  ! LOGICAL_OP_OR   [ reduce using rule 23 (expression -> expression DIFFERENT_OP expression .) ]
  ! PLUS_OP         [ shift and go to state 36 ]
  ! MINUS_OP        [ shift and go to state 37 ]
  ! MUL_OP          [ shift and go to state 38 ]
  ! DIV_OP          [ shift and go to state 39 ]
  ! LESS_OP         [ shift and go to state 40 ]
  ! LESS_EQUAL_OP   [ shift and go to state 41 ]
  ! GREATER_OP      [ shift and go to state 42 ]
  ! GREATER_EQUAL_OP [ shift and go to state 43 ]
  ! EQUAL_OP        [ shift and go to state 44 ]
  ! DIFFERENT_OP    [ shift and go to state 45 ]


state 83

    (25) expression -> expression LOGICAL_OP_AND expression .
    (14) expression -> expression . PLUS_OP term
    (15) expression -> expression . MINUS_OP term
    (16) expression -> expression . MUL_OP term
    (17) expression -> expression . DIV_OP term
    (18) expression -> expression . LESS_OP expression
    (19) expression -> expression . LESS_EQUAL_OP expression
    (20) expression -> expression . GREATER_OP expression
    (21) expression -> expression . GREATER_EQUAL_OP expression
    (22) expression -> expression . EQUAL_OP expression
    (23) expression -> expression . DIFFERENT_OP expression
    (25) expression -> expression . LOGICAL_OP_AND expression
    (26) expression -> expression . LOGICAL_OP_OR expression

    END_LINE        reduce using rule 25 (expression -> expression LOGICAL_OP_AND expression .)
    PLUS_OP         reduce using rule 25 (expression -> expression LOGICAL_OP_AND expression .)
    MINUS_OP        reduce using rule 25 (expression -> expression LOGICAL_OP_AND expression .)
    MUL_OP          reduce using rule 25 (expression -> expression LOGICAL_OP_AND expression .)
    DIV_OP          reduce using rule 25 (expression -> expression LOGICAL_OP_AND expression .)
    LESS_OP         reduce using rule 25 (expression -> expression LOGICAL_OP_AND expression .)
    LESS_EQUAL_OP   reduce using rule 25 (expression -> expression LOGICAL_OP_AND expression .)
    GREATER_OP      reduce using rule 25 (expression -> expression LOGICAL_OP_AND expression .)
    GREATER_EQUAL_OP reduce using rule 25 (expression -> expression LOGICAL_OP_AND expression .)
    EQUAL_OP        reduce using rule 25 (expression -> expression LOGICAL_OP_AND expression .)
    DIFFERENT_OP    reduce using rule 25 (expression -> expression LOGICAL_OP_AND expression .)
    LOGICAL_OP_AND  reduce using rule 25 (expression -> expression LOGICAL_OP_AND expression .)
    LOGICAL_OP_OR   reduce using rule 25 (expression -> expression LOGICAL_OP_AND expression .)
    RPAREN          reduce using rule 25 (expression -> expression LOGICAL_OP_AND expression .)
    SEPARATION      reduce using rule 25 (expression -> expression LOGICAL_OP_AND expression .)

  ! PLUS_OP         [ shift and go to state 36 ]
  ! MINUS_OP        [ shift and go to state 37 ]
  ! MUL_OP          [ shift and go to state 38 ]
  ! DIV_OP          [ shift and go to state 39 ]
  ! LESS_OP         [ shift and go to state 40 ]
  ! LESS_EQUAL_OP   [ shift and go to state 41 ]
  ! GREATER_OP      [ shift and go to state 42 ]
  ! GREATER_EQUAL_OP [ shift and go to state 43 ]
  ! EQUAL_OP        [ shift and go to state 44 ]
  ! DIFFERENT_OP    [ shift and go to state 45 ]
  ! LOGICAL_OP_AND  [ shift and go to state 46 ]
  ! LOGICAL_OP_OR   [ shift and go to state 47 ]


state 84

    (26) expression -> expression LOGICAL_OP_OR expression .
    (14) expression -> expression . PLUS_OP term
    (15) expression -> expression . MINUS_OP term
    (16) expression -> expression . MUL_OP term
    (17) expression -> expression . DIV_OP term
    (18) expression -> expression . LESS_OP expression
    (19) expression -> expression . LESS_EQUAL_OP expression
    (20) expression -> expression . GREATER_OP expression
    (21) expression -> expression . GREATER_EQUAL_OP expression
    (22) expression -> expression . EQUAL_OP expression
    (23) expression -> expression . DIFFERENT_OP expression
    (25) expression -> expression . LOGICAL_OP_AND expression
    (26) expression -> expression . LOGICAL_OP_OR expression

    END_LINE        reduce using rule 26 (expression -> expression LOGICAL_OP_OR expression .)
    PLUS_OP         reduce using rule 26 (expression -> expression LOGICAL_OP_OR expression .)
    MINUS_OP        reduce using rule 26 (expression -> expression LOGICAL_OP_OR expression .)
    MUL_OP          reduce using rule 26 (expression -> expression LOGICAL_OP_OR expression .)
    DIV_OP          reduce using rule 26 (expression -> expression LOGICAL_OP_OR expression .)
    LESS_OP         reduce using rule 26 (expression -> expression LOGICAL_OP_OR expression .)
    LESS_EQUAL_OP   reduce using rule 26 (expression -> expression LOGICAL_OP_OR expression .)
    GREATER_OP      reduce using rule 26 (expression -> expression LOGICAL_OP_OR expression .)
    GREATER_EQUAL_OP reduce using rule 26 (expression -> expression LOGICAL_OP_OR expression .)
    EQUAL_OP        reduce using rule 26 (expression -> expression LOGICAL_OP_OR expression .)
    DIFFERENT_OP    reduce using rule 26 (expression -> expression LOGICAL_OP_OR expression .)
    LOGICAL_OP_AND  reduce using rule 26 (expression -> expression LOGICAL_OP_OR expression .)
    LOGICAL_OP_OR   reduce using rule 26 (expression -> expression LOGICAL_OP_OR expression .)
    RPAREN          reduce using rule 26 (expression -> expression LOGICAL_OP_OR expression .)
    SEPARATION      reduce using rule 26 (expression -> expression LOGICAL_OP_OR expression .)

  ! PLUS_OP         [ shift and go to state 36 ]
  ! MINUS_OP        [ shift and go to state 37 ]
  ! MUL_OP          [ shift and go to state 38 ]
  ! DIV_OP          [ shift and go to state 39 ]
  ! LESS_OP         [ shift and go to state 40 ]
  ! LESS_EQUAL_OP   [ shift and go to state 41 ]
  ! GREATER_OP      [ shift and go to state 42 ]
  ! GREATER_EQUAL_OP [ shift and go to state 43 ]
  ! EQUAL_OP        [ shift and go to state 44 ]
  ! DIFFERENT_OP    [ shift and go to state 45 ]
  ! LOGICAL_OP_AND  [ shift and go to state 46 ]
  ! LOGICAL_OP_OR   [ shift and go to state 47 ]


state 85

    (35) assignment -> VARIABLE ASSIGNMENT_OP expression .
    (14) expression -> expression . PLUS_OP term
    (15) expression -> expression . MINUS_OP term
    (16) expression -> expression . MUL_OP term
    (17) expression -> expression . DIV_OP term
    (18) expression -> expression . LESS_OP expression
    (19) expression -> expression . LESS_EQUAL_OP expression
    (20) expression -> expression . GREATER_OP expression
    (21) expression -> expression . GREATER_EQUAL_OP expression
    (22) expression -> expression . EQUAL_OP expression
    (23) expression -> expression . DIFFERENT_OP expression
    (25) expression -> expression . LOGICAL_OP_AND expression
    (26) expression -> expression . LOGICAL_OP_OR expression

    END_LINE        reduce using rule 35 (assignment -> VARIABLE ASSIGNMENT_OP expression .)
    PLUS_OP         shift and go to state 36
    MINUS_OP        shift and go to state 37
    MUL_OP          shift and go to state 38
    DIV_OP          shift and go to state 39
    LESS_OP         shift and go to state 40
    LESS_EQUAL_OP   shift and go to state 41
    GREATER_OP      shift and go to state 42
    GREATER_EQUAL_OP shift and go to state 43
    EQUAL_OP        shift and go to state 44
    DIFFERENT_OP    shift and go to state 45
    LOGICAL_OP_AND  shift and go to state 46
    LOGICAL_OP_OR   shift and go to state 47


state 86

    (46) conditional -> CONDITIONAL1 LPAREN expression . RPAREN STRUCTURE_BODY statement_list
    (47) conditional -> CONDITIONAL1 LPAREN expression . RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (14) expression -> expression . PLUS_OP term
    (15) expression -> expression . MINUS_OP term
    (16) expression -> expression . MUL_OP term
    (17) expression -> expression . DIV_OP term
    (18) expression -> expression . LESS_OP expression
    (19) expression -> expression . LESS_EQUAL_OP expression
    (20) expression -> expression . GREATER_OP expression
    (21) expression -> expression . GREATER_EQUAL_OP expression
    (22) expression -> expression . EQUAL_OP expression
    (23) expression -> expression . DIFFERENT_OP expression
    (25) expression -> expression . LOGICAL_OP_AND expression
    (26) expression -> expression . LOGICAL_OP_OR expression

    RPAREN          shift and go to state 90
    PLUS_OP         shift and go to state 36
    MINUS_OP        shift and go to state 37
    MUL_OP          shift and go to state 38
    DIV_OP          shift and go to state 39
    LESS_OP         shift and go to state 40
    LESS_EQUAL_OP   shift and go to state 41
    GREATER_OP      shift and go to state 42
    GREATER_EQUAL_OP shift and go to state 43
    EQUAL_OP        shift and go to state 44
    DIFFERENT_OP    shift and go to state 45
    LOGICAL_OP_AND  shift and go to state 46
    LOGICAL_OP_OR   shift and go to state 47


state 87

    (48) loop -> LOOP1 LPAREN expression . RPAREN STRUCTURE_BODY statement_list
    (14) expression -> expression . PLUS_OP term
    (15) expression -> expression . MINUS_OP term
    (16) expression -> expression . MUL_OP term
    (17) expression -> expression . DIV_OP term
    (18) expression -> expression . LESS_OP expression
    (19) expression -> expression . LESS_EQUAL_OP expression
    (20) expression -> expression . GREATER_OP expression
    (21) expression -> expression . GREATER_EQUAL_OP expression
    (22) expression -> expression . EQUAL_OP expression
    (23) expression -> expression . DIFFERENT_OP expression
    (25) expression -> expression . LOGICAL_OP_AND expression
    (26) expression -> expression . LOGICAL_OP_OR expression

    RPAREN          shift and go to state 91
    PLUS_OP         shift and go to state 36
    MINUS_OP        shift and go to state 37
    MUL_OP          shift and go to state 38
    DIV_OP          shift and go to state 39
    LESS_OP         shift and go to state 40
    LESS_EQUAL_OP   shift and go to state 41
    GREATER_OP      shift and go to state 42
    GREATER_EQUAL_OP shift and go to state 43
    EQUAL_OP        shift and go to state 44
    DIFFERENT_OP    shift and go to state 45
    LOGICAL_OP_AND  shift and go to state 46
    LOGICAL_OP_OR   shift and go to state 47


state 88

    (49) loop -> LOOP2 LPAREN expression . SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (14) expression -> expression . PLUS_OP term
    (15) expression -> expression . MINUS_OP term
    (16) expression -> expression . MUL_OP term
    (17) expression -> expression . DIV_OP term
    (18) expression -> expression . LESS_OP expression
    (19) expression -> expression . LESS_EQUAL_OP expression
    (20) expression -> expression . GREATER_OP expression
    (21) expression -> expression . GREATER_EQUAL_OP expression
    (22) expression -> expression . EQUAL_OP expression
    (23) expression -> expression . DIFFERENT_OP expression
    (25) expression -> expression . LOGICAL_OP_AND expression
    (26) expression -> expression . LOGICAL_OP_OR expression

    SEPARATION      shift and go to state 92
    PLUS_OP         shift and go to state 36
    MINUS_OP        shift and go to state 37
    MUL_OP          shift and go to state 38
    DIV_OP          shift and go to state 39
    LESS_OP         shift and go to state 40
    LESS_EQUAL_OP   shift and go to state 41
    GREATER_OP      shift and go to state 42
    GREATER_EQUAL_OP shift and go to state 43
    EQUAL_OP        shift and go to state 44
    DIFFERENT_OP    shift and go to state 45
    LOGICAL_OP_AND  shift and go to state 46
    LOGICAL_OP_OR   shift and go to state 47


state 89

    (50) function_declaration -> FUNCTION_DECLARATION VARIABLE LPAREN . RPAREN STRUCTURE_BODY statement_list

    RPAREN          shift and go to state 93


state 90

    (46) conditional -> CONDITIONAL1 LPAREN expression RPAREN . STRUCTURE_BODY statement_list
    (47) conditional -> CONDITIONAL1 LPAREN expression RPAREN . STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list

    STRUCTURE_BODY  shift and go to state 94


state 91

    (48) loop -> LOOP1 LPAREN expression RPAREN . STRUCTURE_BODY statement_list

    STRUCTURE_BODY  shift and go to state 95


state 92

    (49) loop -> LOOP2 LPAREN expression SEPARATION . expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (13) expression -> . term
    (14) expression -> . expression PLUS_OP term
    (15) expression -> . expression MINUS_OP term
    (16) expression -> . expression MUL_OP term
    (17) expression -> . expression DIV_OP term
    (18) expression -> . expression LESS_OP expression
    (19) expression -> . expression LESS_EQUAL_OP expression
    (20) expression -> . expression GREATER_OP expression
    (21) expression -> . expression GREATER_EQUAL_OP expression
    (22) expression -> . expression EQUAL_OP expression
    (23) expression -> . expression DIFFERENT_OP expression
    (24) expression -> . LOGICAL_OP_NOT expression
    (25) expression -> . expression LOGICAL_OP_AND expression
    (26) expression -> . expression LOGICAL_OP_OR expression
    (27) term -> . NUMBER_INTEGER
    (28) term -> . NUMBER_FLOAT
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL

    LOGICAL_OP_NOT  shift and go to state 14
    NUMBER_INTEGER  shift and go to state 27
    NUMBER_FLOAT    shift and go to state 28
    TEXT_STRING     shift and go to state 29
    TEXT_CHAR       shift and go to state 30
    VARIABLE        shift and go to state 56
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NULL            shift and go to state 33

    expression                     shift and go to state 96
    term                           shift and go to state 13

state 93

    (50) function_declaration -> FUNCTION_DECLARATION VARIABLE LPAREN RPAREN . STRUCTURE_BODY statement_list

    STRUCTURE_BODY  shift and go to state 97


state 94

    (46) conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY . statement_list
    (47) conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY . statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . function_declaration END_LINE
    (10) statement -> . return_statement END_LINE
    (11) statement -> . break_statement END_LINE
    (12) statement -> . COMMENT
    (13) expression -> . term
    (14) expression -> . expression PLUS_OP term
    (15) expression -> . expression MINUS_OP term
    (16) expression -> . expression MUL_OP term
    (17) expression -> . expression DIV_OP term
    (18) expression -> . expression LESS_OP expression
    (19) expression -> . expression LESS_EQUAL_OP expression
    (20) expression -> . expression GREATER_OP expression
    (21) expression -> . expression GREATER_EQUAL_OP expression
    (22) expression -> . expression EQUAL_OP expression
    (23) expression -> . expression DIFFERENT_OP expression
    (24) expression -> . LOGICAL_OP_NOT expression
    (25) expression -> . expression LOGICAL_OP_AND expression
    (26) expression -> . expression LOGICAL_OP_OR expression
    (35) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (36) declaration -> . TYPE_BOOLEAN assignment
    (37) declaration -> . TYPE_STRING assignment
    (38) declaration -> . TYPE_CHAR assignment
    (39) declaration -> . TYPE_INTEGER assignment
    (40) declaration -> . TYPE_FLOAT assignment
    (41) declaration -> . TYPE_BOOLEAN VARIABLE
    (42) declaration -> . TYPE_STRING VARIABLE
    (43) declaration -> . TYPE_CHAR VARIABLE
    (44) declaration -> . TYPE_INTEGER VARIABLE
    (45) declaration -> . TYPE_FLOAT VARIABLE
    (46) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (47) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (48) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (49) loop -> . LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (50) function_declaration -> . FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list
    (51) return_statement -> . RETURN expression
    (52) return_statement -> . RETURN
    (53) break_statement -> . BREAK
    (27) term -> . NUMBER_INTEGER
    (28) term -> . NUMBER_FLOAT
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL

    COMMENT         shift and go to state 12
    LOGICAL_OP_NOT  shift and go to state 14
    VARIABLE        shift and go to state 15
    TYPE_BOOLEAN    shift and go to state 16
    TYPE_STRING     shift and go to state 17
    TYPE_CHAR       shift and go to state 18
    TYPE_INTEGER    shift and go to state 19
    TYPE_FLOAT      shift and go to state 20
    CONDITIONAL1    shift and go to state 21
    LOOP1           shift and go to state 22
    LOOP2           shift and go to state 23
    FUNCTION_DECLARATION shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    NUMBER_INTEGER  shift and go to state 27
    NUMBER_FLOAT    shift and go to state 28
    TEXT_STRING     shift and go to state 29
    TEXT_CHAR       shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NULL            shift and go to state 33

    expression                     shift and go to state 4
    statement_list                 shift and go to state 98
    statement                      shift and go to state 3
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    function_declaration           shift and go to state 9
    return_statement               shift and go to state 10
    break_statement                shift and go to state 11
    term                           shift and go to state 13

state 95

    (48) loop -> LOOP1 LPAREN expression RPAREN STRUCTURE_BODY . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . function_declaration END_LINE
    (10) statement -> . return_statement END_LINE
    (11) statement -> . break_statement END_LINE
    (12) statement -> . COMMENT
    (13) expression -> . term
    (14) expression -> . expression PLUS_OP term
    (15) expression -> . expression MINUS_OP term
    (16) expression -> . expression MUL_OP term
    (17) expression -> . expression DIV_OP term
    (18) expression -> . expression LESS_OP expression
    (19) expression -> . expression LESS_EQUAL_OP expression
    (20) expression -> . expression GREATER_OP expression
    (21) expression -> . expression GREATER_EQUAL_OP expression
    (22) expression -> . expression EQUAL_OP expression
    (23) expression -> . expression DIFFERENT_OP expression
    (24) expression -> . LOGICAL_OP_NOT expression
    (25) expression -> . expression LOGICAL_OP_AND expression
    (26) expression -> . expression LOGICAL_OP_OR expression
    (35) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (36) declaration -> . TYPE_BOOLEAN assignment
    (37) declaration -> . TYPE_STRING assignment
    (38) declaration -> . TYPE_CHAR assignment
    (39) declaration -> . TYPE_INTEGER assignment
    (40) declaration -> . TYPE_FLOAT assignment
    (41) declaration -> . TYPE_BOOLEAN VARIABLE
    (42) declaration -> . TYPE_STRING VARIABLE
    (43) declaration -> . TYPE_CHAR VARIABLE
    (44) declaration -> . TYPE_INTEGER VARIABLE
    (45) declaration -> . TYPE_FLOAT VARIABLE
    (46) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (47) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (48) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (49) loop -> . LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (50) function_declaration -> . FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list
    (51) return_statement -> . RETURN expression
    (52) return_statement -> . RETURN
    (53) break_statement -> . BREAK
    (27) term -> . NUMBER_INTEGER
    (28) term -> . NUMBER_FLOAT
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL

    COMMENT         shift and go to state 12
    LOGICAL_OP_NOT  shift and go to state 14
    VARIABLE        shift and go to state 15
    TYPE_BOOLEAN    shift and go to state 16
    TYPE_STRING     shift and go to state 17
    TYPE_CHAR       shift and go to state 18
    TYPE_INTEGER    shift and go to state 19
    TYPE_FLOAT      shift and go to state 20
    CONDITIONAL1    shift and go to state 21
    LOOP1           shift and go to state 22
    LOOP2           shift and go to state 23
    FUNCTION_DECLARATION shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    NUMBER_INTEGER  shift and go to state 27
    NUMBER_FLOAT    shift and go to state 28
    TEXT_STRING     shift and go to state 29
    TEXT_CHAR       shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NULL            shift and go to state 33

    expression                     shift and go to state 4
    statement_list                 shift and go to state 99
    statement                      shift and go to state 3
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    function_declaration           shift and go to state 9
    return_statement               shift and go to state 10
    break_statement                shift and go to state 11
    term                           shift and go to state 13

state 96

    (49) loop -> LOOP2 LPAREN expression SEPARATION expression . SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (14) expression -> expression . PLUS_OP term
    (15) expression -> expression . MINUS_OP term
    (16) expression -> expression . MUL_OP term
    (17) expression -> expression . DIV_OP term
    (18) expression -> expression . LESS_OP expression
    (19) expression -> expression . LESS_EQUAL_OP expression
    (20) expression -> expression . GREATER_OP expression
    (21) expression -> expression . GREATER_EQUAL_OP expression
    (22) expression -> expression . EQUAL_OP expression
    (23) expression -> expression . DIFFERENT_OP expression
    (25) expression -> expression . LOGICAL_OP_AND expression
    (26) expression -> expression . LOGICAL_OP_OR expression

    SEPARATION      shift and go to state 100
    PLUS_OP         shift and go to state 36
    MINUS_OP        shift and go to state 37
    MUL_OP          shift and go to state 38
    DIV_OP          shift and go to state 39
    LESS_OP         shift and go to state 40
    LESS_EQUAL_OP   shift and go to state 41
    GREATER_OP      shift and go to state 42
    GREATER_EQUAL_OP shift and go to state 43
    EQUAL_OP        shift and go to state 44
    DIFFERENT_OP    shift and go to state 45
    LOGICAL_OP_AND  shift and go to state 46
    LOGICAL_OP_OR   shift and go to state 47


state 97

    (50) function_declaration -> FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . function_declaration END_LINE
    (10) statement -> . return_statement END_LINE
    (11) statement -> . break_statement END_LINE
    (12) statement -> . COMMENT
    (13) expression -> . term
    (14) expression -> . expression PLUS_OP term
    (15) expression -> . expression MINUS_OP term
    (16) expression -> . expression MUL_OP term
    (17) expression -> . expression DIV_OP term
    (18) expression -> . expression LESS_OP expression
    (19) expression -> . expression LESS_EQUAL_OP expression
    (20) expression -> . expression GREATER_OP expression
    (21) expression -> . expression GREATER_EQUAL_OP expression
    (22) expression -> . expression EQUAL_OP expression
    (23) expression -> . expression DIFFERENT_OP expression
    (24) expression -> . LOGICAL_OP_NOT expression
    (25) expression -> . expression LOGICAL_OP_AND expression
    (26) expression -> . expression LOGICAL_OP_OR expression
    (35) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (36) declaration -> . TYPE_BOOLEAN assignment
    (37) declaration -> . TYPE_STRING assignment
    (38) declaration -> . TYPE_CHAR assignment
    (39) declaration -> . TYPE_INTEGER assignment
    (40) declaration -> . TYPE_FLOAT assignment
    (41) declaration -> . TYPE_BOOLEAN VARIABLE
    (42) declaration -> . TYPE_STRING VARIABLE
    (43) declaration -> . TYPE_CHAR VARIABLE
    (44) declaration -> . TYPE_INTEGER VARIABLE
    (45) declaration -> . TYPE_FLOAT VARIABLE
    (46) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (47) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (48) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (49) loop -> . LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (50) function_declaration -> . FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list
    (51) return_statement -> . RETURN expression
    (52) return_statement -> . RETURN
    (53) break_statement -> . BREAK
    (27) term -> . NUMBER_INTEGER
    (28) term -> . NUMBER_FLOAT
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL

    COMMENT         shift and go to state 12
    LOGICAL_OP_NOT  shift and go to state 14
    VARIABLE        shift and go to state 15
    TYPE_BOOLEAN    shift and go to state 16
    TYPE_STRING     shift and go to state 17
    TYPE_CHAR       shift and go to state 18
    TYPE_INTEGER    shift and go to state 19
    TYPE_FLOAT      shift and go to state 20
    CONDITIONAL1    shift and go to state 21
    LOOP1           shift and go to state 22
    LOOP2           shift and go to state 23
    FUNCTION_DECLARATION shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    NUMBER_INTEGER  shift and go to state 27
    NUMBER_FLOAT    shift and go to state 28
    TEXT_STRING     shift and go to state 29
    TEXT_CHAR       shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NULL            shift and go to state 33

    statement_list                 shift and go to state 101
    statement                      shift and go to state 3
    expression                     shift and go to state 4
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    function_declaration           shift and go to state 9
    return_statement               shift and go to state 10
    break_statement                shift and go to state 11
    term                           shift and go to state 13

state 98

    (46) conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list .
    (47) conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list . CONDITIONAL2 STRUCTURE_BODY statement_list
    (2) statement_list -> statement_list . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . function_declaration END_LINE
    (10) statement -> . return_statement END_LINE
    (11) statement -> . break_statement END_LINE
    (12) statement -> . COMMENT
    (13) expression -> . term
    (14) expression -> . expression PLUS_OP term
    (15) expression -> . expression MINUS_OP term
    (16) expression -> . expression MUL_OP term
    (17) expression -> . expression DIV_OP term
    (18) expression -> . expression LESS_OP expression
    (19) expression -> . expression LESS_EQUAL_OP expression
    (20) expression -> . expression GREATER_OP expression
    (21) expression -> . expression GREATER_EQUAL_OP expression
    (22) expression -> . expression EQUAL_OP expression
    (23) expression -> . expression DIFFERENT_OP expression
    (24) expression -> . LOGICAL_OP_NOT expression
    (25) expression -> . expression LOGICAL_OP_AND expression
    (26) expression -> . expression LOGICAL_OP_OR expression
    (35) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (36) declaration -> . TYPE_BOOLEAN assignment
    (37) declaration -> . TYPE_STRING assignment
    (38) declaration -> . TYPE_CHAR assignment
    (39) declaration -> . TYPE_INTEGER assignment
    (40) declaration -> . TYPE_FLOAT assignment
    (41) declaration -> . TYPE_BOOLEAN VARIABLE
    (42) declaration -> . TYPE_STRING VARIABLE
    (43) declaration -> . TYPE_CHAR VARIABLE
    (44) declaration -> . TYPE_INTEGER VARIABLE
    (45) declaration -> . TYPE_FLOAT VARIABLE
    (46) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (47) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (48) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (49) loop -> . LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (50) function_declaration -> . FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list
    (51) return_statement -> . RETURN expression
    (52) return_statement -> . RETURN
    (53) break_statement -> . BREAK
    (27) term -> . NUMBER_INTEGER
    (28) term -> . NUMBER_FLOAT
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL

    END_LINE        reduce using rule 46 (conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list .)
    CONDITIONAL2    shift and go to state 102
    COMMENT         shift and go to state 12
    LOGICAL_OP_NOT  shift and go to state 14
    VARIABLE        shift and go to state 15
    TYPE_BOOLEAN    shift and go to state 16
    TYPE_STRING     shift and go to state 17
    TYPE_CHAR       shift and go to state 18
    TYPE_INTEGER    shift and go to state 19
    TYPE_FLOAT      shift and go to state 20
    CONDITIONAL1    shift and go to state 21
    LOOP1           shift and go to state 22
    LOOP2           shift and go to state 23
    FUNCTION_DECLARATION shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    NUMBER_INTEGER  shift and go to state 27
    NUMBER_FLOAT    shift and go to state 28
    TEXT_STRING     shift and go to state 29
    TEXT_CHAR       shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NULL            shift and go to state 33

    expression                     shift and go to state 4
    statement                      shift and go to state 34
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    function_declaration           shift and go to state 9
    return_statement               shift and go to state 10
    break_statement                shift and go to state 11
    term                           shift and go to state 13

state 99

    (48) loop -> LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . function_declaration END_LINE
    (10) statement -> . return_statement END_LINE
    (11) statement -> . break_statement END_LINE
    (12) statement -> . COMMENT
    (13) expression -> . term
    (14) expression -> . expression PLUS_OP term
    (15) expression -> . expression MINUS_OP term
    (16) expression -> . expression MUL_OP term
    (17) expression -> . expression DIV_OP term
    (18) expression -> . expression LESS_OP expression
    (19) expression -> . expression LESS_EQUAL_OP expression
    (20) expression -> . expression GREATER_OP expression
    (21) expression -> . expression GREATER_EQUAL_OP expression
    (22) expression -> . expression EQUAL_OP expression
    (23) expression -> . expression DIFFERENT_OP expression
    (24) expression -> . LOGICAL_OP_NOT expression
    (25) expression -> . expression LOGICAL_OP_AND expression
    (26) expression -> . expression LOGICAL_OP_OR expression
    (35) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (36) declaration -> . TYPE_BOOLEAN assignment
    (37) declaration -> . TYPE_STRING assignment
    (38) declaration -> . TYPE_CHAR assignment
    (39) declaration -> . TYPE_INTEGER assignment
    (40) declaration -> . TYPE_FLOAT assignment
    (41) declaration -> . TYPE_BOOLEAN VARIABLE
    (42) declaration -> . TYPE_STRING VARIABLE
    (43) declaration -> . TYPE_CHAR VARIABLE
    (44) declaration -> . TYPE_INTEGER VARIABLE
    (45) declaration -> . TYPE_FLOAT VARIABLE
    (46) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (47) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (48) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (49) loop -> . LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (50) function_declaration -> . FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list
    (51) return_statement -> . RETURN expression
    (52) return_statement -> . RETURN
    (53) break_statement -> . BREAK
    (27) term -> . NUMBER_INTEGER
    (28) term -> . NUMBER_FLOAT
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL

    END_LINE        reduce using rule 48 (loop -> LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list .)
    COMMENT         shift and go to state 12
    LOGICAL_OP_NOT  shift and go to state 14
    VARIABLE        shift and go to state 15
    TYPE_BOOLEAN    shift and go to state 16
    TYPE_STRING     shift and go to state 17
    TYPE_CHAR       shift and go to state 18
    TYPE_INTEGER    shift and go to state 19
    TYPE_FLOAT      shift and go to state 20
    CONDITIONAL1    shift and go to state 21
    LOOP1           shift and go to state 22
    LOOP2           shift and go to state 23
    FUNCTION_DECLARATION shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    NUMBER_INTEGER  shift and go to state 27
    NUMBER_FLOAT    shift and go to state 28
    TEXT_STRING     shift and go to state 29
    TEXT_CHAR       shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NULL            shift and go to state 33

    expression                     shift and go to state 4
    statement                      shift and go to state 34
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    function_declaration           shift and go to state 9
    return_statement               shift and go to state 10
    break_statement                shift and go to state 11
    term                           shift and go to state 13

state 100

    (49) loop -> LOOP2 LPAREN expression SEPARATION expression SEPARATION . expression RPAREN STRUCTURE_BODY statement_list
    (13) expression -> . term
    (14) expression -> . expression PLUS_OP term
    (15) expression -> . expression MINUS_OP term
    (16) expression -> . expression MUL_OP term
    (17) expression -> . expression DIV_OP term
    (18) expression -> . expression LESS_OP expression
    (19) expression -> . expression LESS_EQUAL_OP expression
    (20) expression -> . expression GREATER_OP expression
    (21) expression -> . expression GREATER_EQUAL_OP expression
    (22) expression -> . expression EQUAL_OP expression
    (23) expression -> . expression DIFFERENT_OP expression
    (24) expression -> . LOGICAL_OP_NOT expression
    (25) expression -> . expression LOGICAL_OP_AND expression
    (26) expression -> . expression LOGICAL_OP_OR expression
    (27) term -> . NUMBER_INTEGER
    (28) term -> . NUMBER_FLOAT
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL

    LOGICAL_OP_NOT  shift and go to state 14
    NUMBER_INTEGER  shift and go to state 27
    NUMBER_FLOAT    shift and go to state 28
    TEXT_STRING     shift and go to state 29
    TEXT_CHAR       shift and go to state 30
    VARIABLE        shift and go to state 56
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NULL            shift and go to state 33

    expression                     shift and go to state 103
    term                           shift and go to state 13

state 101

    (50) function_declaration -> FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . function_declaration END_LINE
    (10) statement -> . return_statement END_LINE
    (11) statement -> . break_statement END_LINE
    (12) statement -> . COMMENT
    (13) expression -> . term
    (14) expression -> . expression PLUS_OP term
    (15) expression -> . expression MINUS_OP term
    (16) expression -> . expression MUL_OP term
    (17) expression -> . expression DIV_OP term
    (18) expression -> . expression LESS_OP expression
    (19) expression -> . expression LESS_EQUAL_OP expression
    (20) expression -> . expression GREATER_OP expression
    (21) expression -> . expression GREATER_EQUAL_OP expression
    (22) expression -> . expression EQUAL_OP expression
    (23) expression -> . expression DIFFERENT_OP expression
    (24) expression -> . LOGICAL_OP_NOT expression
    (25) expression -> . expression LOGICAL_OP_AND expression
    (26) expression -> . expression LOGICAL_OP_OR expression
    (35) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (36) declaration -> . TYPE_BOOLEAN assignment
    (37) declaration -> . TYPE_STRING assignment
    (38) declaration -> . TYPE_CHAR assignment
    (39) declaration -> . TYPE_INTEGER assignment
    (40) declaration -> . TYPE_FLOAT assignment
    (41) declaration -> . TYPE_BOOLEAN VARIABLE
    (42) declaration -> . TYPE_STRING VARIABLE
    (43) declaration -> . TYPE_CHAR VARIABLE
    (44) declaration -> . TYPE_INTEGER VARIABLE
    (45) declaration -> . TYPE_FLOAT VARIABLE
    (46) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (47) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (48) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (49) loop -> . LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (50) function_declaration -> . FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list
    (51) return_statement -> . RETURN expression
    (52) return_statement -> . RETURN
    (53) break_statement -> . BREAK
    (27) term -> . NUMBER_INTEGER
    (28) term -> . NUMBER_FLOAT
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL

    END_LINE        reduce using rule 50 (function_declaration -> FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list .)
    COMMENT         shift and go to state 12
    LOGICAL_OP_NOT  shift and go to state 14
    VARIABLE        shift and go to state 15
    TYPE_BOOLEAN    shift and go to state 16
    TYPE_STRING     shift and go to state 17
    TYPE_CHAR       shift and go to state 18
    TYPE_INTEGER    shift and go to state 19
    TYPE_FLOAT      shift and go to state 20
    CONDITIONAL1    shift and go to state 21
    LOOP1           shift and go to state 22
    LOOP2           shift and go to state 23
    FUNCTION_DECLARATION shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    NUMBER_INTEGER  shift and go to state 27
    NUMBER_FLOAT    shift and go to state 28
    TEXT_STRING     shift and go to state 29
    TEXT_CHAR       shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NULL            shift and go to state 33

    statement                      shift and go to state 34
    expression                     shift and go to state 4
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    function_declaration           shift and go to state 9
    return_statement               shift and go to state 10
    break_statement                shift and go to state 11
    term                           shift and go to state 13

state 102

    (47) conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 . STRUCTURE_BODY statement_list

    STRUCTURE_BODY  shift and go to state 104


state 103

    (49) loop -> LOOP2 LPAREN expression SEPARATION expression SEPARATION expression . RPAREN STRUCTURE_BODY statement_list
    (14) expression -> expression . PLUS_OP term
    (15) expression -> expression . MINUS_OP term
    (16) expression -> expression . MUL_OP term
    (17) expression -> expression . DIV_OP term
    (18) expression -> expression . LESS_OP expression
    (19) expression -> expression . LESS_EQUAL_OP expression
    (20) expression -> expression . GREATER_OP expression
    (21) expression -> expression . GREATER_EQUAL_OP expression
    (22) expression -> expression . EQUAL_OP expression
    (23) expression -> expression . DIFFERENT_OP expression
    (25) expression -> expression . LOGICAL_OP_AND expression
    (26) expression -> expression . LOGICAL_OP_OR expression

    RPAREN          shift and go to state 105
    PLUS_OP         shift and go to state 36
    MINUS_OP        shift and go to state 37
    MUL_OP          shift and go to state 38
    DIV_OP          shift and go to state 39
    LESS_OP         shift and go to state 40
    LESS_EQUAL_OP   shift and go to state 41
    GREATER_OP      shift and go to state 42
    GREATER_EQUAL_OP shift and go to state 43
    EQUAL_OP        shift and go to state 44
    DIFFERENT_OP    shift and go to state 45
    LOGICAL_OP_AND  shift and go to state 46
    LOGICAL_OP_OR   shift and go to state 47


state 104

    (47) conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . function_declaration END_LINE
    (10) statement -> . return_statement END_LINE
    (11) statement -> . break_statement END_LINE
    (12) statement -> . COMMENT
    (13) expression -> . term
    (14) expression -> . expression PLUS_OP term
    (15) expression -> . expression MINUS_OP term
    (16) expression -> . expression MUL_OP term
    (17) expression -> . expression DIV_OP term
    (18) expression -> . expression LESS_OP expression
    (19) expression -> . expression LESS_EQUAL_OP expression
    (20) expression -> . expression GREATER_OP expression
    (21) expression -> . expression GREATER_EQUAL_OP expression
    (22) expression -> . expression EQUAL_OP expression
    (23) expression -> . expression DIFFERENT_OP expression
    (24) expression -> . LOGICAL_OP_NOT expression
    (25) expression -> . expression LOGICAL_OP_AND expression
    (26) expression -> . expression LOGICAL_OP_OR expression
    (35) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (36) declaration -> . TYPE_BOOLEAN assignment
    (37) declaration -> . TYPE_STRING assignment
    (38) declaration -> . TYPE_CHAR assignment
    (39) declaration -> . TYPE_INTEGER assignment
    (40) declaration -> . TYPE_FLOAT assignment
    (41) declaration -> . TYPE_BOOLEAN VARIABLE
    (42) declaration -> . TYPE_STRING VARIABLE
    (43) declaration -> . TYPE_CHAR VARIABLE
    (44) declaration -> . TYPE_INTEGER VARIABLE
    (45) declaration -> . TYPE_FLOAT VARIABLE
    (46) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (47) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (48) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (49) loop -> . LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (50) function_declaration -> . FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list
    (51) return_statement -> . RETURN expression
    (52) return_statement -> . RETURN
    (53) break_statement -> . BREAK
    (27) term -> . NUMBER_INTEGER
    (28) term -> . NUMBER_FLOAT
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL

    COMMENT         shift and go to state 12
    LOGICAL_OP_NOT  shift and go to state 14
    VARIABLE        shift and go to state 15
    TYPE_BOOLEAN    shift and go to state 16
    TYPE_STRING     shift and go to state 17
    TYPE_CHAR       shift and go to state 18
    TYPE_INTEGER    shift and go to state 19
    TYPE_FLOAT      shift and go to state 20
    CONDITIONAL1    shift and go to state 21
    LOOP1           shift and go to state 22
    LOOP2           shift and go to state 23
    FUNCTION_DECLARATION shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    NUMBER_INTEGER  shift and go to state 27
    NUMBER_FLOAT    shift and go to state 28
    TEXT_STRING     shift and go to state 29
    TEXT_CHAR       shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NULL            shift and go to state 33

    expression                     shift and go to state 4
    statement_list                 shift and go to state 106
    statement                      shift and go to state 3
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    function_declaration           shift and go to state 9
    return_statement               shift and go to state 10
    break_statement                shift and go to state 11
    term                           shift and go to state 13

state 105

    (49) loop -> LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN . STRUCTURE_BODY statement_list

    STRUCTURE_BODY  shift and go to state 107


state 106

    (47) conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . function_declaration END_LINE
    (10) statement -> . return_statement END_LINE
    (11) statement -> . break_statement END_LINE
    (12) statement -> . COMMENT
    (13) expression -> . term
    (14) expression -> . expression PLUS_OP term
    (15) expression -> . expression MINUS_OP term
    (16) expression -> . expression MUL_OP term
    (17) expression -> . expression DIV_OP term
    (18) expression -> . expression LESS_OP expression
    (19) expression -> . expression LESS_EQUAL_OP expression
    (20) expression -> . expression GREATER_OP expression
    (21) expression -> . expression GREATER_EQUAL_OP expression
    (22) expression -> . expression EQUAL_OP expression
    (23) expression -> . expression DIFFERENT_OP expression
    (24) expression -> . LOGICAL_OP_NOT expression
    (25) expression -> . expression LOGICAL_OP_AND expression
    (26) expression -> . expression LOGICAL_OP_OR expression
    (35) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (36) declaration -> . TYPE_BOOLEAN assignment
    (37) declaration -> . TYPE_STRING assignment
    (38) declaration -> . TYPE_CHAR assignment
    (39) declaration -> . TYPE_INTEGER assignment
    (40) declaration -> . TYPE_FLOAT assignment
    (41) declaration -> . TYPE_BOOLEAN VARIABLE
    (42) declaration -> . TYPE_STRING VARIABLE
    (43) declaration -> . TYPE_CHAR VARIABLE
    (44) declaration -> . TYPE_INTEGER VARIABLE
    (45) declaration -> . TYPE_FLOAT VARIABLE
    (46) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (47) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (48) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (49) loop -> . LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (50) function_declaration -> . FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list
    (51) return_statement -> . RETURN expression
    (52) return_statement -> . RETURN
    (53) break_statement -> . BREAK
    (27) term -> . NUMBER_INTEGER
    (28) term -> . NUMBER_FLOAT
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL

    END_LINE        reduce using rule 47 (conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list .)
    COMMENT         shift and go to state 12
    LOGICAL_OP_NOT  shift and go to state 14
    VARIABLE        shift and go to state 15
    TYPE_BOOLEAN    shift and go to state 16
    TYPE_STRING     shift and go to state 17
    TYPE_CHAR       shift and go to state 18
    TYPE_INTEGER    shift and go to state 19
    TYPE_FLOAT      shift and go to state 20
    CONDITIONAL1    shift and go to state 21
    LOOP1           shift and go to state 22
    LOOP2           shift and go to state 23
    FUNCTION_DECLARATION shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    NUMBER_INTEGER  shift and go to state 27
    NUMBER_FLOAT    shift and go to state 28
    TEXT_STRING     shift and go to state 29
    TEXT_CHAR       shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NULL            shift and go to state 33

    expression                     shift and go to state 4
    statement                      shift and go to state 34
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    function_declaration           shift and go to state 9
    return_statement               shift and go to state 10
    break_statement                shift and go to state 11
    term                           shift and go to state 13

state 107

    (49) loop -> LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . function_declaration END_LINE
    (10) statement -> . return_statement END_LINE
    (11) statement -> . break_statement END_LINE
    (12) statement -> . COMMENT
    (13) expression -> . term
    (14) expression -> . expression PLUS_OP term
    (15) expression -> . expression MINUS_OP term
    (16) expression -> . expression MUL_OP term
    (17) expression -> . expression DIV_OP term
    (18) expression -> . expression LESS_OP expression
    (19) expression -> . expression LESS_EQUAL_OP expression
    (20) expression -> . expression GREATER_OP expression
    (21) expression -> . expression GREATER_EQUAL_OP expression
    (22) expression -> . expression EQUAL_OP expression
    (23) expression -> . expression DIFFERENT_OP expression
    (24) expression -> . LOGICAL_OP_NOT expression
    (25) expression -> . expression LOGICAL_OP_AND expression
    (26) expression -> . expression LOGICAL_OP_OR expression
    (35) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (36) declaration -> . TYPE_BOOLEAN assignment
    (37) declaration -> . TYPE_STRING assignment
    (38) declaration -> . TYPE_CHAR assignment
    (39) declaration -> . TYPE_INTEGER assignment
    (40) declaration -> . TYPE_FLOAT assignment
    (41) declaration -> . TYPE_BOOLEAN VARIABLE
    (42) declaration -> . TYPE_STRING VARIABLE
    (43) declaration -> . TYPE_CHAR VARIABLE
    (44) declaration -> . TYPE_INTEGER VARIABLE
    (45) declaration -> . TYPE_FLOAT VARIABLE
    (46) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (47) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (48) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (49) loop -> . LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (50) function_declaration -> . FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list
    (51) return_statement -> . RETURN expression
    (52) return_statement -> . RETURN
    (53) break_statement -> . BREAK
    (27) term -> . NUMBER_INTEGER
    (28) term -> . NUMBER_FLOAT
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL

    COMMENT         shift and go to state 12
    LOGICAL_OP_NOT  shift and go to state 14
    VARIABLE        shift and go to state 15
    TYPE_BOOLEAN    shift and go to state 16
    TYPE_STRING     shift and go to state 17
    TYPE_CHAR       shift and go to state 18
    TYPE_INTEGER    shift and go to state 19
    TYPE_FLOAT      shift and go to state 20
    CONDITIONAL1    shift and go to state 21
    LOOP1           shift and go to state 22
    LOOP2           shift and go to state 23
    FUNCTION_DECLARATION shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    NUMBER_INTEGER  shift and go to state 27
    NUMBER_FLOAT    shift and go to state 28
    TEXT_STRING     shift and go to state 29
    TEXT_CHAR       shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NULL            shift and go to state 33

    expression                     shift and go to state 4
    statement_list                 shift and go to state 108
    statement                      shift and go to state 3
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    function_declaration           shift and go to state 9
    return_statement               shift and go to state 10
    break_statement                shift and go to state 11
    term                           shift and go to state 13

state 108

    (49) loop -> LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . expression END_LINE
    (5) statement -> . assignment END_LINE
    (6) statement -> . declaration END_LINE
    (7) statement -> . conditional END_LINE
    (8) statement -> . loop END_LINE
    (9) statement -> . function_declaration END_LINE
    (10) statement -> . return_statement END_LINE
    (11) statement -> . break_statement END_LINE
    (12) statement -> . COMMENT
    (13) expression -> . term
    (14) expression -> . expression PLUS_OP term
    (15) expression -> . expression MINUS_OP term
    (16) expression -> . expression MUL_OP term
    (17) expression -> . expression DIV_OP term
    (18) expression -> . expression LESS_OP expression
    (19) expression -> . expression LESS_EQUAL_OP expression
    (20) expression -> . expression GREATER_OP expression
    (21) expression -> . expression GREATER_EQUAL_OP expression
    (22) expression -> . expression EQUAL_OP expression
    (23) expression -> . expression DIFFERENT_OP expression
    (24) expression -> . LOGICAL_OP_NOT expression
    (25) expression -> . expression LOGICAL_OP_AND expression
    (26) expression -> . expression LOGICAL_OP_OR expression
    (35) assignment -> . VARIABLE ASSIGNMENT_OP expression
    (36) declaration -> . TYPE_BOOLEAN assignment
    (37) declaration -> . TYPE_STRING assignment
    (38) declaration -> . TYPE_CHAR assignment
    (39) declaration -> . TYPE_INTEGER assignment
    (40) declaration -> . TYPE_FLOAT assignment
    (41) declaration -> . TYPE_BOOLEAN VARIABLE
    (42) declaration -> . TYPE_STRING VARIABLE
    (43) declaration -> . TYPE_CHAR VARIABLE
    (44) declaration -> . TYPE_INTEGER VARIABLE
    (45) declaration -> . TYPE_FLOAT VARIABLE
    (46) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (47) conditional -> . CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list
    (48) loop -> . LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list
    (49) loop -> . LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list
    (50) function_declaration -> . FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list
    (51) return_statement -> . RETURN expression
    (52) return_statement -> . RETURN
    (53) break_statement -> . BREAK
    (27) term -> . NUMBER_INTEGER
    (28) term -> . NUMBER_FLOAT
    (29) term -> . TEXT_STRING
    (30) term -> . TEXT_CHAR
    (31) term -> . VARIABLE
    (32) term -> . TRUE
    (33) term -> . FALSE
    (34) term -> . NULL

    END_LINE        reduce using rule 49 (loop -> LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list .)
    COMMENT         shift and go to state 12
    LOGICAL_OP_NOT  shift and go to state 14
    VARIABLE        shift and go to state 15
    TYPE_BOOLEAN    shift and go to state 16
    TYPE_STRING     shift and go to state 17
    TYPE_CHAR       shift and go to state 18
    TYPE_INTEGER    shift and go to state 19
    TYPE_FLOAT      shift and go to state 20
    CONDITIONAL1    shift and go to state 21
    LOOP1           shift and go to state 22
    LOOP2           shift and go to state 23
    FUNCTION_DECLARATION shift and go to state 24
    RETURN          shift and go to state 25
    BREAK           shift and go to state 26
    NUMBER_INTEGER  shift and go to state 27
    NUMBER_FLOAT    shift and go to state 28
    TEXT_STRING     shift and go to state 29
    TEXT_CHAR       shift and go to state 30
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NULL            shift and go to state 33

    expression                     shift and go to state 4
    statement                      shift and go to state 34
    assignment                     shift and go to state 5
    declaration                    shift and go to state 6
    conditional                    shift and go to state 7
    loop                           shift and go to state 8
    function_declaration           shift and go to state 9
    return_statement               shift and go to state 10
    break_statement                shift and go to state 11
    term                           shift and go to state 13
