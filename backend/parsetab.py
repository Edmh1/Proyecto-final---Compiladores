
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftLOGICAL_OP_ORleftLOGICAL_OP_ANDrightLOGICAL_OP_NOTleftLESS_OPLESS_EQUAL_OPGREATER_OPGREATER_EQUAL_OPEQUAL_OPDIFFERENT_OPleftPLUS_OPMINUS_OPleftMUL_OPDIV_OPnonassocLPARENRPARENASSIGNMENT_OP BREAK COMMENT CONDITIONAL1 CONDITIONAL2 DIFFERENT_OP DIV_OP END_LINE EQUAL_OP FALSE FUNCTION_DECLARATION GREATER_EQUAL_OP GREATER_OP LESS_EQUAL_OP LESS_OP LOGICAL_OP_AND LOGICAL_OP_NOT LOGICAL_OP_OR LOOP1 LOOP2 LPAREN MINUS_OP MUL_OP NULL NUMBER_FLOAT NUMBER_INTEGER PLUS_OP RETURN RPAREN SEPARATION STRUCTURE_BODY TEXT_CHAR TEXT_STRING TRUE TYPE_BOOLEAN TYPE_CHAR TYPE_FLOAT TYPE_INTEGER TYPE_STRING VARIABLEprogram : statement_liststatement_list : statement_list statement\n                      | statementstatement : expression END_LINE\n                 | assignment END_LINE\n                 | declaration END_LINE\n                 | conditional END_LINE\n                 | loop END_LINE\n                 | function_declaration END_LINE\n                 | return_statement END_LINE\n                 | break_statement END_LINE\n                 | COMMENTexpression : logical_or_expressionlogical_or_expression : logical_or_expression LOGICAL_OP_OR logical_and_expression\n                             | logical_and_expressionlogical_and_expression : logical_and_expression LOGICAL_OP_AND equality_expression\n                              | equality_expressionequality_expression : equality_expression EQUAL_OP relational_expression\n                           | equality_expression DIFFERENT_OP relational_expression\n                           | relational_expressionrelational_expression : relational_expression LESS_OP additive_expression\n                             | relational_expression LESS_EQUAL_OP additive_expression\n                             | relational_expression GREATER_OP additive_expression\n                             | relational_expression GREATER_EQUAL_OP additive_expression\n                             | additive_expressionadditive_expression : additive_expression PLUS_OP multiplicative_expression\n                           | additive_expression MINUS_OP multiplicative_expression\n                           | multiplicative_expressionmultiplicative_expression : multiplicative_expression MUL_OP unary_expression\n                                 | multiplicative_expression DIV_OP unary_expression\n                                 | unary_expressionunary_expression : LOGICAL_OP_NOT unary_expression\n                        | primary_expressionprimary_expression : LPAREN expression RPAREN\n                          | termterm : NUMBER_INTEGER\n            | NUMBER_FLOAT\n            | VARIABLE\n            | TRUE\n            | FALSE\n            | NULL\n            | TEXT_STRING\n            | TEXT_CHARassignment : VARIABLE ASSIGNMENT_OP expressiondeclaration : TYPE_BOOLEAN VARIABLE \n                   | TYPE_STRING VARIABLE\n                   | TYPE_CHAR VARIABLE\n                   | TYPE_INTEGER VARIABLE\n                   | TYPE_FLOAT VARIABLE\n                   | TYPE_BOOLEAN assignment\n                   | TYPE_STRING assignment\n                   | TYPE_CHAR assignment\n                   | TYPE_INTEGER assignment\n                   | TYPE_FLOAT assignmentconditional : CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list\n                   | CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_listloop : LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list\n            | LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_listfunction_declaration : FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_listreturn_statement : RETURN expression\n                        | RETURNbreak_statement : BREAKcomment : COMMENT'
    
_lr_action_items = {'COMMENT':([0,2,3,12,43,44,45,46,47,48,49,50,51,105,106,108,109,110,112,115,117,118,119,],[12,12,-3,-12,-2,-4,-5,-6,-7,-8,-9,-10,-11,12,12,12,12,12,12,12,12,12,12,]),'VARIABLE':([0,2,3,12,15,16,17,18,19,21,24,25,33,43,44,45,46,47,48,49,50,51,52,53,64,67,68,71,72,73,74,75,76,77,78,79,80,81,103,105,106,108,109,110,111,112,115,117,118,119,],[14,14,-3,-12,54,56,58,60,62,66,69,66,66,-2,-4,-5,-6,-7,-8,-9,-10,-11,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,14,14,14,14,14,66,14,14,14,14,14,]),'TYPE_BOOLEAN':([0,2,3,12,43,44,45,46,47,48,49,50,51,105,106,108,109,110,112,115,117,118,119,],[15,15,-3,-12,-2,-4,-5,-6,-7,-8,-9,-10,-11,15,15,15,15,15,15,15,15,15,15,]),'TYPE_STRING':([0,2,3,12,43,44,45,46,47,48,49,50,51,105,106,108,109,110,112,115,117,118,119,],[16,16,-3,-12,-2,-4,-5,-6,-7,-8,-9,-10,-11,16,16,16,16,16,16,16,16,16,16,]),'TYPE_CHAR':([0,2,3,12,43,44,45,46,47,48,49,50,51,105,106,108,109,110,112,115,117,118,119,],[17,17,-3,-12,-2,-4,-5,-6,-7,-8,-9,-10,-11,17,17,17,17,17,17,17,17,17,17,]),'TYPE_INTEGER':([0,2,3,12,43,44,45,46,47,48,49,50,51,105,106,108,109,110,112,115,117,118,119,],[18,18,-3,-12,-2,-4,-5,-6,-7,-8,-9,-10,-11,18,18,18,18,18,18,18,18,18,18,]),'TYPE_FLOAT':([0,2,3,12,43,44,45,46,47,48,49,50,51,105,106,108,109,110,112,115,117,118,119,],[19,19,-3,-12,-2,-4,-5,-6,-7,-8,-9,-10,-11,19,19,19,19,19,19,19,19,19,19,]),'CONDITIONAL1':([0,2,3,12,43,44,45,46,47,48,49,50,51,105,106,108,109,110,112,115,117,118,119,],[20,20,-3,-12,-2,-4,-5,-6,-7,-8,-9,-10,-11,20,20,20,20,20,20,20,20,20,20,]),'LOOP1':([0,2,3,12,43,44,45,46,47,48,49,50,51,105,106,108,109,110,112,115,117,118,119,],[22,22,-3,-12,-2,-4,-5,-6,-7,-8,-9,-10,-11,22,22,22,22,22,22,22,22,22,22,]),'LOOP2':([0,2,3,12,43,44,45,46,47,48,49,50,51,105,106,108,109,110,112,115,117,118,119,],[23,23,-3,-12,-2,-4,-5,-6,-7,-8,-9,-10,-11,23,23,23,23,23,23,23,23,23,23,]),'FUNCTION_DECLARATION':([0,2,3,12,43,44,45,46,47,48,49,50,51,105,106,108,109,110,112,115,117,118,119,],[24,24,-3,-12,-2,-4,-5,-6,-7,-8,-9,-10,-11,24,24,24,24,24,24,24,24,24,24,]),'RETURN':([0,2,3,12,43,44,45,46,47,48,49,50,51,105,106,108,109,110,112,115,117,118,119,],[25,25,-3,-12,-2,-4,-5,-6,-7,-8,-9,-10,-11,25,25,25,25,25,25,25,25,25,25,]),'BREAK':([0,2,3,12,43,44,45,46,47,48,49,50,51,105,106,108,109,110,112,115,117,118,119,],[26,26,-3,-12,-2,-4,-5,-6,-7,-8,-9,-10,-11,26,26,26,26,26,26,26,26,26,26,]),'LOGICAL_OP_NOT':([0,2,3,12,21,25,33,43,44,45,46,47,48,49,50,51,52,53,64,67,68,71,72,73,74,75,76,77,78,79,80,81,103,105,106,108,109,110,111,112,115,117,118,119,],[33,33,-3,-12,33,33,33,-2,-4,-5,-6,-7,-8,-9,-10,-11,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'LPAREN':([0,2,3,12,20,21,22,23,25,33,43,44,45,46,47,48,49,50,51,52,53,64,67,68,69,71,72,73,74,75,76,77,78,79,80,81,103,105,106,108,109,110,111,112,115,117,118,119,],[21,21,-3,-12,64,21,67,68,21,21,-2,-4,-5,-6,-7,-8,-9,-10,-11,21,21,21,21,21,89,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'NUMBER_INTEGER':([0,2,3,12,21,25,33,43,44,45,46,47,48,49,50,51,52,53,64,67,68,71,72,73,74,75,76,77,78,79,80,81,103,105,106,108,109,110,111,112,115,117,118,119,],[36,36,-3,-12,36,36,36,-2,-4,-5,-6,-7,-8,-9,-10,-11,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'NUMBER_FLOAT':([0,2,3,12,21,25,33,43,44,45,46,47,48,49,50,51,52,53,64,67,68,71,72,73,74,75,76,77,78,79,80,81,103,105,106,108,109,110,111,112,115,117,118,119,],[37,37,-3,-12,37,37,37,-2,-4,-5,-6,-7,-8,-9,-10,-11,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'TRUE':([0,2,3,12,21,25,33,43,44,45,46,47,48,49,50,51,52,53,64,67,68,71,72,73,74,75,76,77,78,79,80,81,103,105,106,108,109,110,111,112,115,117,118,119,],[38,38,-3,-12,38,38,38,-2,-4,-5,-6,-7,-8,-9,-10,-11,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'FALSE':([0,2,3,12,21,25,33,43,44,45,46,47,48,49,50,51,52,53,64,67,68,71,72,73,74,75,76,77,78,79,80,81,103,105,106,108,109,110,111,112,115,117,118,119,],[39,39,-3,-12,39,39,39,-2,-4,-5,-6,-7,-8,-9,-10,-11,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'NULL':([0,2,3,12,21,25,33,43,44,45,46,47,48,49,50,51,52,53,64,67,68,71,72,73,74,75,76,77,78,79,80,81,103,105,106,108,109,110,111,112,115,117,118,119,],[40,40,-3,-12,40,40,40,-2,-4,-5,-6,-7,-8,-9,-10,-11,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'TEXT_STRING':([0,2,3,12,21,25,33,43,44,45,46,47,48,49,50,51,52,53,64,67,68,71,72,73,74,75,76,77,78,79,80,81,103,105,106,108,109,110,111,112,115,117,118,119,],[41,41,-3,-12,41,41,41,-2,-4,-5,-6,-7,-8,-9,-10,-11,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'TEXT_CHAR':([0,2,3,12,21,25,33,43,44,45,46,47,48,49,50,51,52,53,64,67,68,71,72,73,74,75,76,77,78,79,80,81,103,105,106,108,109,110,111,112,115,117,118,119,],[42,42,-3,-12,42,42,42,-2,-4,-5,-6,-7,-8,-9,-10,-11,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'$end':([1,2,3,12,43,44,45,46,47,48,49,50,51,],[0,-1,-3,-12,-2,-4,-5,-6,-7,-8,-9,-10,-11,]),'CONDITIONAL2':([3,12,43,44,45,46,47,48,49,50,51,109,],[-3,-12,-2,-4,-5,-6,-7,-8,-9,-10,-11,113,]),'END_LINE':([3,4,5,6,7,8,9,10,11,12,13,14,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,56,57,58,59,60,61,62,63,66,70,82,83,84,86,90,91,92,93,94,95,96,97,98,99,100,109,110,112,117,119,],[-3,44,45,46,47,48,49,50,51,-12,-13,-38,-61,-62,-15,-17,-20,-25,-28,-31,-33,-35,-36,-37,-39,-40,-41,-42,-43,-2,-4,-5,-6,-7,-8,-9,-10,-11,-45,-50,-46,-51,-47,-52,-48,-53,-49,-54,-38,-60,-32,-14,-44,-34,-16,-18,-19,-21,-22,-23,-24,-26,-27,-29,-30,-55,-57,-59,-56,-58,]),'RPAREN':([13,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,65,66,82,83,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,114,],[-13,-15,-17,-20,-25,-28,-31,-33,-35,-36,-37,-39,-40,-41,-42,-43,86,-38,-32,-14,101,-34,102,104,-16,-18,-19,-21,-22,-23,-24,-26,-27,-29,-30,116,]),'SEPARATION':([13,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,66,82,83,86,88,90,91,92,93,94,95,96,97,98,99,100,107,],[-13,-15,-17,-20,-25,-28,-31,-33,-35,-36,-37,-39,-40,-41,-42,-43,-38,-32,-14,-34,103,-16,-18,-19,-21,-22,-23,-24,-26,-27,-29,-30,111,]),'LOGICAL_OP_OR':([13,14,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,66,82,83,86,90,91,92,93,94,95,96,97,98,99,100,],[52,-38,-15,-17,-20,-25,-28,-31,-33,-35,-36,-37,-39,-40,-41,-42,-43,-38,-32,-14,-34,-16,-18,-19,-21,-22,-23,-24,-26,-27,-29,-30,]),'ASSIGNMENT_OP':([14,54,56,58,60,62,],[53,53,53,53,53,53,]),'MUL_OP':([14,31,32,34,35,36,37,38,39,40,41,42,66,82,86,97,98,99,100,],[-38,80,-31,-33,-35,-36,-37,-39,-40,-41,-42,-43,-38,-32,-34,80,80,-29,-30,]),'DIV_OP':([14,31,32,34,35,36,37,38,39,40,41,42,66,82,86,97,98,99,100,],[-38,81,-31,-33,-35,-36,-37,-39,-40,-41,-42,-43,-38,-32,-34,81,81,-29,-30,]),'PLUS_OP':([14,30,31,32,34,35,36,37,38,39,40,41,42,66,82,86,93,94,95,96,97,98,99,100,],[-38,78,-28,-31,-33,-35,-36,-37,-39,-40,-41,-42,-43,-38,-32,-34,78,78,78,78,-26,-27,-29,-30,]),'MINUS_OP':([14,30,31,32,34,35,36,37,38,39,40,41,42,66,82,86,93,94,95,96,97,98,99,100,],[-38,79,-28,-31,-33,-35,-36,-37,-39,-40,-41,-42,-43,-38,-32,-34,79,79,79,79,-26,-27,-29,-30,]),'LESS_OP':([14,29,30,31,32,34,35,36,37,38,39,40,41,42,66,82,86,91,92,93,94,95,96,97,98,99,100,],[-38,74,-25,-28,-31,-33,-35,-36,-37,-39,-40,-41,-42,-43,-38,-32,-34,74,74,-21,-22,-23,-24,-26,-27,-29,-30,]),'LESS_EQUAL_OP':([14,29,30,31,32,34,35,36,37,38,39,40,41,42,66,82,86,91,92,93,94,95,96,97,98,99,100,],[-38,75,-25,-28,-31,-33,-35,-36,-37,-39,-40,-41,-42,-43,-38,-32,-34,75,75,-21,-22,-23,-24,-26,-27,-29,-30,]),'GREATER_OP':([14,29,30,31,32,34,35,36,37,38,39,40,41,42,66,82,86,91,92,93,94,95,96,97,98,99,100,],[-38,76,-25,-28,-31,-33,-35,-36,-37,-39,-40,-41,-42,-43,-38,-32,-34,76,76,-21,-22,-23,-24,-26,-27,-29,-30,]),'GREATER_EQUAL_OP':([14,29,30,31,32,34,35,36,37,38,39,40,41,42,66,82,86,91,92,93,94,95,96,97,98,99,100,],[-38,77,-25,-28,-31,-33,-35,-36,-37,-39,-40,-41,-42,-43,-38,-32,-34,77,77,-21,-22,-23,-24,-26,-27,-29,-30,]),'EQUAL_OP':([14,28,29,30,31,32,34,35,36,37,38,39,40,41,42,66,82,86,90,91,92,93,94,95,96,97,98,99,100,],[-38,72,-20,-25,-28,-31,-33,-35,-36,-37,-39,-40,-41,-42,-43,-38,-32,-34,72,-18,-19,-21,-22,-23,-24,-26,-27,-29,-30,]),'DIFFERENT_OP':([14,28,29,30,31,32,34,35,36,37,38,39,40,41,42,66,82,86,90,91,92,93,94,95,96,97,98,99,100,],[-38,73,-20,-25,-28,-31,-33,-35,-36,-37,-39,-40,-41,-42,-43,-38,-32,-34,73,-18,-19,-21,-22,-23,-24,-26,-27,-29,-30,]),'LOGICAL_OP_AND':([14,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,66,82,83,86,90,91,92,93,94,95,96,97,98,99,100,],[-38,71,-17,-20,-25,-28,-31,-33,-35,-36,-37,-39,-40,-41,-42,-43,-38,-32,71,-34,-16,-18,-19,-21,-22,-23,-24,-26,-27,-29,-30,]),'STRUCTURE_BODY':([101,102,104,113,116,],[105,106,108,115,118,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,105,106,108,115,118,],[2,109,110,112,117,119,]),'statement':([0,2,105,106,108,109,110,112,115,117,118,119,],[3,43,3,3,3,43,43,43,3,43,3,43,]),'expression':([0,2,21,25,53,64,67,68,103,105,106,108,109,110,111,112,115,117,118,119,],[4,4,65,70,84,85,87,88,107,4,4,4,4,4,114,4,4,4,4,4,]),'assignment':([0,2,15,16,17,18,19,105,106,108,109,110,112,115,117,118,119,],[5,5,55,57,59,61,63,5,5,5,5,5,5,5,5,5,5,]),'declaration':([0,2,105,106,108,109,110,112,115,117,118,119,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'conditional':([0,2,105,106,108,109,110,112,115,117,118,119,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'loop':([0,2,105,106,108,109,110,112,115,117,118,119,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'function_declaration':([0,2,105,106,108,109,110,112,115,117,118,119,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'return_statement':([0,2,105,106,108,109,110,112,115,117,118,119,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'break_statement':([0,2,105,106,108,109,110,112,115,117,118,119,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'logical_or_expression':([0,2,21,25,53,64,67,68,103,105,106,108,109,110,111,112,115,117,118,119,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'logical_and_expression':([0,2,21,25,52,53,64,67,68,103,105,106,108,109,110,111,112,115,117,118,119,],[27,27,27,27,83,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'equality_expression':([0,2,21,25,52,53,64,67,68,71,103,105,106,108,109,110,111,112,115,117,118,119,],[28,28,28,28,28,28,28,28,28,90,28,28,28,28,28,28,28,28,28,28,28,28,]),'relational_expression':([0,2,21,25,52,53,64,67,68,71,72,73,103,105,106,108,109,110,111,112,115,117,118,119,],[29,29,29,29,29,29,29,29,29,29,91,92,29,29,29,29,29,29,29,29,29,29,29,29,]),'additive_expression':([0,2,21,25,52,53,64,67,68,71,72,73,74,75,76,77,103,105,106,108,109,110,111,112,115,117,118,119,],[30,30,30,30,30,30,30,30,30,30,30,30,93,94,95,96,30,30,30,30,30,30,30,30,30,30,30,30,]),'multiplicative_expression':([0,2,21,25,52,53,64,67,68,71,72,73,74,75,76,77,78,79,103,105,106,108,109,110,111,112,115,117,118,119,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,97,98,31,31,31,31,31,31,31,31,31,31,31,31,]),'unary_expression':([0,2,21,25,33,52,53,64,67,68,71,72,73,74,75,76,77,78,79,80,81,103,105,106,108,109,110,111,112,115,117,118,119,],[32,32,32,32,82,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,100,32,32,32,32,32,32,32,32,32,32,32,32,]),'primary_expression':([0,2,21,25,33,52,53,64,67,68,71,72,73,74,75,76,77,78,79,80,81,103,105,106,108,109,110,111,112,115,117,118,119,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'term':([0,2,21,25,33,52,53,64,67,68,71,72,73,74,75,76,77,78,79,80,81,103,105,106,108,109,110,111,112,115,117,118,119,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',123),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',127),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',128),
  ('statement -> expression END_LINE','statement',2,'p_statement','parser.py',135),
  ('statement -> assignment END_LINE','statement',2,'p_statement','parser.py',136),
  ('statement -> declaration END_LINE','statement',2,'p_statement','parser.py',137),
  ('statement -> conditional END_LINE','statement',2,'p_statement','parser.py',138),
  ('statement -> loop END_LINE','statement',2,'p_statement','parser.py',139),
  ('statement -> function_declaration END_LINE','statement',2,'p_statement','parser.py',140),
  ('statement -> return_statement END_LINE','statement',2,'p_statement','parser.py',141),
  ('statement -> break_statement END_LINE','statement',2,'p_statement','parser.py',142),
  ('statement -> COMMENT','statement',1,'p_statement','parser.py',143),
  ('expression -> logical_or_expression','expression',1,'p_expression','parser.py',147),
  ('logical_or_expression -> logical_or_expression LOGICAL_OP_OR logical_and_expression','logical_or_expression',3,'p_logical_or_expression','parser.py',151),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression','parser.py',152),
  ('logical_and_expression -> logical_and_expression LOGICAL_OP_AND equality_expression','logical_and_expression',3,'p_logical_and_expression','parser.py',159),
  ('logical_and_expression -> equality_expression','logical_and_expression',1,'p_logical_and_expression','parser.py',160),
  ('equality_expression -> equality_expression EQUAL_OP relational_expression','equality_expression',3,'p_equality_expression','parser.py',167),
  ('equality_expression -> equality_expression DIFFERENT_OP relational_expression','equality_expression',3,'p_equality_expression','parser.py',168),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','parser.py',169),
  ('relational_expression -> relational_expression LESS_OP additive_expression','relational_expression',3,'p_relational_expression','parser.py',176),
  ('relational_expression -> relational_expression LESS_EQUAL_OP additive_expression','relational_expression',3,'p_relational_expression','parser.py',177),
  ('relational_expression -> relational_expression GREATER_OP additive_expression','relational_expression',3,'p_relational_expression','parser.py',178),
  ('relational_expression -> relational_expression GREATER_EQUAL_OP additive_expression','relational_expression',3,'p_relational_expression','parser.py',179),
  ('relational_expression -> additive_expression','relational_expression',1,'p_relational_expression','parser.py',180),
  ('additive_expression -> additive_expression PLUS_OP multiplicative_expression','additive_expression',3,'p_additive_expression','parser.py',187),
  ('additive_expression -> additive_expression MINUS_OP multiplicative_expression','additive_expression',3,'p_additive_expression','parser.py',188),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','parser.py',189),
  ('multiplicative_expression -> multiplicative_expression MUL_OP unary_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',196),
  ('multiplicative_expression -> multiplicative_expression DIV_OP unary_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',197),
  ('multiplicative_expression -> unary_expression','multiplicative_expression',1,'p_multiplicative_expression','parser.py',198),
  ('unary_expression -> LOGICAL_OP_NOT unary_expression','unary_expression',2,'p_unary_expression','parser.py',205),
  ('unary_expression -> primary_expression','unary_expression',1,'p_unary_expression','parser.py',206),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression','parser.py',213),
  ('primary_expression -> term','primary_expression',1,'p_primary_expression','parser.py',214),
  ('term -> NUMBER_INTEGER','term',1,'p_term','parser.py',221),
  ('term -> NUMBER_FLOAT','term',1,'p_term','parser.py',222),
  ('term -> VARIABLE','term',1,'p_term','parser.py',223),
  ('term -> TRUE','term',1,'p_term','parser.py',224),
  ('term -> FALSE','term',1,'p_term','parser.py',225),
  ('term -> NULL','term',1,'p_term','parser.py',226),
  ('term -> TEXT_STRING','term',1,'p_term','parser.py',227),
  ('term -> TEXT_CHAR','term',1,'p_term','parser.py',228),
  ('assignment -> VARIABLE ASSIGNMENT_OP expression','assignment',3,'p_assignment','parser.py',238),
  ('declaration -> TYPE_BOOLEAN VARIABLE','declaration',2,'p_declaration','parser.py',242),
  ('declaration -> TYPE_STRING VARIABLE','declaration',2,'p_declaration','parser.py',243),
  ('declaration -> TYPE_CHAR VARIABLE','declaration',2,'p_declaration','parser.py',244),
  ('declaration -> TYPE_INTEGER VARIABLE','declaration',2,'p_declaration','parser.py',245),
  ('declaration -> TYPE_FLOAT VARIABLE','declaration',2,'p_declaration','parser.py',246),
  ('declaration -> TYPE_BOOLEAN assignment','declaration',2,'p_declaration','parser.py',247),
  ('declaration -> TYPE_STRING assignment','declaration',2,'p_declaration','parser.py',248),
  ('declaration -> TYPE_CHAR assignment','declaration',2,'p_declaration','parser.py',249),
  ('declaration -> TYPE_INTEGER assignment','declaration',2,'p_declaration','parser.py',250),
  ('declaration -> TYPE_FLOAT assignment','declaration',2,'p_declaration','parser.py',251),
  ('conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list','conditional',6,'p_conditional','parser.py',258),
  ('conditional -> CONDITIONAL1 LPAREN expression RPAREN STRUCTURE_BODY statement_list CONDITIONAL2 STRUCTURE_BODY statement_list','conditional',9,'p_conditional','parser.py',259),
  ('loop -> LOOP1 LPAREN expression RPAREN STRUCTURE_BODY statement_list','loop',6,'p_loop','parser.py',266),
  ('loop -> LOOP2 LPAREN expression SEPARATION expression SEPARATION expression RPAREN STRUCTURE_BODY statement_list','loop',10,'p_loop','parser.py',267),
  ('function_declaration -> FUNCTION_DECLARATION VARIABLE LPAREN RPAREN STRUCTURE_BODY statement_list','function_declaration',6,'p_function_declaration','parser.py',274),
  ('return_statement -> RETURN expression','return_statement',2,'p_return_statement','parser.py',278),
  ('return_statement -> RETURN','return_statement',1,'p_return_statement','parser.py',279),
  ('break_statement -> BREAK','break_statement',1,'p_break_statement','parser.py',286),
  ('comment -> COMMENT','comment',1,'p_comment','parser.py',290),
]
