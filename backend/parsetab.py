
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUS_OPMINUS_OPleftMUL_OPDIV_OPASSIGNMENT_OP BREAK COMMENT CONDITIONAL DIFFERENT_OP DIV_OP END_LINE EQUAL_OP FALSE FUNCTION_DECLARATION GREATER_EQUAL_OP GREATER_OP LESS_EQUAL_OP LESS_OP LOGICAL_OP_AND LOGICAL_OP_NOT LOGICAL_OP_OR LOOP LPAREN MINUS_OP MUL_OP NULL NUMBER_FLOAT NUMBER_INTEGER PLUS_OP RETURN RPAREN SEPARATION STRUCTURE_BODY TEXT_CHAR TEXT_STRING TRUE TYPE_BOOLEAN TYPE_CHAR TYPE_FLOAT TYPE_INTEGER TYPE_STRING VARIABLEprogram : statement_liststatement_list : statement\n                      | statement_list statementstatement : expression_statement\n                 | declaration_statement\n                 | control_structureexpression_statement : expression END_LINEdeclaration_statement : VARIABLE ASSIGNMENT_OP expression END_LINEexpression : arithmetic_expression\n                  | boolean_expression\n                  | variable\n                  | function_callarithmetic_expression : arithmetic_expression PLUS_OP arithmetic_expression\n                             | arithmetic_expression MINUS_OP arithmetic_expression\n                             | arithmetic_expression MUL_OP arithmetic_expression\n                             | arithmetic_expression DIV_OP arithmetic_expression\n                             | factorboolean_expression : boolean_expression LOGICAL_OP_AND boolean_expression\n                          | boolean_expression LOGICAL_OP_OR boolean_expression\n                          | LOGICAL_OP_NOT boolean_expression\n                          | comparisoncomparison : expression LESS_OP expression\n                  | expression GREATER_OP expression\n                  | expression LESS_EQUAL_OP expression\n                  | expression GREATER_EQUAL_OP expression\n                  | expression EQUAL_OP expression\n                  | expression DIFFERENT_OP expressioncontrol_structure : conditional\n                         | loop\n                         | BREAK END_LINE\n                         | RETURN expression END_LINEconditional : CONDITIONAL LPAREN expression RPAREN STRUCTURE_BODY statement_list END_LINEloop : LOOP LPAREN expression RPAREN STRUCTURE_BODY statement_list END_LINEfunction_call : FUNCTION_DECLARATION LPAREN argument_list RPARENargument_list : expression\n                     | argument_list SEPARATION expressionfactor : NUMBER_INTEGER\n              | NUMBER_FLOAT\n              | TEXT_STRING\n              | TEXT_CHAR\n              | TRUE\n              | FALSE\n              | NULLvariable : VARIABLE'
    
_lr_action_items = {'VARIABLE':([0,2,3,4,5,6,9,10,12,20,30,31,32,33,34,35,36,37,38,39,46,47,48,49,52,60,71,75,76,77,79,80,81,82,],[8,8,-2,-4,-5,-6,-28,-29,41,41,-3,-7,41,41,41,41,41,41,41,-30,41,41,41,41,41,-31,-8,41,8,8,8,8,-32,-33,]),'BREAK':([0,2,3,4,5,6,9,10,30,31,39,60,71,76,77,79,80,81,82,],[11,11,-2,-4,-5,-6,-28,-29,-3,-7,-30,-31,-8,11,11,11,11,-32,-33,]),'RETURN':([0,2,3,4,5,6,9,10,30,31,39,60,71,76,77,79,80,81,82,],[12,12,-2,-4,-5,-6,-28,-29,-3,-7,-30,-31,-8,12,12,12,12,-32,-33,]),'CONDITIONAL':([0,2,3,4,5,6,9,10,30,31,39,60,71,76,77,79,80,81,82,],[17,17,-2,-4,-5,-6,-28,-29,-3,-7,-30,-31,-8,17,17,17,17,-32,-33,]),'LOOP':([0,2,3,4,5,6,9,10,30,31,39,60,71,76,77,79,80,81,82,],[18,18,-2,-4,-5,-6,-28,-29,-3,-7,-30,-31,-8,18,18,18,18,-32,-33,]),'LOGICAL_OP_NOT':([0,2,3,4,5,6,9,10,12,20,30,31,32,33,34,35,36,37,38,39,46,47,48,49,52,60,71,75,76,77,79,80,81,82,],[20,20,-2,-4,-5,-6,-28,-29,20,20,-3,-7,20,20,20,20,20,20,20,-30,20,20,20,20,20,-31,-8,20,20,20,20,20,-32,-33,]),'FUNCTION_DECLARATION':([0,2,3,4,5,6,9,10,12,20,30,31,32,33,34,35,36,37,38,39,46,47,48,49,52,60,71,75,76,77,79,80,81,82,],[22,22,-2,-4,-5,-6,-28,-29,22,22,-3,-7,22,22,22,22,22,22,22,-30,22,22,22,22,22,-31,-8,22,22,22,22,22,-32,-33,]),'NUMBER_INTEGER':([0,2,3,4,5,6,9,10,12,20,30,31,32,33,34,35,36,37,38,39,42,43,44,45,46,47,48,49,52,60,71,75,76,77,79,80,81,82,],[23,23,-2,-4,-5,-6,-28,-29,23,23,-3,-7,23,23,23,23,23,23,23,-30,23,23,23,23,23,23,23,23,23,-31,-8,23,23,23,23,23,-32,-33,]),'NUMBER_FLOAT':([0,2,3,4,5,6,9,10,12,20,30,31,32,33,34,35,36,37,38,39,42,43,44,45,46,47,48,49,52,60,71,75,76,77,79,80,81,82,],[24,24,-2,-4,-5,-6,-28,-29,24,24,-3,-7,24,24,24,24,24,24,24,-30,24,24,24,24,24,24,24,24,24,-31,-8,24,24,24,24,24,-32,-33,]),'TEXT_STRING':([0,2,3,4,5,6,9,10,12,20,30,31,32,33,34,35,36,37,38,39,42,43,44,45,46,47,48,49,52,60,71,75,76,77,79,80,81,82,],[25,25,-2,-4,-5,-6,-28,-29,25,25,-3,-7,25,25,25,25,25,25,25,-30,25,25,25,25,25,25,25,25,25,-31,-8,25,25,25,25,25,-32,-33,]),'TEXT_CHAR':([0,2,3,4,5,6,9,10,12,20,30,31,32,33,34,35,36,37,38,39,42,43,44,45,46,47,48,49,52,60,71,75,76,77,79,80,81,82,],[26,26,-2,-4,-5,-6,-28,-29,26,26,-3,-7,26,26,26,26,26,26,26,-30,26,26,26,26,26,26,26,26,26,-31,-8,26,26,26,26,26,-32,-33,]),'TRUE':([0,2,3,4,5,6,9,10,12,20,30,31,32,33,34,35,36,37,38,39,42,43,44,45,46,47,48,49,52,60,71,75,76,77,79,80,81,82,],[27,27,-2,-4,-5,-6,-28,-29,27,27,-3,-7,27,27,27,27,27,27,27,-30,27,27,27,27,27,27,27,27,27,-31,-8,27,27,27,27,27,-32,-33,]),'FALSE':([0,2,3,4,5,6,9,10,12,20,30,31,32,33,34,35,36,37,38,39,42,43,44,45,46,47,48,49,52,60,71,75,76,77,79,80,81,82,],[28,28,-2,-4,-5,-6,-28,-29,28,28,-3,-7,28,28,28,28,28,28,28,-30,28,28,28,28,28,28,28,28,28,-31,-8,28,28,28,28,28,-32,-33,]),'NULL':([0,2,3,4,5,6,9,10,12,20,30,31,32,33,34,35,36,37,38,39,42,43,44,45,46,47,48,49,52,60,71,75,76,77,79,80,81,82,],[29,29,-2,-4,-5,-6,-28,-29,29,29,-3,-7,29,29,29,29,29,29,29,-30,29,29,29,29,29,29,29,29,29,-31,-8,29,29,29,29,29,-32,-33,]),'$end':([1,2,3,4,5,6,9,10,30,31,39,60,71,81,82,],[0,-1,-2,-4,-5,-6,-28,-29,-3,-7,-30,-31,-8,-32,-33,]),'END_LINE':([3,4,5,6,7,8,9,10,11,13,14,15,16,19,21,23,24,25,26,27,28,29,30,31,39,40,41,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,71,74,79,80,81,82,],[-2,-4,-5,-6,31,-44,-28,-29,39,-9,-10,-11,-12,-17,-21,-37,-38,-39,-40,-41,-42,-43,-3,-7,-30,60,-44,-20,-22,-23,-24,-25,-26,-27,71,-31,-13,-14,-15,-16,-18,-19,-8,-34,81,82,-32,-33,]),'LESS_OP':([7,8,13,14,15,16,19,21,23,24,25,26,27,28,29,40,41,50,51,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,70,74,78,],[32,-44,-9,-10,-11,-12,-17,-21,-37,-38,-39,-40,-41,-42,-43,32,-44,-10,32,32,32,32,32,32,32,32,-13,-14,-15,-16,-10,-10,32,32,32,-34,32,]),'GREATER_OP':([7,8,13,14,15,16,19,21,23,24,25,26,27,28,29,40,41,50,51,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,70,74,78,],[33,-44,-9,-10,-11,-12,-17,-21,-37,-38,-39,-40,-41,-42,-43,33,-44,-10,33,33,33,33,33,33,33,33,-13,-14,-15,-16,-10,-10,33,33,33,-34,33,]),'LESS_EQUAL_OP':([7,8,13,14,15,16,19,21,23,24,25,26,27,28,29,40,41,50,51,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,70,74,78,],[34,-44,-9,-10,-11,-12,-17,-21,-37,-38,-39,-40,-41,-42,-43,34,-44,-10,34,34,34,34,34,34,34,34,-13,-14,-15,-16,-10,-10,34,34,34,-34,34,]),'GREATER_EQUAL_OP':([7,8,13,14,15,16,19,21,23,24,25,26,27,28,29,40,41,50,51,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,70,74,78,],[35,-44,-9,-10,-11,-12,-17,-21,-37,-38,-39,-40,-41,-42,-43,35,-44,-10,35,35,35,35,35,35,35,35,-13,-14,-15,-16,-10,-10,35,35,35,-34,35,]),'EQUAL_OP':([7,8,13,14,15,16,19,21,23,24,25,26,27,28,29,40,41,50,51,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,70,74,78,],[36,-44,-9,-10,-11,-12,-17,-21,-37,-38,-39,-40,-41,-42,-43,36,-44,-10,36,36,36,36,36,36,36,36,-13,-14,-15,-16,-10,-10,36,36,36,-34,36,]),'DIFFERENT_OP':([7,8,13,14,15,16,19,21,23,24,25,26,27,28,29,40,41,50,51,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,70,74,78,],[37,-44,-9,-10,-11,-12,-17,-21,-37,-38,-39,-40,-41,-42,-43,37,-44,-10,37,37,37,37,37,37,37,37,-13,-14,-15,-16,-10,-10,37,37,37,-34,37,]),'ASSIGNMENT_OP':([8,],[38,]),'LOGICAL_OP_AND':([13,14,15,16,19,21,23,24,25,26,27,28,29,41,50,53,54,55,56,57,58,61,62,63,64,65,66,74,],[-9,46,-11,-12,-17,-21,-37,-38,-39,-40,-41,-42,-43,-44,46,-22,-23,-24,-25,-26,-27,-13,-14,-15,-16,46,46,-34,]),'LOGICAL_OP_OR':([13,14,15,16,19,21,23,24,25,26,27,28,29,41,50,53,54,55,56,57,58,61,62,63,64,65,66,74,],[-9,47,-11,-12,-17,-21,-37,-38,-39,-40,-41,-42,-43,-44,47,-22,-23,-24,-25,-26,-27,-13,-14,-15,-16,47,47,-34,]),'RPAREN':([13,14,15,16,19,21,23,24,25,26,27,28,29,41,50,53,54,55,56,57,58,61,62,63,64,65,66,67,68,69,70,74,78,],[-9,-10,-11,-12,-17,-21,-37,-38,-39,-40,-41,-42,-43,-44,-20,-22,-23,-24,-25,-26,-27,-13,-14,-15,-16,-18,-19,72,73,74,-35,-34,-36,]),'SEPARATION':([13,14,15,16,19,21,23,24,25,26,27,28,29,41,50,53,54,55,56,57,58,61,62,63,64,65,66,69,70,74,78,],[-9,-10,-11,-12,-17,-21,-37,-38,-39,-40,-41,-42,-43,-44,-20,-22,-23,-24,-25,-26,-27,-13,-14,-15,-16,-18,-19,75,-35,-34,-36,]),'PLUS_OP':([13,19,23,24,25,26,27,28,29,61,62,63,64,],[42,-17,-37,-38,-39,-40,-41,-42,-43,-13,-14,-15,-16,]),'MINUS_OP':([13,19,23,24,25,26,27,28,29,61,62,63,64,],[43,-17,-37,-38,-39,-40,-41,-42,-43,-13,-14,-15,-16,]),'MUL_OP':([13,19,23,24,25,26,27,28,29,61,62,63,64,],[44,-17,-37,-38,-39,-40,-41,-42,-43,44,44,-15,-16,]),'DIV_OP':([13,19,23,24,25,26,27,28,29,61,62,63,64,],[45,-17,-37,-38,-39,-40,-41,-42,-43,45,45,-15,-16,]),'LPAREN':([17,18,22,],[48,49,52,]),'STRUCTURE_BODY':([72,73,],[76,77,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,76,77,],[2,79,80,]),'statement':([0,2,76,77,79,80,],[3,30,3,3,30,30,]),'expression_statement':([0,2,76,77,79,80,],[4,4,4,4,4,4,]),'declaration_statement':([0,2,76,77,79,80,],[5,5,5,5,5,5,]),'control_structure':([0,2,76,77,79,80,],[6,6,6,6,6,6,]),'expression':([0,2,12,20,32,33,34,35,36,37,38,46,47,48,49,52,75,76,77,79,80,],[7,7,40,51,53,54,55,56,57,58,59,51,51,67,68,70,78,7,7,7,7,]),'conditional':([0,2,76,77,79,80,],[9,9,9,9,9,9,]),'loop':([0,2,76,77,79,80,],[10,10,10,10,10,10,]),'arithmetic_expression':([0,2,12,20,32,33,34,35,36,37,38,42,43,44,45,46,47,48,49,52,75,76,77,79,80,],[13,13,13,13,13,13,13,13,13,13,13,61,62,63,64,13,13,13,13,13,13,13,13,13,13,]),'boolean_expression':([0,2,12,20,32,33,34,35,36,37,38,46,47,48,49,52,75,76,77,79,80,],[14,14,14,50,14,14,14,14,14,14,14,65,66,14,14,14,14,14,14,14,14,]),'variable':([0,2,12,20,32,33,34,35,36,37,38,46,47,48,49,52,75,76,77,79,80,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'function_call':([0,2,12,20,32,33,34,35,36,37,38,46,47,48,49,52,75,76,77,79,80,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'factor':([0,2,12,20,32,33,34,35,36,37,38,42,43,44,45,46,47,48,49,52,75,76,77,79,80,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'comparison':([0,2,12,20,32,33,34,35,36,37,38,46,47,48,49,52,75,76,77,79,80,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'argument_list':([52,],[69,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',53),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',57),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',58),
  ('statement -> expression_statement','statement',1,'p_statement','parser.py',65),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',66),
  ('statement -> control_structure','statement',1,'p_statement','parser.py',67),
  ('expression_statement -> expression END_LINE','expression_statement',2,'p_expression_statement','parser.py',71),
  ('declaration_statement -> VARIABLE ASSIGNMENT_OP expression END_LINE','declaration_statement',4,'p_declaration_statement','parser.py',75),
  ('expression -> arithmetic_expression','expression',1,'p_expression','parser.py',79),
  ('expression -> boolean_expression','expression',1,'p_expression','parser.py',80),
  ('expression -> variable','expression',1,'p_expression','parser.py',81),
  ('expression -> function_call','expression',1,'p_expression','parser.py',82),
  ('arithmetic_expression -> arithmetic_expression PLUS_OP arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','parser.py',86),
  ('arithmetic_expression -> arithmetic_expression MINUS_OP arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','parser.py',87),
  ('arithmetic_expression -> arithmetic_expression MUL_OP arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','parser.py',88),
  ('arithmetic_expression -> arithmetic_expression DIV_OP arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','parser.py',89),
  ('arithmetic_expression -> factor','arithmetic_expression',1,'p_arithmetic_expression','parser.py',90),
  ('boolean_expression -> boolean_expression LOGICAL_OP_AND boolean_expression','boolean_expression',3,'p_boolean_expression','parser.py',97),
  ('boolean_expression -> boolean_expression LOGICAL_OP_OR boolean_expression','boolean_expression',3,'p_boolean_expression','parser.py',98),
  ('boolean_expression -> LOGICAL_OP_NOT boolean_expression','boolean_expression',2,'p_boolean_expression','parser.py',99),
  ('boolean_expression -> comparison','boolean_expression',1,'p_boolean_expression','parser.py',100),
  ('comparison -> expression LESS_OP expression','comparison',3,'p_comparison','parser.py',109),
  ('comparison -> expression GREATER_OP expression','comparison',3,'p_comparison','parser.py',110),
  ('comparison -> expression LESS_EQUAL_OP expression','comparison',3,'p_comparison','parser.py',111),
  ('comparison -> expression GREATER_EQUAL_OP expression','comparison',3,'p_comparison','parser.py',112),
  ('comparison -> expression EQUAL_OP expression','comparison',3,'p_comparison','parser.py',113),
  ('comparison -> expression DIFFERENT_OP expression','comparison',3,'p_comparison','parser.py',114),
  ('control_structure -> conditional','control_structure',1,'p_control_structure','parser.py',118),
  ('control_structure -> loop','control_structure',1,'p_control_structure','parser.py',119),
  ('control_structure -> BREAK END_LINE','control_structure',2,'p_control_structure','parser.py',120),
  ('control_structure -> RETURN expression END_LINE','control_structure',3,'p_control_structure','parser.py',121),
  ('conditional -> CONDITIONAL LPAREN expression RPAREN STRUCTURE_BODY statement_list END_LINE','conditional',7,'p_conditional','parser.py',130),
  ('loop -> LOOP LPAREN expression RPAREN STRUCTURE_BODY statement_list END_LINE','loop',7,'p_loop','parser.py',134),
  ('function_call -> FUNCTION_DECLARATION LPAREN argument_list RPAREN','function_call',4,'p_function_call','parser.py',138),
  ('argument_list -> expression','argument_list',1,'p_argument_list','parser.py',142),
  ('argument_list -> argument_list SEPARATION expression','argument_list',3,'p_argument_list','parser.py',143),
  ('factor -> NUMBER_INTEGER','factor',1,'p_factor','parser.py',150),
  ('factor -> NUMBER_FLOAT','factor',1,'p_factor','parser.py',151),
  ('factor -> TEXT_STRING','factor',1,'p_factor','parser.py',152),
  ('factor -> TEXT_CHAR','factor',1,'p_factor','parser.py',153),
  ('factor -> TRUE','factor',1,'p_factor','parser.py',154),
  ('factor -> FALSE','factor',1,'p_factor','parser.py',155),
  ('factor -> NULL','factor',1,'p_factor','parser.py',156),
  ('variable -> VARIABLE','variable',1,'p_variable','parser.py',160),
]
